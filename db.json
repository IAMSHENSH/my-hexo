{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/images/android-scale.png","path":"images/android-scale.png","modified":0,"renderable":0},{"_id":"source/images/linux-swap.JPG","path":"images/linux-swap.JPG","modified":0,"renderable":0},{"_id":"source/images/my-avatar.jpg","path":"images/my-avatar.jpg","modified":0,"renderable":0},{"_id":"source/images/android-scale-title.jpg","path":"images/android-scale-title.jpg","modified":0,"renderable":0},{"_id":"themes/next-6/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next-6/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next-6/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/favicon.ico","hash":"4cf0249ada1e66442e3256e75d4dcf37a0c54d9f","modified":1537255753731},{"_id":"themes/next-6/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1537255753758},{"_id":"themes/next-6/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1537255753758},{"_id":"themes/next-6/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1537255753758},{"_id":"themes/next-6/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1537255753758},{"_id":"themes/next-6/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1537255753758},{"_id":"themes/next-6/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1537255753758},{"_id":"themes/next-6/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1537255753758},{"_id":"themes/next-6/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1537255753758},{"_id":"themes/next-6/README.md","hash":"c1d6d1c6b75736b892e179865833ea58da5ca9d2","modified":1537255753759},{"_id":"themes/next-6/_config.yml","hash":"773cb9e989bb10a6ccd4363ec2d39e61c5a5d058","modified":1537255753759},{"_id":"themes/next-6/bower.json","hash":"5391684ba84fe633bc7877ab711a7d8a0072ceda","modified":1537255753759},{"_id":"themes/next-6/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1537255753759},{"_id":"themes/next-6/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1537255753833},{"_id":"themes/next-6/package.json","hash":"9acf6b8c8194f8a366025c8aab64d236908e62a1","modified":1537255753837},{"_id":"source/_posts/Docker-Front-dev.md","hash":"4f7fca7b822b07867b644052d7e0cf13108e6146","modified":1537255753730},{"_id":"source/_posts/Docker-Python-HTTP服务.md","hash":"b4c17a7aee7f983a30a6aeb8dcfc3511c7a77baf","modified":1537255753730},{"_id":"source/_posts/Docker-image-导出载入.md","hash":"96eaefa129aefb8a206cd75a539beee22b0d9ba7","modified":1537255753730},{"_id":"source/_posts/Git-仓库独立运动.md","hash":"1d6c4f3034ad387bc691d250c56e612cc02bff05","modified":1537255753730},{"_id":"source/_posts/Git-仓库迁移.md","hash":"9a5b1a7c287aa9f9dd88f1a1ceff2c8ccbb4a332","modified":1537255753730},{"_id":"source/_posts/Git-新仓库初始化流程.md","hash":"9e25cc89640cf722c1f19b487c10f183b4956717","modified":1537255753730},{"_id":"source/_posts/Linux-change-swap.md","hash":"21fa42d2b26c390a03081205c2b575bfce70fe01","modified":1537255753730},{"_id":"source/_posts/Linux-free-cache.md","hash":"1975e0d7236f1cc6ba9494ef70573f409b723097","modified":1537255753730},{"_id":"source/_posts/android-selector.md","hash":"1a851c853ed3cb9a5c031fccf29c2e4ca1c5277a","modified":1537255753730},{"_id":"source/_posts/android-卡片背景.md","hash":"24e3d2187906bc7790aed0424b20e5da8431a75e","modified":1537255753730},{"_id":"source/_posts/android-自定义比例尺控件.md","hash":"0183f7b157214a1e0b7a7ed6d376cb185830984f","modified":1537255753730},{"_id":"source/_posts/vue工程添加页面.md","hash":"551ee6e56bf868f9c018a33c8634501fa0c9ade1","modified":1537255753730},{"_id":"source/_posts/服务器-离线搭建-Gogs.md","hash":"b3750c3f8c6a083de84c6eac5301f51e1af81628","modified":1537255753730},{"_id":"source/_posts/服务器-离线虚拟机增加内存.md","hash":"a32e21f6441bdeab5d8893204186f8f94fd966ad","modified":1537255753730},{"_id":"source/_posts/服务器-离线部署-Jenkins.md","hash":"1c879f808b249872af8c5faf1093c3acb1278183","modified":1537255753730},{"_id":"source/_posts/服务器-资料备份.md","hash":"3ab2a901815866dbfa3a65607995a15482ea4eb3","modified":1537255753730},{"_id":"source/about/index.md","hash":"80b794aff0e4332656df2eeb59c4f0aa18760d2a","modified":1537255753730},{"_id":"source/categories/index.md","hash":"7e03facb4f4ed7d0509a9fde1e5fba5f40a3d83c","modified":1537255753730},{"_id":"source/images/android-scale.png","hash":"95fe522891f967d81b728a2ec39006d1dec9fec3","modified":1537255753731},{"_id":"source/images/linux-swap.JPG","hash":"4011aa23fe210488e22d2c2eaeb17c7bd9bbf324","modified":1537255753732},{"_id":"source/images/my-avatar.jpg","hash":"b1245f2b592c8e2628d324042dde3cda87f9c9a8","modified":1537255753732},{"_id":"source/sitemap/index.md","hash":"ffaf636d757aa008ce6ca35f59ce0e4c2e88eab2","modified":1537255753732},{"_id":"source/tags/index.md","hash":"15214774ded5622ad5d0a39d987fbe89b93e330a","modified":1537255753732},{"_id":"themes/next-6/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1537255753758},{"_id":"themes/next-6/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1537255753758},{"_id":"themes/next-6/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1537255753758},{"_id":"themes/next-6/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1537255753758},{"_id":"themes/next-6/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1537255753758},{"_id":"themes/next-6/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1537255753758},{"_id":"themes/next-6/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1537255753832},{"_id":"themes/next-6/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1537255753832},{"_id":"themes/next-6/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1537255753832},{"_id":"themes/next-6/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1537255753832},{"_id":"themes/next-6/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1537255753832},{"_id":"themes/next-6/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1537255753832},{"_id":"themes/next-6/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1537255753832},{"_id":"themes/next-6/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1537255753832},{"_id":"themes/next-6/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1537255753832},{"_id":"themes/next-6/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1537255753833},{"_id":"themes/next-6/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1537255753834},{"_id":"themes/next-6/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1537255753834},{"_id":"themes/next-6/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1537255753834},{"_id":"themes/next-6/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1537255753834},{"_id":"themes/next-6/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1537255753834},{"_id":"themes/next-6/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1537255753834},{"_id":"themes/next-6/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1537255753834},{"_id":"themes/next-6/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1537255753834},{"_id":"themes/next-6/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1537255753834},{"_id":"themes/next-6/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1537255753834},{"_id":"themes/next-6/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1537255753834},{"_id":"themes/next-6/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1537255753834},{"_id":"themes/next-6/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1537255753834},{"_id":"themes/next-6/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1537255753834},{"_id":"themes/next-6/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1537255753834},{"_id":"themes/next-6/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1537255753834},{"_id":"themes/next-6/layout/_layout.swig","hash":"1b59036ccb2ad571503b94587f458fad46775642","modified":1537255753834},{"_id":"themes/next-6/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1537255753837},{"_id":"themes/next-6/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1537255753837},{"_id":"themes/next-6/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1537255753837},{"_id":"themes/next-6/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1537255753837},{"_id":"themes/next-6/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1537255753837},{"_id":"themes/next-6/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1537255753837},{"_id":"themes/next-6/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1537255753837},{"_id":"themes/next-6/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1537255753837},{"_id":"themes/next-6/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1537255753838},{"_id":"themes/next-6/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1537255753838},{"_id":"themes/next-6/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1537255753847},{"_id":"themes/next-6/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1537255753847},{"_id":"themes/next-6/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1537255753847},{"_id":"themes/next-6/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537255753843},{"_id":"source/images/android-scale-title.jpg","hash":"4c7eb7361be687ae3ee6cc6c8f44743f2d82b8d2","modified":1537255753731},{"_id":"themes/next-6/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1537255753832},{"_id":"themes/next-6/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1537255753832},{"_id":"themes/next-6/docs/ru/README.md","hash":"edfe0cfb8b2c9f0effd3beb868af9bfd0fabb3a6","modified":1537255753832},{"_id":"themes/next-6/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1537255753833},{"_id":"themes/next-6/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1537255753833},{"_id":"themes/next-6/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1537255753833},{"_id":"themes/next-6/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1537255753833},{"_id":"themes/next-6/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1537255753833},{"_id":"themes/next-6/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1537255753833},{"_id":"themes/next-6/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1537255753833},{"_id":"themes/next-6/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1537255753833},{"_id":"themes/next-6/docs/zh-CN/README.md","hash":"46b264623af21211a0a9c4ba0cf1318a80eeb9fb","modified":1537255753833},{"_id":"themes/next-6/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1537255753833},{"_id":"themes/next-6/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1537255753834},{"_id":"themes/next-6/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1537255753834},{"_id":"themes/next-6/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1537255753834},{"_id":"themes/next-6/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1537255753834},{"_id":"themes/next-6/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1537255753834},{"_id":"themes/next-6/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1537255753835},{"_id":"themes/next-6/layout/_macro/post.swig","hash":"27922af64ecb9db9a28bcf1c98fb68b26bf0b67a","modified":1537255753835},{"_id":"themes/next-6/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1537255753835},{"_id":"themes/next-6/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1537255753835},{"_id":"themes/next-6/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/footer.swig","hash":"05cdaf9b6cb32afd442b228cd247aaf9468a31ed","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1537255753835},{"_id":"themes/next-6/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1537255753836},{"_id":"themes/next-6/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1537255753836},{"_id":"themes/next-6/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1537255753836},{"_id":"themes/next-6/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1537255753837},{"_id":"themes/next-6/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1537255753838},{"_id":"themes/next-6/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1537255753838},{"_id":"themes/next-6/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1537255753838},{"_id":"themes/next-6/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1537255753838},{"_id":"themes/next-6/scripts/tags/group-pictures.js","hash":"1d59b968af4b8d147f8bc9bc295d596e41be8348","modified":1537255753838},{"_id":"themes/next-6/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1537255753838},{"_id":"themes/next-6/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1537255753838},{"_id":"themes/next-6/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1537255753838},{"_id":"themes/next-6/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1537255753838},{"_id":"themes/next-6/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1537255753843},{"_id":"themes/next-6/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1537255753843},{"_id":"themes/next-6/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1537255753843},{"_id":"themes/next-6/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1537255753843},{"_id":"themes/next-6/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537255753843},{"_id":"themes/next-6/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537255753843},{"_id":"themes/next-6/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537255753843},{"_id":"themes/next-6/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537255753844},{"_id":"themes/next-6/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537255753844},{"_id":"themes/next-6/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537255753844},{"_id":"themes/next-6/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537255753844},{"_id":"themes/next-6/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1537255753844},{"_id":"themes/next-6/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1537255753844},{"_id":"themes/next-6/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537255753844},{"_id":"themes/next-6/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1537255753844},{"_id":"themes/next-6/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537255753844},{"_id":"themes/next-6/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1537255753844},{"_id":"themes/next-6/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1537255753844},{"_id":"themes/next-6/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1537255753844},{"_id":"themes/next-6/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537255753836},{"_id":"themes/next-6/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537255753836},{"_id":"themes/next-6/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537255753841},{"_id":"themes/next-6/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537255753841},{"_id":"themes/next-6/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537255753841},{"_id":"themes/next-6/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537255753843},{"_id":"themes/next-6/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537255753843},{"_id":"themes/next-6/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1537255753834},{"_id":"themes/next-6/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1537255753834},{"_id":"themes/next-6/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1537255753835},{"_id":"themes/next-6/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1537255753835},{"_id":"themes/next-6/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1537255753836},{"_id":"themes/next-6/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1537255753836},{"_id":"themes/next-6/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/comments/disqus.swig","hash":"8878241797f8494a70968756c57cacdfc77b61c7","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1537255753836},{"_id":"themes/next-6/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1537255753837},{"_id":"themes/next-6/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1537255753841},{"_id":"themes/next-6/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1537255753841},{"_id":"themes/next-6/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1537255753841},{"_id":"themes/next-6/source/css/_mixins/base.styl","hash":"51c2907e5c50c2614419b670fbdec183ae7f7f5d","modified":1537255753841},{"_id":"themes/next-6/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1537255753843},{"_id":"themes/next-6/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1537255753843},{"_id":"themes/next-6/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1537255753843},{"_id":"themes/next-6/source/css/_variables/base.styl","hash":"0b43ddd92e395342703550f629699c5e591fd68b","modified":1537255753843},{"_id":"themes/next-6/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1537255753844},{"_id":"themes/next-6/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1537255753844},{"_id":"themes/next-6/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1537255753844},{"_id":"themes/next-6/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1537255753844},{"_id":"themes/next-6/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1537255753844},{"_id":"themes/next-6/source/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1537255753844},{"_id":"themes/next-6/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1537255753844},{"_id":"themes/next-6/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1537255753845},{"_id":"themes/next-6/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1537255753845},{"_id":"themes/next-6/source/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1537255753845},{"_id":"themes/next-6/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1537255753847},{"_id":"themes/next-6/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1537255753847},{"_id":"themes/next-6/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1537255753847},{"_id":"themes/next-6/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1537255753845},{"_id":"themes/next-6/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1537255753837},{"_id":"themes/next-6/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1537255753837},{"_id":"themes/next-6/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1537255753838},{"_id":"themes/next-6/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1537255753838},{"_id":"themes/next-6/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1537255753838},{"_id":"themes/next-6/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1537255753838},{"_id":"themes/next-6/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1537255753838},{"_id":"themes/next-6/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1537255753841},{"_id":"themes/next-6/source/css/_schemes/Gemini/index.styl","hash":"fca5320e2644edcd663888863899d1b80352439b","modified":1537255753841},{"_id":"themes/next-6/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1537255753843},{"_id":"themes/next-6/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1537255753843},{"_id":"themes/next-6/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1537255753843},{"_id":"themes/next-6/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1537255753843},{"_id":"themes/next-6/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1537255753843},{"_id":"themes/next-6/source/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1537255753844},{"_id":"themes/next-6/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1537255753839},{"_id":"themes/next-6/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/post/post.styl","hash":"ed9608d2740a33664eb703f806c218a4fc520087","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e18b90c97aaff027e795f5a0cb10476a71bf1c3a","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/tags/exturl.styl","hash":"cf2185a0ea170fd8450f592e859a6c941141e5ee","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1537255753840},{"_id":"themes/next-6/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1537255753841},{"_id":"themes/next-6/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1537255753841},{"_id":"themes/next-6/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1537255753842},{"_id":"themes/next-6/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1537255753842},{"_id":"themes/next-6/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1537255753846},{"_id":"public/search.xml","hash":"f81f6f0bc5a29600d61ae031331ff72a34b3b132","modified":1537256372367},{"_id":"public/about/index.html","hash":"a1f640a3f633a13c6955f5d268d3e9a26ba3d3ce","modified":1537256372403},{"_id":"public/categories/index.html","hash":"30af7d5cffcb5a09f12f1265a0559bdf64d4367f","modified":1537256372403},{"_id":"public/sitemap/index.html","hash":"aa48bee7db3efae50ba48619c0e6b486f57b7994","modified":1537256372403},{"_id":"public/tags/index.html","hash":"aaa5091bf25d82cfd0d3e661a92e83484e5550c5","modified":1537256372403},{"_id":"public/2018/07/10/Docker-Front-dev/index.html","hash":"71c962d940b60c864c88d96545afdfca069c9e80","modified":1537256372403},{"_id":"public/2018/06/07/vue工程添加页面/index.html","hash":"2ac5f6026dbd514fa4609947d824609931f1e28c","modified":1537256372403},{"_id":"public/2018/04/29/Docker-Python-HTTP服务/index.html","hash":"56992a43231c1f3242aecb67f24c406afc44776c","modified":1537256372404},{"_id":"public/2017/09/28/服务器-资料备份/index.html","hash":"e24a58a84dda6d521a81599e9e9745be086c0287","modified":1537256372404},{"_id":"public/2017/09/27/android-卡片背景/index.html","hash":"128c0d44c726e7b615c00e130de2ee6030d5ba90","modified":1537256372404},{"_id":"public/2017/09/27/android-selector/index.html","hash":"677abd3f4c957e0f3c902bada4a80f96a5b3f9ca","modified":1537256372404},{"_id":"public/2017/09/22/android-自定义比例尺控件/index.html","hash":"24848867844860375f226addc790d7a2a0a26fbc","modified":1537256372404},{"_id":"public/2017/09/11/Linux-free-cache/index.html","hash":"e37d21e91be4ccf69decee1ae6f1d6595f9dfc5b","modified":1537256372404},{"_id":"public/2017/09/11/Linux-change-swap/index.html","hash":"76d38c76fe42fdc07085fd572850ba96e0959da2","modified":1537256372404},{"_id":"public/2017/09/11/Git-新仓库初始化流程/index.html","hash":"7b868a5677c87f8a19a4efc3459f0a40c6c29c04","modified":1537256372405},{"_id":"public/2017/09/11/Git-仓库迁移/index.html","hash":"d27d89cbb72852acc25d6d1d6e0ec4039aa9ee13","modified":1537256372405},{"_id":"public/2017/09/11/服务器-离线搭建-Gogs/index.html","hash":"44adedbaab460f022bce71b03d31ecd07e85f0f5","modified":1537256372405},{"_id":"public/2017/09/11/服务器-离线虚拟机增加内存/index.html","hash":"e7b35de71b2d5523b6d2a44145f139513d008123","modified":1537256372405},{"_id":"public/2017/09/11/服务器-离线部署-Jenkins/index.html","hash":"c6da792d7197cb04806e45a3aca810f3e0735974","modified":1537256372405},{"_id":"public/2017/09/11/Docker-image-导出载入/index.html","hash":"b9d530ad8c24eab796c2407ad0d9ac4f987ca333","modified":1537256372405},{"_id":"public/2017/09/11/Git-仓库独立运动/index.html","hash":"c5be162e54540f92ef5a8a0836d123e85cea8b64","modified":1537256372405},{"_id":"public/archives/index.html","hash":"8b93c197242ab0c2d613f1d4c8584df5347af3e1","modified":1537256372405},{"_id":"public/archives/page/2/index.html","hash":"fb81db60c6d8a5e31f9def8dd8d8a95dd45fd343","modified":1537256372405},{"_id":"public/archives/2017/index.html","hash":"6031fa3cc164b8ba31e45f60547045e0d585ab9f","modified":1537256372405},{"_id":"public/archives/2017/page/2/index.html","hash":"f583897c7e1db6dffd40ab433b91616372e9c220","modified":1537256372410},{"_id":"public/archives/2017/09/index.html","hash":"e4878bc58afd0deb67540aa498c8cbef97b24d2d","modified":1537256372410},{"_id":"public/archives/2017/09/page/2/index.html","hash":"b041fb1d893f41a4f334b684e84d48f8c56c4808","modified":1537256372410},{"_id":"public/archives/2018/index.html","hash":"fcba8f94d895afd71a45b42a12e091673c1e3d7b","modified":1537256372411},{"_id":"public/archives/2018/04/index.html","hash":"bbfda141f4af042a90f9d029ec6cd66c9a468436","modified":1537256372411},{"_id":"public/archives/2018/06/index.html","hash":"80ccf91acc18afcf1bc4c89b89e4db541a7324f7","modified":1537256372411},{"_id":"public/archives/2018/07/index.html","hash":"e880a403679155cc213e586589e431df9930dc0d","modified":1537256372411},{"_id":"public/categories/Docker/index.html","hash":"05a8b76e8b02d329ef0f03cd65ea28d096da61dc","modified":1537256372411},{"_id":"public/categories/Git/index.html","hash":"a8b5f72933b7111b78660cee09f45e992621d17a","modified":1537256372411},{"_id":"public/categories/Linux/index.html","hash":"935d7aa25c576b945212ed5cf2fd9e9d25860d75","modified":1537256372411},{"_id":"public/categories/Android/index.html","hash":"3bb2ea1f3118409080c055a7691104a7c97f47c3","modified":1537256372411},{"_id":"public/categories/Front-end/index.html","hash":"f168680b65c752f78eb5fdb6ad7f1befbf1f1efc","modified":1537256372411},{"_id":"public/categories/Server/index.html","hash":"262001b80fbbc5ea6f57cdb6ec51401f94123fce","modified":1537256372411},{"_id":"public/index.html","hash":"95ade2ac6bd4d3ac3d9806b0c1541690ecdad483","modified":1537256372411},{"_id":"public/page/2/index.html","hash":"6b2914cccc440b10d13057be72af4c082502a722","modified":1537256372411},{"_id":"public/tags/Docker/index.html","hash":"3bdde1ec3232a88f67d50a63912cb71e34b08ba3","modified":1537256372411},{"_id":"public/tags/Front/index.html","hash":"96adfab46698006f2c88cf52b666037a3ce782b7","modified":1537256372412},{"_id":"public/tags/Yarn/index.html","hash":"2916d5c741dc2daa2c32a476ad7168b92428a48e","modified":1537256372412},{"_id":"public/tags/Nodejs/index.html","hash":"83beb0e01790c07c6b13bd76e7b71bc85ad6f969","modified":1537256372412},{"_id":"public/tags/Python/index.html","hash":"de3db191ee31cc748a694028e2e0fa2036e53824","modified":1537256372412},{"_id":"public/tags/Hexo/index.html","hash":"322d86f99bec4de7101c50de468fb87f374d3e8c","modified":1537256372412},{"_id":"public/tags/docker/index.html","hash":"20fcfb7ba77b4afa95e92b89cc4d8f46daba0fe6","modified":1537256372412},{"_id":"public/tags/load/index.html","hash":"6e6db1ba20e97a564f9284b794ab73a20f4ec1ac","modified":1537256372412},{"_id":"public/tags/export/index.html","hash":"4e830cd22047a9400f96c377e15e7d78985a98e8","modified":1537256372412},{"_id":"public/tags/git/index.html","hash":"07fc105a972be038cc661290547d365266fe0935","modified":1537256372412},{"_id":"public/tags/submodule/index.html","hash":"e831e9f57054263205ba72846990fbffd5abd213","modified":1537256372412},{"_id":"public/tags/note/index.html","hash":"9a177ac2dba126c0a1554b0b5a9a38eb9f1d8649","modified":1537256372412},{"_id":"public/tags/note/page/2/index.html","hash":"9278a9e3d77bd26d7e916f5ed92f0f4a1853bad7","modified":1537256372412},{"_id":"public/tags/swap/index.html","hash":"0edb40c925f6b165d6cd73df5a39aca6658af5f7","modified":1537256372413},{"_id":"public/tags/cache/index.html","hash":"6801b4fac7697c9b112c6bd98c64de2103734f41","modified":1537256372413},{"_id":"public/tags/android/index.html","hash":"54c801dd8326ed89926d09d5b06123346961b919","modified":1537256372413},{"_id":"public/tags/sekector/index.html","hash":"752d5fb79c9ee588d8f53d4bb7b021c83e1f1379","modified":1537256372413},{"_id":"public/tags/xml/index.html","hash":"c9d7af09ccce2cffcb6c84ad754d6061cc4c1a1d","modified":1537256372413},{"_id":"public/tags/tools/index.html","hash":"c3d3ceefbf40978e5ef4c0eb832a59795a9f377e","modified":1537256372413},{"_id":"public/tags/card/index.html","hash":"f12e6f4405e83dc34ce47f22f1978901a62858b6","modified":1537256372413},{"_id":"public/tags/Android/index.html","hash":"2e59cf062e37ef64502e45abe5b8d5eb77bc4a79","modified":1537256372413},{"_id":"public/tags/自定义控件/index.html","hash":"0f221647392843eb0c7a7aaffd879174cfe6cf22","modified":1537256372413},{"_id":"public/tags/比例尺/index.html","hash":"c2305b545904a26f6cedfe2b2bc7d26bae524a5f","modified":1537256372413},{"_id":"public/tags/vue/index.html","hash":"1df76688b76119dad87200bbc942fc55eb99cdb3","modified":1537256372413},{"_id":"public/tags/front/index.html","hash":"a6102ccc728af646b2474dc3a8174af0ac7ab224","modified":1537256372413},{"_id":"public/tags/webpack/index.html","hash":"e56ce6ab5622f664d0bdc597857647fde0fe634e","modified":1537256372414},{"_id":"public/tags/gogs/index.html","hash":"7229477d55ec828a8f776390010ceea63c0528ec","modified":1537256372414},{"_id":"public/tags/offline/index.html","hash":"f24fe88f4fce4bf6362117a8a86ebcca932257c6","modified":1537256372414},{"_id":"public/tags/VMware/index.html","hash":"b0092de2c3253e3ec23767c390e37e2328940b7d","modified":1537256372414},{"_id":"public/tags/server/index.html","hash":"aaabee49860f605b619040b2d3cc7e0c580c70ea","modified":1537256372414},{"_id":"public/tags/memory/index.html","hash":"8d7ef09c27db9a90a655c277c86ddf5eea27d92c","modified":1537256372414},{"_id":"public/tags/douker/index.html","hash":"32c9152b9c51cae78afb92f465c20ce77bdca26d","modified":1537256372414},{"_id":"public/tags/jenkins/index.html","hash":"b9af37f978709a1a2335190f1b71f76201fe8826","modified":1537256372414},{"_id":"public/tags/back-up/index.html","hash":"3b8f37647e83b86a18e38381ef0a08646e25b567","modified":1537256372414},{"_id":"public/tags/仓库独立/index.html","hash":"422118d1d02c85e92a0d91ef67ff8d35cb39c817","modified":1537256372414},{"_id":"public/images/android-scale.png","hash":"95fe522891f967d81b728a2ec39006d1dec9fec3","modified":1537256372417},{"_id":"public/images/linux-swap.JPG","hash":"4011aa23fe210488e22d2c2eaeb17c7bd9bbf324","modified":1537256372418},{"_id":"public/images/my-avatar.jpg","hash":"b1245f2b592c8e2628d324042dde3cda87f9c9a8","modified":1537256372418},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1537256372418},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1537256372418},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1537256372418},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537256372418},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537256372418},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537256372419},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537256372419},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537256372419},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537256372419},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537256372419},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1537256372419},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1537256372419},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537256372419},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1537256372419},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537256372419},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1537256372419},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1537256372419},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1537256372419},{"_id":"public/favicon.ico","hash":"4cf0249ada1e66442e3256e75d4dcf37a0c54d9f","modified":1537256373053},{"_id":"public/images/android-scale-title.jpg","hash":"4c7eb7361be687ae3ee6cc6c8f44743f2d82b8d2","modified":1537256373053},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1537256373056},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1537256373057},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1537256373057},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1537256373057},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1537256373057},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1537256373057},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1537256373057},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1537256373057},{"_id":"public/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1537256373057},{"_id":"public/css/main.css","hash":"aada5bcebd3c4c1a7b5f30ea1ce4ec7f6f04db5c","modified":1537256373057},{"_id":"public/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1537256373058},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1537256373058},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1537256373058},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1537256373138},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1537256373138},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1537256373148},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1537256373151}],"Category":[{"name":"Docker","_id":"cjm7enz9w0004l1skoupkoain"},{"name":"Git","_id":"cjm7enzag000kl1sk5yfdggz8"},{"name":"Linux","_id":"cjm7enzaq000vl1sk6slpun2y"},{"name":"Android","_id":"cjm7enzay0016l1sk1cqvdhlr"},{"name":"Front-end","_id":"cjm7enzb1001il1skvuj0etnt"},{"name":"Server","_id":"cjm7enzb2001nl1skleaxh1az"}],"Data":[],"Page":[{"title":"关于我","date":"2017-09-12T00:16:46.000Z","type":"about","_content":"\n\n- 沈世华\n\n- isshensh(at)163.com\n\n- [Github 地址](https://github.com/IAMSHENSH)\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2017-09-12 08:16:46\ntype: \"about\"\n---\n\n\n- 沈世华\n\n- isshensh(at)163.com\n\n- [Github 地址](https://github.com/IAMSHENSH)\n","updated":"2018-09-18T07:29:13.730Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjm7enz9q0001l1skso7l42p9","content":"<ul>\n<li><p>沈世华</p>\n</li>\n<li><p>isshensh(at)163.com</p>\n</li>\n<li><p><a href=\"https://github.com/IAMSHENSH\" target=\"_blank\" rel=\"external\">Github 地址</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>沈世华</p>\n</li>\n<li><p>isshensh(at)163.com</p>\n</li>\n<li><p><a href=\"https://github.com/IAMSHENSH\" target=\"_blank\" rel=\"external\">Github 地址</a></p>\n</li>\n</ul>\n"},{"title":"我的分类","date":"2017-09-11T11:10:19.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 我的分类\ndate: 2017-09-11 19:10:19\ntype: \"categories\"\n---\n","updated":"2018-09-18T07:29:13.730Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjm7enz9u0003l1skbmb48kls","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"站点地图","date":"2017-09-12T00:20:46.000Z","type":"sitemap","_content":"","source":"sitemap/index.md","raw":"---\ntitle: 站点地图 \ndate: 2017-09-12 08:20:46\ntype: \"sitemap\"\n---\n","updated":"2018-09-18T07:29:13.732Z","path":"sitemap/index.html","comments":1,"layout":"page","_id":"cjm7enza00007l1skc36b921h","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"我的标签","date":"2017-09-11T11:06:26.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 我的标签\ndate: 2017-09-11 19:06:26\ntype: \"tags\"\n---\n","updated":"2018-09-18T07:29:13.732Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjm7enza20009l1skjo2vkgpn","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Docker-搭建前端开发环境","date":"2018-07-09T16:00:00.000Z","_content":"\n> 关于使用 Docker 搭建前端开发环境，容器内包括 Node , Yarn。\n\n<!-- more -->\n\n# 环境配置\n\n1. 启动容器\n\n`docker run -d -it <imageID or imageName> /bin/bash`\n> eg: `docker run --name front-dev-env  -d -it centos /bin/bash`\n\n## 1. 容器安装软件\n\n1. 到容器内部\n> `docker exec -it <容器名或者ID> /bin/bash`\n> eg: `docker exec -it front-dev-env /bin/bash`\n1. yum 安装 node , yarn\n> 1. 安装node\n> `curl --silent --location https://rpm.nodesource.com/setup_10.x | bash -`\n> `yum install -y nodejs`\n> 2. 安装 yarn\n> `curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo`\n> `yum install yarn -y`\n\n## 1. 容器写成镜像\n\n1. 容器提交成镜像\n> `docker commit -m \"change somth\" -a \"somebody info\" container_id(docker ps -a获取id) 新镜像名字`\n> eg: `docker commit -m \"install node yarn\" -a   \"install front dev tool\" front-dev-env ssh/front-dev-env`\n\n1. 打包镜像\n> `docker save [IMAGE ID]  > [IMAGE NAME].tar`\n> eg: `docker save ssh/front-dev-env > front-dev-env.tar`\n\n---\n\n## 使用\n\n1. 服务器加载镜像\n> `docker load < [IMAGE NAME].tar`\n> eg: `docker load < front-dev-env.tar`\n\n1. 运行容器，日常开发\n\n配置环境变量，启动容器\n`docker run -itd -p 50001:22 -v ..:.. <刚才提交的镜像ID>  /bin/bash`\n> eg: `docker run --name ssh-front-dev -i -td -p 28080:8080 -v /home/shshen/workspace:/home/shshen/workspace ssh/front-dev-env /bin/bash`\n\n1. 在 WebStorm 上配置 STPF 环境，即可试行远程开发\n> 1. WebStorm -> Tool -> Devloyment -> Config\n> 2. Add Serve -> Type:SFTP\n","source":"_posts/Docker-Front-dev.md","raw":"---\ntitle: Docker-搭建前端开发环境\ndate: 2018-07-10\ntags: \n- Docker\n- Front\n- Yarn\n- Nodejs\ncategories: Docker\n\n---\n\n> 关于使用 Docker 搭建前端开发环境，容器内包括 Node , Yarn。\n\n<!-- more -->\n\n# 环境配置\n\n1. 启动容器\n\n`docker run -d -it <imageID or imageName> /bin/bash`\n> eg: `docker run --name front-dev-env  -d -it centos /bin/bash`\n\n## 1. 容器安装软件\n\n1. 到容器内部\n> `docker exec -it <容器名或者ID> /bin/bash`\n> eg: `docker exec -it front-dev-env /bin/bash`\n1. yum 安装 node , yarn\n> 1. 安装node\n> `curl --silent --location https://rpm.nodesource.com/setup_10.x | bash -`\n> `yum install -y nodejs`\n> 2. 安装 yarn\n> `curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo`\n> `yum install yarn -y`\n\n## 1. 容器写成镜像\n\n1. 容器提交成镜像\n> `docker commit -m \"change somth\" -a \"somebody info\" container_id(docker ps -a获取id) 新镜像名字`\n> eg: `docker commit -m \"install node yarn\" -a   \"install front dev tool\" front-dev-env ssh/front-dev-env`\n\n1. 打包镜像\n> `docker save [IMAGE ID]  > [IMAGE NAME].tar`\n> eg: `docker save ssh/front-dev-env > front-dev-env.tar`\n\n---\n\n## 使用\n\n1. 服务器加载镜像\n> `docker load < [IMAGE NAME].tar`\n> eg: `docker load < front-dev-env.tar`\n\n1. 运行容器，日常开发\n\n配置环境变量，启动容器\n`docker run -itd -p 50001:22 -v ..:.. <刚才提交的镜像ID>  /bin/bash`\n> eg: `docker run --name ssh-front-dev -i -td -p 28080:8080 -v /home/shshen/workspace:/home/shshen/workspace ssh/front-dev-env /bin/bash`\n\n1. 在 WebStorm 上配置 STPF 环境，即可试行远程开发\n> 1. WebStorm -> Tool -> Devloyment -> Config\n> 2. Add Serve -> Type:SFTP\n","slug":"Docker-Front-dev","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enz9f0000l1sk7sufq6hv","content":"<blockquote>\n<p>关于使用 Docker 搭建前端开发环境，容器内包括 Node , Yarn。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h1><ol>\n<li>启动容器</li>\n</ol>\n<p><code>docker run -d -it &lt;imageID or imageName&gt; /bin/bash</code></p>\n<blockquote>\n<p>eg: <code>docker run --name front-dev-env  -d -it centos /bin/bash</code></p>\n</blockquote>\n<h2 id=\"1-容器安装软件\"><a href=\"#1-容器安装软件\" class=\"headerlink\" title=\"1. 容器安装软件\"></a>1. 容器安装软件</h2><ol>\n<li>到容器内部<blockquote>\n<p><code>docker exec -it &lt;容器名或者ID&gt; /bin/bash</code><br>eg: <code>docker exec -it front-dev-env /bin/bash</code></p>\n</blockquote>\n</li>\n<li>yum 安装 node , yarn<blockquote>\n<ol>\n<li>安装node<br><code>curl --silent --location https://rpm.nodesource.com/setup_10.x | bash -</code><br><code>yum install -y nodejs</code></li>\n<li>安装 yarn<br><code>curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo</code><br><code>yum install yarn -y</code></li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"1-容器写成镜像\"><a href=\"#1-容器写成镜像\" class=\"headerlink\" title=\"1. 容器写成镜像\"></a>1. 容器写成镜像</h2><ol>\n<li><p>容器提交成镜像</p>\n<blockquote>\n<p><code>docker commit -m &quot;change somth&quot; -a &quot;somebody info&quot; container_id(docker ps -a获取id) 新镜像名字</code><br>eg: <code>docker commit -m &quot;install node yarn&quot; -a   &quot;install front dev tool&quot; front-dev-env ssh/front-dev-env</code></p>\n</blockquote>\n</li>\n<li><p>打包镜像</p>\n<blockquote>\n<p><code>docker save [IMAGE ID]  &gt; [IMAGE NAME].tar</code><br>eg: <code>docker save ssh/front-dev-env &gt; front-dev-env.tar</code></p>\n</blockquote>\n</li>\n</ol>\n<hr>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><ol>\n<li><p>服务器加载镜像</p>\n<blockquote>\n<p><code>docker load &lt; [IMAGE NAME].tar</code><br>eg: <code>docker load &lt; front-dev-env.tar</code></p>\n</blockquote>\n</li>\n<li><p>运行容器，日常开发</p>\n</li>\n</ol>\n<p>配置环境变量，启动容器<br><code>docker run -itd -p 50001:22 -v ..:.. &lt;刚才提交的镜像ID&gt;  /bin/bash</code></p>\n<blockquote>\n<p>eg: <code>docker run --name ssh-front-dev -i -td -p 28080:8080 -v /home/shshen/workspace:/home/shshen/workspace ssh/front-dev-env /bin/bash</code></p>\n</blockquote>\n<ol>\n<li>在 WebStorm 上配置 STPF 环境，即可试行远程开发<blockquote>\n<ol>\n<li>WebStorm -&gt; Tool -&gt; Devloyment -&gt; Config</li>\n<li>Add Serve -&gt; Type:SFTP</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于使用 Docker 搭建前端开发环境，容器内包括 Node , Yarn。</p>\n</blockquote>","more":"<h1 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h1><ol>\n<li>启动容器</li>\n</ol>\n<p><code>docker run -d -it &lt;imageID or imageName&gt; /bin/bash</code></p>\n<blockquote>\n<p>eg: <code>docker run --name front-dev-env  -d -it centos /bin/bash</code></p>\n</blockquote>\n<h2 id=\"1-容器安装软件\"><a href=\"#1-容器安装软件\" class=\"headerlink\" title=\"1. 容器安装软件\"></a>1. 容器安装软件</h2><ol>\n<li>到容器内部<blockquote>\n<p><code>docker exec -it &lt;容器名或者ID&gt; /bin/bash</code><br>eg: <code>docker exec -it front-dev-env /bin/bash</code></p>\n</blockquote>\n</li>\n<li>yum 安装 node , yarn<blockquote>\n<ol>\n<li>安装node<br><code>curl --silent --location https://rpm.nodesource.com/setup_10.x | bash -</code><br><code>yum install -y nodejs</code></li>\n<li>安装 yarn<br><code>curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo</code><br><code>yum install yarn -y</code></li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"1-容器写成镜像\"><a href=\"#1-容器写成镜像\" class=\"headerlink\" title=\"1. 容器写成镜像\"></a>1. 容器写成镜像</h2><ol>\n<li><p>容器提交成镜像</p>\n<blockquote>\n<p><code>docker commit -m &quot;change somth&quot; -a &quot;somebody info&quot; container_id(docker ps -a获取id) 新镜像名字</code><br>eg: <code>docker commit -m &quot;install node yarn&quot; -a   &quot;install front dev tool&quot; front-dev-env ssh/front-dev-env</code></p>\n</blockquote>\n</li>\n<li><p>打包镜像</p>\n<blockquote>\n<p><code>docker save [IMAGE ID]  &gt; [IMAGE NAME].tar</code><br>eg: <code>docker save ssh/front-dev-env &gt; front-dev-env.tar</code></p>\n</blockquote>\n</li>\n</ol>\n<hr>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><ol>\n<li><p>服务器加载镜像</p>\n<blockquote>\n<p><code>docker load &lt; [IMAGE NAME].tar</code><br>eg: <code>docker load &lt; front-dev-env.tar</code></p>\n</blockquote>\n</li>\n<li><p>运行容器，日常开发</p>\n</li>\n</ol>\n<p>配置环境变量，启动容器<br><code>docker run -itd -p 50001:22 -v ..:.. &lt;刚才提交的镜像ID&gt;  /bin/bash</code></p>\n<blockquote>\n<p>eg: <code>docker run --name ssh-front-dev -i -td -p 28080:8080 -v /home/shshen/workspace:/home/shshen/workspace ssh/front-dev-env /bin/bash</code></p>\n</blockquote>\n<ol>\n<li>在 WebStorm 上配置 STPF 环境，即可试行远程开发<blockquote>\n<ol>\n<li>WebStorm -&gt; Tool -&gt; Devloyment -&gt; Config</li>\n<li>Add Serve -&gt; Type:SFTP</li>\n</ol>\n</blockquote>\n</li>\n</ol>"},{"title":"搭建 Python 服务容器运行环境","date":"2018-04-28T16:00:00.000Z","_content":"\n> 关于部署 Docker 的 Python HTTP 服务容器运行环境笔记\n\n<!-- more -->\n\n# 背景\n\n- 为了运行个人 Blog 服务，选用 Python 的 HTTP 服务；\n- 为了方便在内网部署，选用 Docker 的容器环境\n\n# 步骤\n\n1. 运行容器\n\n```shell\ndocker run -itd \\\n--name test-hexo \\\n-p 20002:8000 \\\n--restart=always \\\npython \\\nbin/bash\n```\n\n1. 进入容器\n\n```shell\ndocker exec -it test-hexo /bin/bash\n```\n\n1. 在容器内 clone 代码\n\n```shell\ncd ~\ngit clone http://********:5006/sh.shen/my-hexo.git\n```\n\n1. 运行pyhton测试\n\n```shell\ncd my-hexo\npython -m http.server\n```\n\n1. 自动执行命令:\n\n`~/.bashrc` 加入\n\n```shell\ncd /root/my-hexo/\npython -m http.server\n```\n\n---","source":"_posts/Docker-Python-HTTP服务.md","raw":"---\ntitle: 搭建 Python 服务容器运行环境\ndate: 2018-04-29\ntags: \n- Docker\n- Python\n- Hexo\ncategories: Docker\n---\n\n> 关于部署 Docker 的 Python HTTP 服务容器运行环境笔记\n\n<!-- more -->\n\n# 背景\n\n- 为了运行个人 Blog 服务，选用 Python 的 HTTP 服务；\n- 为了方便在内网部署，选用 Docker 的容器环境\n\n# 步骤\n\n1. 运行容器\n\n```shell\ndocker run -itd \\\n--name test-hexo \\\n-p 20002:8000 \\\n--restart=always \\\npython \\\nbin/bash\n```\n\n1. 进入容器\n\n```shell\ndocker exec -it test-hexo /bin/bash\n```\n\n1. 在容器内 clone 代码\n\n```shell\ncd ~\ngit clone http://********:5006/sh.shen/my-hexo.git\n```\n\n1. 运行pyhton测试\n\n```shell\ncd my-hexo\npython -m http.server\n```\n\n1. 自动执行命令:\n\n`~/.bashrc` 加入\n\n```shell\ncd /root/my-hexo/\npython -m http.server\n```\n\n---","slug":"Docker-Python-HTTP服务","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enz9s0002l1skfz5yvm2s","content":"<blockquote>\n<p>关于部署 Docker 的 Python HTTP 服务容器运行环境笔记</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><ul>\n<li>为了运行个人 Blog 服务，选用 Python 的 HTTP 服务；</li>\n<li>为了方便在内网部署，选用 Docker 的容器环境</li>\n</ul>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><ol>\n<li>运行容器</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -itd \\</div><div class=\"line\">--name test-hexo \\</div><div class=\"line\">-p 20002:8000 \\</div><div class=\"line\">--restart=always \\</div><div class=\"line\">python \\</div><div class=\"line\">bin/bash</div></pre></td></tr></table></figure>\n<ol>\n<li>进入容器</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker exec -it test-hexo /bin/bash</div></pre></td></tr></table></figure>\n<ol>\n<li>在容器内 clone 代码</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">git clone http://********:5006/sh.shen/my-hexo.git</div></pre></td></tr></table></figure>\n<ol>\n<li>运行pyhton测试</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd my-hexo</div><div class=\"line\">python -m http.server</div></pre></td></tr></table></figure>\n<ol>\n<li>自动执行命令:</li>\n</ol>\n<p><code>~/.bashrc</code> 加入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /root/my-hexo/</div><div class=\"line\">python -m http.server</div></pre></td></tr></table></figure>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于部署 Docker 的 Python HTTP 服务容器运行环境笔记</p>\n</blockquote>","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><ul>\n<li>为了运行个人 Blog 服务，选用 Python 的 HTTP 服务；</li>\n<li>为了方便在内网部署，选用 Docker 的容器环境</li>\n</ul>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><ol>\n<li>运行容器</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker run -itd \\</div><div class=\"line\">--name test-hexo \\</div><div class=\"line\">-p 20002:8000 \\</div><div class=\"line\">--restart=always \\</div><div class=\"line\">python \\</div><div class=\"line\">bin/bash</div></pre></td></tr></table></figure>\n<ol>\n<li>进入容器</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker exec -it test-hexo /bin/bash</div></pre></td></tr></table></figure>\n<ol>\n<li>在容器内 clone 代码</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">git clone http://********:5006/sh.shen/my-hexo.git</div></pre></td></tr></table></figure>\n<ol>\n<li>运行pyhton测试</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd my-hexo</div><div class=\"line\">python -m http.server</div></pre></td></tr></table></figure>\n<ol>\n<li>自动执行命令:</li>\n</ol>\n<p><code>~/.bashrc</code> 加入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /root/my-hexo/</div><div class=\"line\">python -m http.server</div></pre></td></tr></table></figure>\n<hr>"},{"title":"Docker-Image-导出载入","date":"2017-09-10T16:00:00.000Z","_content":"\n> 关于使用 Docker 对镜像进行导出与载入的方法\n\n<!-- more -->\n\n# Docker 镜像进行导出与载入命令\n\n1. 将外网的镜像导出\n\n```shell\ndocker save [IMAGE ID]  > [IMAGE NAME].tar\n```\n\n1. 在内网导入镜像\n\n```shell\ndocker load < [IMAGE NAME].tar\n```\n\n1. 更改镜像的名字和标签\n\n```shell\ndocker tag [IMAGE ID] [IMAGE NAME]:[TAG]\n```\n\n## 其他命令\n\n1. 容器的导出\n\n```shell\ndocker export [CONTAINER ID] > [NAME].tar\n```\n\n1. export 后的压缩包导入\n\n```shell\ndocker import [NAME].tar [CONTATNER NAME]:[TAG]\n```\n\n---\n","source":"_posts/Docker-image-导出载入.md","raw":"---\ntitle: Docker-Image-导出载入\ndate: 2017-09-11 \ntags: \n- docker\n- load\n- export\ncategories: Docker\n\n---\n\n> 关于使用 Docker 对镜像进行导出与载入的方法\n\n<!-- more -->\n\n# Docker 镜像进行导出与载入命令\n\n1. 将外网的镜像导出\n\n```shell\ndocker save [IMAGE ID]  > [IMAGE NAME].tar\n```\n\n1. 在内网导入镜像\n\n```shell\ndocker load < [IMAGE NAME].tar\n```\n\n1. 更改镜像的名字和标签\n\n```shell\ndocker tag [IMAGE ID] [IMAGE NAME]:[TAG]\n```\n\n## 其他命令\n\n1. 容器的导出\n\n```shell\ndocker export [CONTAINER ID] > [NAME].tar\n```\n\n1. export 后的压缩包导入\n\n```shell\ndocker import [NAME].tar [CONTATNER NAME]:[TAG]\n```\n\n---\n","slug":"Docker-image-导出载入","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enz9z0006l1skq5mrs1y4","content":"<blockquote>\n<p>关于使用 Docker 对镜像进行导出与载入的方法</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"Docker-镜像进行导出与载入命令\"><a href=\"#Docker-镜像进行导出与载入命令\" class=\"headerlink\" title=\"Docker 镜像进行导出与载入命令\"></a>Docker 镜像进行导出与载入命令</h1><ol>\n<li>将外网的镜像导出</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker save [IMAGE ID]  &gt; [IMAGE NAME].tar</div></pre></td></tr></table></figure>\n<ol>\n<li>在内网导入镜像</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker load &lt; [IMAGE NAME].tar</div></pre></td></tr></table></figure>\n<ol>\n<li>更改镜像的名字和标签</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker tag [IMAGE ID] [IMAGE NAME]:[TAG]</div></pre></td></tr></table></figure>\n<h2 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h2><ol>\n<li>容器的导出</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker export [CONTAINER ID] &gt; [NAME].tar</div></pre></td></tr></table></figure>\n<ol>\n<li>export 后的压缩包导入</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker import [NAME].tar [CONTATNER NAME]:[TAG]</div></pre></td></tr></table></figure>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于使用 Docker 对镜像进行导出与载入的方法</p>\n</blockquote>","more":"<h1 id=\"Docker-镜像进行导出与载入命令\"><a href=\"#Docker-镜像进行导出与载入命令\" class=\"headerlink\" title=\"Docker 镜像进行导出与载入命令\"></a>Docker 镜像进行导出与载入命令</h1><ol>\n<li>将外网的镜像导出</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker save [IMAGE ID]  &gt; [IMAGE NAME].tar</div></pre></td></tr></table></figure>\n<ol>\n<li>在内网导入镜像</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker load &lt; [IMAGE NAME].tar</div></pre></td></tr></table></figure>\n<ol>\n<li>更改镜像的名字和标签</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker tag [IMAGE ID] [IMAGE NAME]:[TAG]</div></pre></td></tr></table></figure>\n<h2 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h2><ol>\n<li>容器的导出</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker export [CONTAINER ID] &gt; [NAME].tar</div></pre></td></tr></table></figure>\n<ol>\n<li>export 后的压缩包导入</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker import [NAME].tar [CONTATNER NAME]:[TAG]</div></pre></td></tr></table></figure>\n<hr>"},{"title":"Git 仓库迁移","date":"2017-09-10T16:00:00.000Z","_content":"\n> 关于 Git 仓库 迁移的方法\n\n<!-- more -->\n\n# 迁移命令模板\n\n1. 镜像克隆：\n\n```shell\ngit clone --mirror  https://github.com/../old.git old.git\ncd old.git\n```\n\n1. 然后推送镜像：\n\n```shell\ngit remote set-url --push origin git@gitcafe.com/.../new.git\ngit push --mirror\n```\n\n1. 或者推送新建remote再推送：\n\n```shell\ngit remote add mirror origin git@gitcafe.com/.../new.git\ngit push mirror --all\ngit push mirror --tags\n```\n\n## project-a 迁移实例\n\n```shell\n$ git clone --mirror ssh://git@****:****/****/project-a.git\n> 克隆到纯仓库 'project-a.git'...\n> remote: Counting objects: 7012, done.\n> remote: Compressing objects: 100% (8/8), done.\n> remote: Total 7012 (delta 0), reused 0 (delta 0)\n> 接收对象中: 100% (7012/7012), 487.89 MiB | 41.89 MiB/s, 完成.\n> 处理 delta 中: 100% (2835/2835), 完成.\n```\n\n```shell\n$ cd project-a.git/\n$\n```\n\n```shell\n$ git remote set-url --push origin ssh://git@****:****/****/project-a.git\n$\n```\n\n```shell\n$ git push --mirror\n> The authenticity of host '[server]:10090 ([172.24.***.***]:10090)' can't be established.\n> ECDSA key fingerprint is SHA256:nVnsCJaQGoJh0ehUKJ2/v4YQkJIKM2VzadcoUvTyFKc.\n> Are you sure you want to continue connecting (yes/no)? yes\n> Warning: Permanently added '[server]:10090,[172.24.***.***]:10090' (ECDSA) to the list of known hosts.\n> 对象计数中: 7012, 完成.\n> Delta compression using up to 4 threads.\n> 压缩对象中: 100% (3456/3456), 完成.\n> 写入对象中: 100% (7012/7012), 487.89 MiB | 12.49 MiB/s, 完成.\n> Total 7012 (delta 2835), reused 7012 (delta 2835)\n> remote: Resolving deltas: 100% (2835/2835), done.\n> To ssh://cmserver:10090/cartronics/project-a.git\n>  * [new branch]      master -> master\n>  * [new branch]      customer -> customer\n>  * [new branch]      refs/keep-around/6780f93f4b5c07c2f9de9ee9f1af591b9ad1e874 -> refs/keep-around/6780f93f4b5c07c2f9de9ee9f1af591b9ad1e874\n```\n\n---","source":"_posts/Git-仓库迁移.md","raw":"---\ntitle: Git 仓库迁移\ndate: 2017-09-11 \ntags: \n- git\ncategories: Git\n\n---\n\n> 关于 Git 仓库 迁移的方法\n\n<!-- more -->\n\n# 迁移命令模板\n\n1. 镜像克隆：\n\n```shell\ngit clone --mirror  https://github.com/../old.git old.git\ncd old.git\n```\n\n1. 然后推送镜像：\n\n```shell\ngit remote set-url --push origin git@gitcafe.com/.../new.git\ngit push --mirror\n```\n\n1. 或者推送新建remote再推送：\n\n```shell\ngit remote add mirror origin git@gitcafe.com/.../new.git\ngit push mirror --all\ngit push mirror --tags\n```\n\n## project-a 迁移实例\n\n```shell\n$ git clone --mirror ssh://git@****:****/****/project-a.git\n> 克隆到纯仓库 'project-a.git'...\n> remote: Counting objects: 7012, done.\n> remote: Compressing objects: 100% (8/8), done.\n> remote: Total 7012 (delta 0), reused 0 (delta 0)\n> 接收对象中: 100% (7012/7012), 487.89 MiB | 41.89 MiB/s, 完成.\n> 处理 delta 中: 100% (2835/2835), 完成.\n```\n\n```shell\n$ cd project-a.git/\n$\n```\n\n```shell\n$ git remote set-url --push origin ssh://git@****:****/****/project-a.git\n$\n```\n\n```shell\n$ git push --mirror\n> The authenticity of host '[server]:10090 ([172.24.***.***]:10090)' can't be established.\n> ECDSA key fingerprint is SHA256:nVnsCJaQGoJh0ehUKJ2/v4YQkJIKM2VzadcoUvTyFKc.\n> Are you sure you want to continue connecting (yes/no)? yes\n> Warning: Permanently added '[server]:10090,[172.24.***.***]:10090' (ECDSA) to the list of known hosts.\n> 对象计数中: 7012, 完成.\n> Delta compression using up to 4 threads.\n> 压缩对象中: 100% (3456/3456), 完成.\n> 写入对象中: 100% (7012/7012), 487.89 MiB | 12.49 MiB/s, 完成.\n> Total 7012 (delta 2835), reused 7012 (delta 2835)\n> remote: Resolving deltas: 100% (2835/2835), done.\n> To ssh://cmserver:10090/cartronics/project-a.git\n>  * [new branch]      master -> master\n>  * [new branch]      customer -> customer\n>  * [new branch]      refs/keep-around/6780f93f4b5c07c2f9de9ee9f1af591b9ad1e874 -> refs/keep-around/6780f93f4b5c07c2f9de9ee9f1af591b9ad1e874\n```\n\n---","slug":"Git-仓库迁移","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enza10008l1sk7j69xh44","content":"<blockquote>\n<p>关于 Git 仓库 迁移的方法</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"迁移命令模板\"><a href=\"#迁移命令模板\" class=\"headerlink\" title=\"迁移命令模板\"></a>迁移命令模板</h1><ol>\n<li>镜像克隆：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone --mirror  https://github.com/../old.git old.git</div><div class=\"line\">cd old.git</div></pre></td></tr></table></figure>\n<ol>\n<li>然后推送镜像：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote set-url --push origin git@gitcafe.com/.../new.git</div><div class=\"line\">git push --mirror</div></pre></td></tr></table></figure>\n<ol>\n<li>或者推送新建remote再推送：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add mirror origin git@gitcafe.com/.../new.git</div><div class=\"line\">git push mirror --all</div><div class=\"line\">git push mirror --tags</div></pre></td></tr></table></figure>\n<h2 id=\"project-a-迁移实例\"><a href=\"#project-a-迁移实例\" class=\"headerlink\" title=\"project-a 迁移实例\"></a>project-a 迁移实例</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git clone --mirror ssh://git@****:****/****/project-a.git</div><div class=\"line\"><span class=\"meta\">&gt;</span> 克隆到纯仓库 'project-a.git'...</div><div class=\"line\"><span class=\"meta\">&gt;</span> remote: Counting objects: 7012, done.</div><div class=\"line\"><span class=\"meta\">&gt;</span> remote: Compressing objects: 100% (8/8), done.</div><div class=\"line\"><span class=\"meta\">&gt;</span> remote: Total 7012 (delta 0), reused 0 (delta 0)</div><div class=\"line\"><span class=\"meta\">&gt;</span> 接收对象中: 100% (7012/7012), 487.89 MiB | 41.89 MiB/s, 完成.</div><div class=\"line\"><span class=\"meta\">&gt;</span> 处理 delta 中: 100% (2835/2835), 完成.</div></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> cd project-a.git/</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git remote set-url --push origin ssh://git@****:****/****/project-a.git</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git push --mirror</div><div class=\"line\"><span class=\"meta\">&gt;</span> The authenticity of host '[server]:10090 ([172.24.***.***]:10090)' can't be established.</div><div class=\"line\"><span class=\"meta\">&gt;</span> ECDSA key fingerprint is SHA256:nVnsCJaQGoJh0ehUKJ2/v4YQkJIKM2VzadcoUvTyFKc.</div><div class=\"line\"><span class=\"meta\">&gt;</span> Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\"><span class=\"meta\">&gt;</span> Warning: Permanently added '[server]:10090,[172.24.***.***]:10090' (ECDSA) to the list of known hosts.</div><div class=\"line\"><span class=\"meta\">&gt;</span> 对象计数中: 7012, 完成.</div><div class=\"line\"><span class=\"meta\">&gt;</span> Delta compression using up to 4 threads.</div><div class=\"line\"><span class=\"meta\">&gt;</span> 压缩对象中: 100% (3456/3456), 完成.</div><div class=\"line\"><span class=\"meta\">&gt;</span> 写入对象中: 100% (7012/7012), 487.89 MiB | 12.49 MiB/s, 完成.</div><div class=\"line\"><span class=\"meta\">&gt;</span> Total 7012 (delta 2835), reused 7012 (delta 2835)</div><div class=\"line\"><span class=\"meta\">&gt;</span> remote: Resolving deltas: 100% (2835/2835), done.</div><div class=\"line\"><span class=\"meta\">&gt;</span> To ssh://cmserver:10090/cartronics/project-a.git</div><div class=\"line\"><span class=\"meta\">&gt;</span>  * [new branch]      master -&gt; master</div><div class=\"line\"><span class=\"meta\">&gt;</span>  * [new branch]      customer -&gt; customer</div><div class=\"line\"><span class=\"meta\">&gt;</span>  * [new branch]      refs/keep-around/6780f93f4b5c07c2f9de9ee9f1af591b9ad1e874 -&gt; refs/keep-around/6780f93f4b5c07c2f9de9ee9f1af591b9ad1e874</div></pre></td></tr></table></figure>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于 Git 仓库 迁移的方法</p>\n</blockquote>","more":"<h1 id=\"迁移命令模板\"><a href=\"#迁移命令模板\" class=\"headerlink\" title=\"迁移命令模板\"></a>迁移命令模板</h1><ol>\n<li>镜像克隆：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone --mirror  https://github.com/../old.git old.git</div><div class=\"line\">cd old.git</div></pre></td></tr></table></figure>\n<ol>\n<li>然后推送镜像：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote set-url --push origin git@gitcafe.com/.../new.git</div><div class=\"line\">git push --mirror</div></pre></td></tr></table></figure>\n<ol>\n<li>或者推送新建remote再推送：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add mirror origin git@gitcafe.com/.../new.git</div><div class=\"line\">git push mirror --all</div><div class=\"line\">git push mirror --tags</div></pre></td></tr></table></figure>\n<h2 id=\"project-a-迁移实例\"><a href=\"#project-a-迁移实例\" class=\"headerlink\" title=\"project-a 迁移实例\"></a>project-a 迁移实例</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git clone --mirror ssh://git@****:****/****/project-a.git</div><div class=\"line\"><span class=\"meta\">&gt;</span> 克隆到纯仓库 'project-a.git'...</div><div class=\"line\"><span class=\"meta\">&gt;</span> remote: Counting objects: 7012, done.</div><div class=\"line\"><span class=\"meta\">&gt;</span> remote: Compressing objects: 100% (8/8), done.</div><div class=\"line\"><span class=\"meta\">&gt;</span> remote: Total 7012 (delta 0), reused 0 (delta 0)</div><div class=\"line\"><span class=\"meta\">&gt;</span> 接收对象中: 100% (7012/7012), 487.89 MiB | 41.89 MiB/s, 完成.</div><div class=\"line\"><span class=\"meta\">&gt;</span> 处理 delta 中: 100% (2835/2835), 完成.</div></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> cd project-a.git/</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git remote set-url --push origin ssh://git@****:****/****/project-a.git</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git push --mirror</div><div class=\"line\"><span class=\"meta\">&gt;</span> The authenticity of host '[server]:10090 ([172.24.***.***]:10090)' can't be established.</div><div class=\"line\"><span class=\"meta\">&gt;</span> ECDSA key fingerprint is SHA256:nVnsCJaQGoJh0ehUKJ2/v4YQkJIKM2VzadcoUvTyFKc.</div><div class=\"line\"><span class=\"meta\">&gt;</span> Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\"><span class=\"meta\">&gt;</span> Warning: Permanently added '[server]:10090,[172.24.***.***]:10090' (ECDSA) to the list of known hosts.</div><div class=\"line\"><span class=\"meta\">&gt;</span> 对象计数中: 7012, 完成.</div><div class=\"line\"><span class=\"meta\">&gt;</span> Delta compression using up to 4 threads.</div><div class=\"line\"><span class=\"meta\">&gt;</span> 压缩对象中: 100% (3456/3456), 完成.</div><div class=\"line\"><span class=\"meta\">&gt;</span> 写入对象中: 100% (7012/7012), 487.89 MiB | 12.49 MiB/s, 完成.</div><div class=\"line\"><span class=\"meta\">&gt;</span> Total 7012 (delta 2835), reused 7012 (delta 2835)</div><div class=\"line\"><span class=\"meta\">&gt;</span> remote: Resolving deltas: 100% (2835/2835), done.</div><div class=\"line\"><span class=\"meta\">&gt;</span> To ssh://cmserver:10090/cartronics/project-a.git</div><div class=\"line\"><span class=\"meta\">&gt;</span>  * [new branch]      master -&gt; master</div><div class=\"line\"><span class=\"meta\">&gt;</span>  * [new branch]      customer -&gt; customer</div><div class=\"line\"><span class=\"meta\">&gt;</span>  * [new branch]      refs/keep-around/6780f93f4b5c07c2f9de9ee9f1af591b9ad1e874 -&gt; refs/keep-around/6780f93f4b5c07c2f9de9ee9f1af591b9ad1e874</div></pre></td></tr></table></figure>\n<hr>"},{"title":"Git 新仓库初始化流程","date":"2017-09-10T16:00:00.000Z","_content":"\n> 关于使用 Git 初始化新仓库（同时下载子模块）的流程。\n\n<!-- more -->\n\n1. 登录代码托管平台,  添加本地「SSH 密钥」；\n\n2. clone「project-a」仓库\n\n```shell\n$ git clone ssh://git@********:10023/cartronics/project-a.git\n$\n```\n\n1. 进入「project-a」目录；\n\n```shell\ncd project-a\n```\n\n1. 初始化与更新子仓库\n\n```shell\n$ git submodule init\n$ git submodule update\n$\n```\n\n1. 进入子仓库\n\n```shell\n$ cd moddule-a/\n$\n```\n\n1. 切换到自己工作分支，下面选的是「branck-a」分支\n\n```shell\n$ git checkout branck-a\n$\n```\n\n---\n","source":"_posts/Git-新仓库初始化流程.md","raw":"---\ntitle: Git 新仓库初始化流程\ndate: 2017-09-11\ntags: \n- git\n- submodule\n- note\ncategories: Git\n---\n\n> 关于使用 Git 初始化新仓库（同时下载子模块）的流程。\n\n<!-- more -->\n\n1. 登录代码托管平台,  添加本地「SSH 密钥」；\n\n2. clone「project-a」仓库\n\n```shell\n$ git clone ssh://git@********:10023/cartronics/project-a.git\n$\n```\n\n1. 进入「project-a」目录；\n\n```shell\ncd project-a\n```\n\n1. 初始化与更新子仓库\n\n```shell\n$ git submodule init\n$ git submodule update\n$\n```\n\n1. 进入子仓库\n\n```shell\n$ cd moddule-a/\n$\n```\n\n1. 切换到自己工作分支，下面选的是「branck-a」分支\n\n```shell\n$ git checkout branck-a\n$\n```\n\n---\n","slug":"Git-新仓库初始化流程","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enza3000al1sk9o1wxyvf","content":"<blockquote>\n<p>关于使用 Git 初始化新仓库（同时下载子模块）的流程。</p>\n</blockquote>\n<a id=\"more\"></a>\n<ol>\n<li><p>登录代码托管平台,  添加本地「SSH 密钥」；</p>\n</li>\n<li><p>clone「project-a」仓库</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git clone ssh://git@********:10023/cartronics/project-a.git</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<ol>\n<li>进入「project-a」目录；</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd project-a</div></pre></td></tr></table></figure>\n<ol>\n<li>初始化与更新子仓库</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git submodule init</div><div class=\"line\"><span class=\"meta\">$</span> git submodule update</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<ol>\n<li>进入子仓库</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> cd moddule-a/</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<ol>\n<li>切换到自己工作分支，下面选的是「branck-a」分支</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git checkout branck-a</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于使用 Git 初始化新仓库（同时下载子模块）的流程。</p>\n</blockquote>","more":"<ol>\n<li><p>登录代码托管平台,  添加本地「SSH 密钥」；</p>\n</li>\n<li><p>clone「project-a」仓库</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git clone ssh://git@********:10023/cartronics/project-a.git</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<ol>\n<li>进入「project-a」目录；</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd project-a</div></pre></td></tr></table></figure>\n<ol>\n<li>初始化与更新子仓库</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git submodule init</div><div class=\"line\"><span class=\"meta\">$</span> git submodule update</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<ol>\n<li>进入子仓库</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> cd moddule-a/</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<ol>\n<li>切换到自己工作分支，下面选的是「branck-a」分支</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git checkout branck-a</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<hr>"},{"title":"Linux 调整 Swap","date":"2017-09-11T10:25:32.000Z","_content":"\n![linux-swap](http://ovlnfs1rj.bkt.clouddn.com/linux-swap.JPG)\n> 关于在 Linux 安装后调整 Swap 的方法\n\n<!-- more -->\n\n# 调整步骤\n\n1. 切换到超级用户\n\n``` shell\n$ su root\n> Password:\n```\n\n1. 在 「/root/」目录下创建一个 2GB 名为「myswaofile」的交换文件\n\n```shell\n# dd if=/dev/zero of=/root/myswapfile bs=1G count=2 \n> 2+0 records in\n> 2+0 records out\n> 2147483648 bytes (2.1 GB, 2.0 GiB) copied, 24.9961 s, 85.9 MB/s\n\n# ls -l /root/myswapfile \n> -rw-r--r--. 1 root root 2147483648 Sep  6 11:20 /root/myswapfile\n```\n\n1. 设置文件权限，以保护此 swap 分区\n\n```shell\n# chmod 600 /root/myswapfile\n```\n\n1. 使用 `mkswap`命令，让此文件设置 「swap」\n\n```shell\n# mkswap /root/myswapfile\n> Setting up swapspace version 1, size = 2 GiB (2147479552 bytes)\n> no label, UUID=efdad09d-d48c-4c2b-a2e4-7704b4991881\n```\n\n1. 启动交换文件\n\n```shell\n# swapon /root/myswapfile\n```\n\n1. 为了确保开机启动，在「/etc/fstab」末尾加入：\n> CoreOS 无此文件\n\n```shell\n# cat /etc/fstab\n> cat: /etc/fstab: No such file or directory\n```\n\n1. 查看系统中交换文件设置情况\n\n```shell\n# swapon -s\n> Filename\t\t\t\t         Type\t\tSize\tUsed\tPriority\n> /root/myswapfile               file    \t2097148\t0\t    -1\n```\n\n1. 使用 `free` 确认再次确认\n\n```shell\n# free -h\n>              total       used       free     shared    buffers     cached\n> Mem:           11G       4.6G       7.2G        16M        71M       2.6G\n> -/+ buffers/cache:       1.9G       9.8G\n> Swap:         2.0G         0B       2.0G\n```\n\n# 其他命令\n\n打开所有交换空间\n\n```shell\n# swappon -a\n```\n\n关闭所有交换空间\n\n```shell\n# swappoff -a\n```\n\n---\n\n题图：来源于 Google","source":"_posts/Linux-change-swap.md","raw":"---\ntitle: Linux 调整 Swap \ndate: 2017-09-11 18:25:32\ntags: \n- swap\n- note\ncategories: Linux\n---\n\n![linux-swap](http://ovlnfs1rj.bkt.clouddn.com/linux-swap.JPG)\n> 关于在 Linux 安装后调整 Swap 的方法\n\n<!-- more -->\n\n# 调整步骤\n\n1. 切换到超级用户\n\n``` shell\n$ su root\n> Password:\n```\n\n1. 在 「/root/」目录下创建一个 2GB 名为「myswaofile」的交换文件\n\n```shell\n# dd if=/dev/zero of=/root/myswapfile bs=1G count=2 \n> 2+0 records in\n> 2+0 records out\n> 2147483648 bytes (2.1 GB, 2.0 GiB) copied, 24.9961 s, 85.9 MB/s\n\n# ls -l /root/myswapfile \n> -rw-r--r--. 1 root root 2147483648 Sep  6 11:20 /root/myswapfile\n```\n\n1. 设置文件权限，以保护此 swap 分区\n\n```shell\n# chmod 600 /root/myswapfile\n```\n\n1. 使用 `mkswap`命令，让此文件设置 「swap」\n\n```shell\n# mkswap /root/myswapfile\n> Setting up swapspace version 1, size = 2 GiB (2147479552 bytes)\n> no label, UUID=efdad09d-d48c-4c2b-a2e4-7704b4991881\n```\n\n1. 启动交换文件\n\n```shell\n# swapon /root/myswapfile\n```\n\n1. 为了确保开机启动，在「/etc/fstab」末尾加入：\n> CoreOS 无此文件\n\n```shell\n# cat /etc/fstab\n> cat: /etc/fstab: No such file or directory\n```\n\n1. 查看系统中交换文件设置情况\n\n```shell\n# swapon -s\n> Filename\t\t\t\t         Type\t\tSize\tUsed\tPriority\n> /root/myswapfile               file    \t2097148\t0\t    -1\n```\n\n1. 使用 `free` 确认再次确认\n\n```shell\n# free -h\n>              total       used       free     shared    buffers     cached\n> Mem:           11G       4.6G       7.2G        16M        71M       2.6G\n> -/+ buffers/cache:       1.9G       9.8G\n> Swap:         2.0G         0B       2.0G\n```\n\n# 其他命令\n\n打开所有交换空间\n\n```shell\n# swappon -a\n```\n\n关闭所有交换空间\n\n```shell\n# swappoff -a\n```\n\n---\n\n题图：来源于 Google","slug":"Linux-change-swap","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enza8000dl1skfuajy0p5","content":"<p><img src=\"http://ovlnfs1rj.bkt.clouddn.com/linux-swap.JPG\" alt=\"linux-swap\"></p>\n<blockquote>\n<p>关于在 Linux 安装后调整 Swap 的方法</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"调整步骤\"><a href=\"#调整步骤\" class=\"headerlink\" title=\"调整步骤\"></a>调整步骤</h1><ol>\n<li>切换到超级用户</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> su root</div><div class=\"line\"><span class=\"meta\">&gt;</span> Password:</div></pre></td></tr></table></figure>\n<ol>\n<li>在 「/root/」目录下创建一个 2GB 名为「myswaofile」的交换文件</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> dd if=/dev/zero of=/root/myswapfile bs=1G count=2 </div><div class=\"line\"><span class=\"meta\">&gt;</span> 2+0 records in</div><div class=\"line\"><span class=\"meta\">&gt;</span> 2+0 records out</div><div class=\"line\"><span class=\"meta\">&gt;</span> 2147483648 bytes (2.1 GB, 2.0 GiB) copied, 24.9961 s, 85.9 MB/s</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#</span> ls -l /root/myswapfile </div><div class=\"line\"><span class=\"meta\">&gt;</span> -rw-r--r--. 1 root root 2147483648 Sep  6 11:20 /root/myswapfile</div></pre></td></tr></table></figure>\n<ol>\n<li>设置文件权限，以保护此 swap 分区</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> chmod 600 /root/myswapfile</div></pre></td></tr></table></figure>\n<ol>\n<li>使用 <code>mkswap</code>命令，让此文件设置 「swap」</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> mkswap /root/myswapfile</div><div class=\"line\"><span class=\"meta\">&gt;</span> Setting up swapspace version 1, size = 2 GiB (2147479552 bytes)</div><div class=\"line\"><span class=\"meta\">&gt;</span> no label, UUID=efdad09d-d48c-4c2b-a2e4-7704b4991881</div></pre></td></tr></table></figure>\n<ol>\n<li>启动交换文件</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> swapon /root/myswapfile</div></pre></td></tr></table></figure>\n<ol>\n<li>为了确保开机启动，在「/etc/fstab」末尾加入：<blockquote>\n<p>CoreOS 无此文件</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> cat /etc/fstab</div><div class=\"line\"><span class=\"meta\">&gt;</span> cat: /etc/fstab: No such file or directory</div></pre></td></tr></table></figure>\n<ol>\n<li>查看系统中交换文件设置情况</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> swapon -s</div><div class=\"line\"><span class=\"meta\">&gt;</span> Filename\t\t\t\t         Type\t\tSize\tUsed\tPriority</div><div class=\"line\"><span class=\"meta\">&gt;</span> /root/myswapfile               file    \t2097148\t0\t    -1</div></pre></td></tr></table></figure>\n<ol>\n<li>使用 <code>free</code> 确认再次确认</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> free -h</div><div class=\"line\"><span class=\"meta\">&gt;</span>              total       used       free     shared    buffers     cached</div><div class=\"line\"><span class=\"meta\">&gt;</span> Mem:           11G       4.6G       7.2G        16M        71M       2.6G</div><div class=\"line\"><span class=\"meta\">&gt;</span> -/+ buffers/cache:       1.9G       9.8G</div><div class=\"line\"><span class=\"meta\">&gt;</span> Swap:         2.0G         0B       2.0G</div></pre></td></tr></table></figure>\n<h1 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h1><p>打开所有交换空间</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> swappon -a</div></pre></td></tr></table></figure>\n<p>关闭所有交换空间</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> swappoff -a</div></pre></td></tr></table></figure>\n<hr>\n<p>题图：来源于 Google</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"http://ovlnfs1rj.bkt.clouddn.com/linux-swap.JPG\" alt=\"linux-swap\"></p>\n<blockquote>\n<p>关于在 Linux 安装后调整 Swap 的方法</p>\n</blockquote>","more":"<h1 id=\"调整步骤\"><a href=\"#调整步骤\" class=\"headerlink\" title=\"调整步骤\"></a>调整步骤</h1><ol>\n<li>切换到超级用户</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> su root</div><div class=\"line\"><span class=\"meta\">&gt;</span> Password:</div></pre></td></tr></table></figure>\n<ol>\n<li>在 「/root/」目录下创建一个 2GB 名为「myswaofile」的交换文件</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> dd if=/dev/zero of=/root/myswapfile bs=1G count=2 </div><div class=\"line\"><span class=\"meta\">&gt;</span> 2+0 records in</div><div class=\"line\"><span class=\"meta\">&gt;</span> 2+0 records out</div><div class=\"line\"><span class=\"meta\">&gt;</span> 2147483648 bytes (2.1 GB, 2.0 GiB) copied, 24.9961 s, 85.9 MB/s</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#</span> ls -l /root/myswapfile </div><div class=\"line\"><span class=\"meta\">&gt;</span> -rw-r--r--. 1 root root 2147483648 Sep  6 11:20 /root/myswapfile</div></pre></td></tr></table></figure>\n<ol>\n<li>设置文件权限，以保护此 swap 分区</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> chmod 600 /root/myswapfile</div></pre></td></tr></table></figure>\n<ol>\n<li>使用 <code>mkswap</code>命令，让此文件设置 「swap」</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> mkswap /root/myswapfile</div><div class=\"line\"><span class=\"meta\">&gt;</span> Setting up swapspace version 1, size = 2 GiB (2147479552 bytes)</div><div class=\"line\"><span class=\"meta\">&gt;</span> no label, UUID=efdad09d-d48c-4c2b-a2e4-7704b4991881</div></pre></td></tr></table></figure>\n<ol>\n<li>启动交换文件</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> swapon /root/myswapfile</div></pre></td></tr></table></figure>\n<ol>\n<li>为了确保开机启动，在「/etc/fstab」末尾加入：<blockquote>\n<p>CoreOS 无此文件</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> cat /etc/fstab</div><div class=\"line\"><span class=\"meta\">&gt;</span> cat: /etc/fstab: No such file or directory</div></pre></td></tr></table></figure>\n<ol>\n<li>查看系统中交换文件设置情况</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> swapon -s</div><div class=\"line\"><span class=\"meta\">&gt;</span> Filename\t\t\t\t         Type\t\tSize\tUsed\tPriority</div><div class=\"line\"><span class=\"meta\">&gt;</span> /root/myswapfile               file    \t2097148\t0\t    -1</div></pre></td></tr></table></figure>\n<ol>\n<li>使用 <code>free</code> 确认再次确认</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> free -h</div><div class=\"line\"><span class=\"meta\">&gt;</span>              total       used       free     shared    buffers     cached</div><div class=\"line\"><span class=\"meta\">&gt;</span> Mem:           11G       4.6G       7.2G        16M        71M       2.6G</div><div class=\"line\"><span class=\"meta\">&gt;</span> -/+ buffers/cache:       1.9G       9.8G</div><div class=\"line\"><span class=\"meta\">&gt;</span> Swap:         2.0G         0B       2.0G</div></pre></td></tr></table></figure>\n<h1 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h1><p>打开所有交换空间</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> swappon -a</div></pre></td></tr></table></figure>\n<p>关闭所有交换空间</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> swappoff -a</div></pre></td></tr></table></figure>\n<hr>\n<p>题图：来源于 Google</p>"},{"title":"Linux 手动释放 Cache","date":"2017-09-11T10:25:32.000Z","_content":"\n> 关于在 Linux 手动释放内存的方法介绍\n\n<!-- more -->\n\n# 手动内存步骤\n\n1. 使用 `free` 查看内存使用情况\n\n```shell\n$ free -h\n>              total       used       free     shared    buffers     cached\n> Mem:           11G       4.6G       7.2G        16M        76M       2.6G\n> -/+ buffers/cache:       1.9G       9.9G\n> Swap:         2.0G         0B       2.0G\n\n```\n\n1. 切换到超级用户\n\n```shell\n$ su root\n> Password:\n```\n\n1. 查看 「/proc/sys/vm/drop_caches」的值，默认为 0\n\n```shell\n# cat /proc/sys/vm/drop_caches\n> 0\n```\n\n1. 手动执行 `sync`命令\n\n```shell\n# sync\n```\n\n> 描述：sync 命令运行 sync 子例程。如果必须停止系统，则运行sync 命令以确保文件系统的完整性。sync 命令将所有未写的系统缓冲区写到磁盘中，包含已修改的 i-node、已延迟的块 I/O 和读写映射文件\n\n1. 将/proc/sys/vm/drop_caches值设为3\n\n```shell\n# echo 3 > /proc/sys/vm/drop_caches\n# cat /proc/sys/vm/drop_caches\n> 3\n```\n\n1. 使用 `free` 查看内存使用情况\n\n```shell\n# free -h\n>              total       used       free     shared    buffers     cached\n> Mem:           11G       1.9G       9.8G        16M       2.6M       217M\n> -/+ buffers/cache:       1.7G        10G\n> Swap:         2.0G         0B       2.0G\n\n```\n\n---","source":"_posts/Linux-free-cache.md","raw":"---\ntitle: Linux 手动释放 Cache\ndate: 2017-09-11 18:25:32\ntags: \n- cache\n- note\ncategories: Linux\n---\n\n> 关于在 Linux 手动释放内存的方法介绍\n\n<!-- more -->\n\n# 手动内存步骤\n\n1. 使用 `free` 查看内存使用情况\n\n```shell\n$ free -h\n>              total       used       free     shared    buffers     cached\n> Mem:           11G       4.6G       7.2G        16M        76M       2.6G\n> -/+ buffers/cache:       1.9G       9.9G\n> Swap:         2.0G         0B       2.0G\n\n```\n\n1. 切换到超级用户\n\n```shell\n$ su root\n> Password:\n```\n\n1. 查看 「/proc/sys/vm/drop_caches」的值，默认为 0\n\n```shell\n# cat /proc/sys/vm/drop_caches\n> 0\n```\n\n1. 手动执行 `sync`命令\n\n```shell\n# sync\n```\n\n> 描述：sync 命令运行 sync 子例程。如果必须停止系统，则运行sync 命令以确保文件系统的完整性。sync 命令将所有未写的系统缓冲区写到磁盘中，包含已修改的 i-node、已延迟的块 I/O 和读写映射文件\n\n1. 将/proc/sys/vm/drop_caches值设为3\n\n```shell\n# echo 3 > /proc/sys/vm/drop_caches\n# cat /proc/sys/vm/drop_caches\n> 3\n```\n\n1. 使用 `free` 查看内存使用情况\n\n```shell\n# free -h\n>              total       used       free     shared    buffers     cached\n> Mem:           11G       1.9G       9.8G        16M       2.6M       217M\n> -/+ buffers/cache:       1.7G        10G\n> Swap:         2.0G         0B       2.0G\n\n```\n\n---","slug":"Linux-free-cache","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzaa000el1sk2f8o3a03","content":"<blockquote>\n<p>关于在 Linux 手动释放内存的方法介绍</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"手动内存步骤\"><a href=\"#手动内存步骤\" class=\"headerlink\" title=\"手动内存步骤\"></a>手动内存步骤</h1><ol>\n<li>使用 <code>free</code> 查看内存使用情况</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> free -h</div><div class=\"line\"><span class=\"meta\">&gt;</span>              total       used       free     shared    buffers     cached</div><div class=\"line\"><span class=\"meta\">&gt;</span> Mem:           11G       4.6G       7.2G        16M        76M       2.6G</div><div class=\"line\"><span class=\"meta\">&gt;</span> -/+ buffers/cache:       1.9G       9.9G</div><div class=\"line\"><span class=\"meta\">&gt;</span> Swap:         2.0G         0B       2.0G</div></pre></td></tr></table></figure>\n<ol>\n<li>切换到超级用户</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> su root</div><div class=\"line\"><span class=\"meta\">&gt;</span> Password:</div></pre></td></tr></table></figure>\n<ol>\n<li>查看 「/proc/sys/vm/drop_caches」的值，默认为 0</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> cat /proc/sys/vm/drop_caches</div><div class=\"line\"><span class=\"meta\">&gt;</span> 0</div></pre></td></tr></table></figure>\n<ol>\n<li>手动执行 <code>sync</code>命令</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> sync</div></pre></td></tr></table></figure>\n<blockquote>\n<p>描述：sync 命令运行 sync 子例程。如果必须停止系统，则运行sync 命令以确保文件系统的完整性。sync 命令将所有未写的系统缓冲区写到磁盘中，包含已修改的 i-node、已延迟的块 I/O 和读写映射文件</p>\n</blockquote>\n<ol>\n<li>将/proc/sys/vm/drop_caches值设为3</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> echo 3 &gt; /proc/sys/vm/drop_caches</div><div class=\"line\"><span class=\"meta\">#</span> cat /proc/sys/vm/drop_caches</div><div class=\"line\"><span class=\"meta\">&gt;</span> 3</div></pre></td></tr></table></figure>\n<ol>\n<li>使用 <code>free</code> 查看内存使用情况</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> free -h</div><div class=\"line\"><span class=\"meta\">&gt;</span>              total       used       free     shared    buffers     cached</div><div class=\"line\"><span class=\"meta\">&gt;</span> Mem:           11G       1.9G       9.8G        16M       2.6M       217M</div><div class=\"line\"><span class=\"meta\">&gt;</span> -/+ buffers/cache:       1.7G        10G</div><div class=\"line\"><span class=\"meta\">&gt;</span> Swap:         2.0G         0B       2.0G</div></pre></td></tr></table></figure>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于在 Linux 手动释放内存的方法介绍</p>\n</blockquote>","more":"<h1 id=\"手动内存步骤\"><a href=\"#手动内存步骤\" class=\"headerlink\" title=\"手动内存步骤\"></a>手动内存步骤</h1><ol>\n<li>使用 <code>free</code> 查看内存使用情况</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> free -h</div><div class=\"line\"><span class=\"meta\">&gt;</span>              total       used       free     shared    buffers     cached</div><div class=\"line\"><span class=\"meta\">&gt;</span> Mem:           11G       4.6G       7.2G        16M        76M       2.6G</div><div class=\"line\"><span class=\"meta\">&gt;</span> -/+ buffers/cache:       1.9G       9.9G</div><div class=\"line\"><span class=\"meta\">&gt;</span> Swap:         2.0G         0B       2.0G</div></pre></td></tr></table></figure>\n<ol>\n<li>切换到超级用户</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> su root</div><div class=\"line\"><span class=\"meta\">&gt;</span> Password:</div></pre></td></tr></table></figure>\n<ol>\n<li>查看 「/proc/sys/vm/drop_caches」的值，默认为 0</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> cat /proc/sys/vm/drop_caches</div><div class=\"line\"><span class=\"meta\">&gt;</span> 0</div></pre></td></tr></table></figure>\n<ol>\n<li>手动执行 <code>sync</code>命令</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> sync</div></pre></td></tr></table></figure>\n<blockquote>\n<p>描述：sync 命令运行 sync 子例程。如果必须停止系统，则运行sync 命令以确保文件系统的完整性。sync 命令将所有未写的系统缓冲区写到磁盘中，包含已修改的 i-node、已延迟的块 I/O 和读写映射文件</p>\n</blockquote>\n<ol>\n<li>将/proc/sys/vm/drop_caches值设为3</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> echo 3 &gt; /proc/sys/vm/drop_caches</div><div class=\"line\"><span class=\"meta\">#</span> cat /proc/sys/vm/drop_caches</div><div class=\"line\"><span class=\"meta\">&gt;</span> 3</div></pre></td></tr></table></figure>\n<ol>\n<li>使用 <code>free</code> 查看内存使用情况</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> free -h</div><div class=\"line\"><span class=\"meta\">&gt;</span>              total       used       free     shared    buffers     cached</div><div class=\"line\"><span class=\"meta\">&gt;</span> Mem:           11G       1.9G       9.8G        16M       2.6M       217M</div><div class=\"line\"><span class=\"meta\">&gt;</span> -/+ buffers/cache:       1.7G        10G</div><div class=\"line\"><span class=\"meta\">&gt;</span> Swap:         2.0G         0B       2.0G</div></pre></td></tr></table></figure>\n<hr>"},{"title":"Android Selector","date":"2017-09-26T16:00:00.000Z","_content":"\n\n> 关于 Android 的 Selector\n\n<!-- more -->\n\n# 背景\n\n- `selector` 标签是在安卓工程的 XML 文件定义的资源文件。用于提高软件的交互体验。\n- 例如：在 「Button」 被按下时，选中与未选中的状态，即可由 `selector` 中设定。\n\n# 属性\n\n- `state_enabled`: 设置触摸或点击事件是否可用状态，一般只在 `false` 时设置该属性，表示不可用状态\n- `state_pressed`: 设置是否按压状态，一般在 `true` 时设置该属性，表示已按压状态，默认为 `false` \n- `state_selected`: 设置是否选中状态，`true` 表示已选中，`false` 表示未选中\n- `state_checked`: 设置是否勾选状态，主要用于 `CheckBox` 和 `RadioButton`，`true` 表示已被勾选，`false` 表示未被勾选\n- `state_checkable`: 设置勾选是否可用状态，类似`state_enabled`，只是`state_enabled`会影响触摸或点击事件，而state_checkable影响勾选事件\n- `state_focused`: 设置是否获得焦点状态，`true`表示获得焦点，默认为`false`，表示未获得焦点\n- `state_window_focused`: 设置当前窗口是否获得焦点状态，`true` 表示获得焦点，`false` 表示未获得焦点，例如拉下通知栏或弹出对话框时，当前界面就会失去焦点；另外，`ListView` 的`ListItem` 获得焦点时也会触发 `true` 状态，可以理解为当前窗口就是 `ListItem`本身\n- `state_activated`: 设置是否被激活状态，`true` 表示被激活，`false` 表示未激活，「API Level 11」及以上才支持，可通过代码调用控件的 `setActivated(boolean)`方法设置是否激活该控件\n- `state_hovered`: 设置是否鼠标在上面滑动的状态，`true` 表示鼠标在上面滑动，默认为`false`，「API Level 14」及以上才支持\n\n# 例子\n\n样例代码：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <!-- 当前窗口失去焦点时 -->\n    <item android:color=\"@android:color/black\" android:state_window_focused=\"false\" />\n    <!-- 不可用时 -->\n    <item android:color=\"@android:color/background_light\" android:state_enabled=\"false\" />\n    <!-- 按压时 -->\n    <item android:color=\"@android:color/holo_blue_light\" android:state_pressed=\"true\" />\n    <!-- 被选中时 -->\n    <item android:color=\"@android:color/holo_green_dark\" android:state_selected=\"true\" />\n    <!-- 被激活时 -->\n    <item android:color=\"@android:color/holo_green_light\" android:state_activated=\"true\" />\n    <!-- 默认时 -->\n    <item android:color=\"@android:color/white\" />\n</selector>\n```\n\n# 注意\n\n- 一定要注意，在 `selector` 内部的 `item` 顺序问题，不同的顺序会造成不同的效果。有时候设置的效果没有生效，往往是顺序的问题。\n- item是从上往下匹配的，如果匹配到一个item那它就将采用这个item，而不是采用最佳匹配的规则；所以设置默认的状态，一定要写在最后，如果写在前面，则后面所有的item都不会起作用了。\n\n---\n","source":"_posts/android-selector.md","raw":"---\ntitle: Android Selector\ndate: 2017-09-27\ntags: \n- android\n- sekector\n- xml\n- tools\ncategories: Android\n---\n\n\n> 关于 Android 的 Selector\n\n<!-- more -->\n\n# 背景\n\n- `selector` 标签是在安卓工程的 XML 文件定义的资源文件。用于提高软件的交互体验。\n- 例如：在 「Button」 被按下时，选中与未选中的状态，即可由 `selector` 中设定。\n\n# 属性\n\n- `state_enabled`: 设置触摸或点击事件是否可用状态，一般只在 `false` 时设置该属性，表示不可用状态\n- `state_pressed`: 设置是否按压状态，一般在 `true` 时设置该属性，表示已按压状态，默认为 `false` \n- `state_selected`: 设置是否选中状态，`true` 表示已选中，`false` 表示未选中\n- `state_checked`: 设置是否勾选状态，主要用于 `CheckBox` 和 `RadioButton`，`true` 表示已被勾选，`false` 表示未被勾选\n- `state_checkable`: 设置勾选是否可用状态，类似`state_enabled`，只是`state_enabled`会影响触摸或点击事件，而state_checkable影响勾选事件\n- `state_focused`: 设置是否获得焦点状态，`true`表示获得焦点，默认为`false`，表示未获得焦点\n- `state_window_focused`: 设置当前窗口是否获得焦点状态，`true` 表示获得焦点，`false` 表示未获得焦点，例如拉下通知栏或弹出对话框时，当前界面就会失去焦点；另外，`ListView` 的`ListItem` 获得焦点时也会触发 `true` 状态，可以理解为当前窗口就是 `ListItem`本身\n- `state_activated`: 设置是否被激活状态，`true` 表示被激活，`false` 表示未激活，「API Level 11」及以上才支持，可通过代码调用控件的 `setActivated(boolean)`方法设置是否激活该控件\n- `state_hovered`: 设置是否鼠标在上面滑动的状态，`true` 表示鼠标在上面滑动，默认为`false`，「API Level 14」及以上才支持\n\n# 例子\n\n样例代码：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <!-- 当前窗口失去焦点时 -->\n    <item android:color=\"@android:color/black\" android:state_window_focused=\"false\" />\n    <!-- 不可用时 -->\n    <item android:color=\"@android:color/background_light\" android:state_enabled=\"false\" />\n    <!-- 按压时 -->\n    <item android:color=\"@android:color/holo_blue_light\" android:state_pressed=\"true\" />\n    <!-- 被选中时 -->\n    <item android:color=\"@android:color/holo_green_dark\" android:state_selected=\"true\" />\n    <!-- 被激活时 -->\n    <item android:color=\"@android:color/holo_green_light\" android:state_activated=\"true\" />\n    <!-- 默认时 -->\n    <item android:color=\"@android:color/white\" />\n</selector>\n```\n\n# 注意\n\n- 一定要注意，在 `selector` 内部的 `item` 顺序问题，不同的顺序会造成不同的效果。有时候设置的效果没有生效，往往是顺序的问题。\n- item是从上往下匹配的，如果匹配到一个item那它就将采用这个item，而不是采用最佳匹配的规则；所以设置默认的状态，一定要写在最后，如果写在前面，则后面所有的item都不会起作用了。\n\n---\n","slug":"android-selector","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzac000il1sk8l5kj1pv","content":"<blockquote>\n<p>关于 Android 的 Selector</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><ul>\n<li><code>selector</code> 标签是在安卓工程的 XML 文件定义的资源文件。用于提高软件的交互体验。</li>\n<li>例如：在 「Button」 被按下时，选中与未选中的状态，即可由 <code>selector</code> 中设定。</li>\n</ul>\n<h1 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h1><ul>\n<li><code>state_enabled</code>: 设置触摸或点击事件是否可用状态，一般只在 <code>false</code> 时设置该属性，表示不可用状态</li>\n<li><code>state_pressed</code>: 设置是否按压状态，一般在 <code>true</code> 时设置该属性，表示已按压状态，默认为 <code>false</code> </li>\n<li><code>state_selected</code>: 设置是否选中状态，<code>true</code> 表示已选中，<code>false</code> 表示未选中</li>\n<li><code>state_checked</code>: 设置是否勾选状态，主要用于 <code>CheckBox</code> 和 <code>RadioButton</code>，<code>true</code> 表示已被勾选，<code>false</code> 表示未被勾选</li>\n<li><code>state_checkable</code>: 设置勾选是否可用状态，类似<code>state_enabled</code>，只是<code>state_enabled</code>会影响触摸或点击事件，而state_checkable影响勾选事件</li>\n<li><code>state_focused</code>: 设置是否获得焦点状态，<code>true</code>表示获得焦点，默认为<code>false</code>，表示未获得焦点</li>\n<li><code>state_window_focused</code>: 设置当前窗口是否获得焦点状态，<code>true</code> 表示获得焦点，<code>false</code> 表示未获得焦点，例如拉下通知栏或弹出对话框时，当前界面就会失去焦点；另外，<code>ListView</code> 的<code>ListItem</code> 获得焦点时也会触发 <code>true</code> 状态，可以理解为当前窗口就是 <code>ListItem</code>本身</li>\n<li><code>state_activated</code>: 设置是否被激活状态，<code>true</code> 表示被激活，<code>false</code> 表示未激活，「API Level 11」及以上才支持，可通过代码调用控件的 <code>setActivated(boolean)</code>方法设置是否激活该控件</li>\n<li><code>state_hovered</code>: 设置是否鼠标在上面滑动的状态，<code>true</code> 表示鼠标在上面滑动，默认为<code>false</code>，「API Level 14」及以上才支持</li>\n</ul>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h1><p>样例代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 当前窗口失去焦点时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/black\"</span> <span class=\"attr\">android:state_window_focused</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 不可用时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/background_light\"</span> <span class=\"attr\">android:state_enabled</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 按压时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/holo_blue_light\"</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 被选中时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/holo_green_dark\"</span> <span class=\"attr\">android:state_selected</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 被激活时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/holo_green_light\"</span> <span class=\"attr\">android:state_activated</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 默认时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/white\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><ul>\n<li>一定要注意，在 <code>selector</code> 内部的 <code>item</code> 顺序问题，不同的顺序会造成不同的效果。有时候设置的效果没有生效，往往是顺序的问题。</li>\n<li>item是从上往下匹配的，如果匹配到一个item那它就将采用这个item，而不是采用最佳匹配的规则；所以设置默认的状态，一定要写在最后，如果写在前面，则后面所有的item都不会起作用了。</li>\n</ul>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于 Android 的 Selector</p>\n</blockquote>","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><ul>\n<li><code>selector</code> 标签是在安卓工程的 XML 文件定义的资源文件。用于提高软件的交互体验。</li>\n<li>例如：在 「Button」 被按下时，选中与未选中的状态，即可由 <code>selector</code> 中设定。</li>\n</ul>\n<h1 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h1><ul>\n<li><code>state_enabled</code>: 设置触摸或点击事件是否可用状态，一般只在 <code>false</code> 时设置该属性，表示不可用状态</li>\n<li><code>state_pressed</code>: 设置是否按压状态，一般在 <code>true</code> 时设置该属性，表示已按压状态，默认为 <code>false</code> </li>\n<li><code>state_selected</code>: 设置是否选中状态，<code>true</code> 表示已选中，<code>false</code> 表示未选中</li>\n<li><code>state_checked</code>: 设置是否勾选状态，主要用于 <code>CheckBox</code> 和 <code>RadioButton</code>，<code>true</code> 表示已被勾选，<code>false</code> 表示未被勾选</li>\n<li><code>state_checkable</code>: 设置勾选是否可用状态，类似<code>state_enabled</code>，只是<code>state_enabled</code>会影响触摸或点击事件，而state_checkable影响勾选事件</li>\n<li><code>state_focused</code>: 设置是否获得焦点状态，<code>true</code>表示获得焦点，默认为<code>false</code>，表示未获得焦点</li>\n<li><code>state_window_focused</code>: 设置当前窗口是否获得焦点状态，<code>true</code> 表示获得焦点，<code>false</code> 表示未获得焦点，例如拉下通知栏或弹出对话框时，当前界面就会失去焦点；另外，<code>ListView</code> 的<code>ListItem</code> 获得焦点时也会触发 <code>true</code> 状态，可以理解为当前窗口就是 <code>ListItem</code>本身</li>\n<li><code>state_activated</code>: 设置是否被激活状态，<code>true</code> 表示被激活，<code>false</code> 表示未激活，「API Level 11」及以上才支持，可通过代码调用控件的 <code>setActivated(boolean)</code>方法设置是否激活该控件</li>\n<li><code>state_hovered</code>: 设置是否鼠标在上面滑动的状态，<code>true</code> 表示鼠标在上面滑动，默认为<code>false</code>，「API Level 14」及以上才支持</li>\n</ul>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h1><p>样例代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 当前窗口失去焦点时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/black\"</span> <span class=\"attr\">android:state_window_focused</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 不可用时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/background_light\"</span> <span class=\"attr\">android:state_enabled</span>=<span class=\"string\">\"false\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 按压时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/holo_blue_light\"</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 被选中时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/holo_green_dark\"</span> <span class=\"attr\">android:state_selected</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 被激活时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/holo_green_light\"</span> <span class=\"attr\">android:state_activated</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 默认时 --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/white\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><ul>\n<li>一定要注意，在 <code>selector</code> 内部的 <code>item</code> 顺序问题，不同的顺序会造成不同的效果。有时候设置的效果没有生效，往往是顺序的问题。</li>\n<li>item是从上往下匹配的，如果匹配到一个item那它就将采用这个item，而不是采用最佳匹配的规则；所以设置默认的状态，一定要写在最后，如果写在前面，则后面所有的item都不会起作用了。</li>\n</ul>\n<hr>"},{"title":"Android 卡片背景","date":"2017-09-26T16:00:00.000Z","_content":"\n> 关于 Android 的 卡片背景制定\n\n<!-- more -->\n\n# 背景\n\n- 因为 CardView 的卡片形式可用于许多场景。但是 v7 CardView 的 jar 包与 aar 包引入项目中总会出错，暂时找不到解决方案，所以就干脆直接编写 XML 文件来制作一张类似于 CardView 的万能背景。\n\n# 要素\n\n- 在此卡片背景中，需要在 Android 项目的「drawable」中新建一个 xml，用于编写背景，而被引用。\n- 会用上的元素包括：`layer-list`,`item`,`shape`\n\n# 定义\n\n在「drawable」中创建 `bg_card.xml`\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item\n        android:left=\"@dimen/card_shadow\"\n        android:top=\"@dimen/card_shadow\">\n        <shape android:shape=\"rectangle\">\n            <solid android:color=\"@color/card_white_shadow\" />\n            <corners android:radius=\"@dimen/card_radius\" />\n        </shape>\n    </item>\n\n    <item\n        android:bottom=\"@dimen/card_shadow\"\n        android:right=\"@dimen/card_shadow\">\n        <shape android:shape=\"rectangle\">\n            <solid android:color=\"@color/card_white_bg\" />\n            <corners android:radius=\"@dimen/card_radius\" />\n        </shape>\n    </item>\n\n</layer-list>\n```\n\n> - `layer-list` 就是将内部多个元素同时暂时在画面上的标签\n> - 这里用到两个`item`，上面的为阴影效果，下面的为背景效果\n> - 其中 `android:left`，`android:top`与`android:bottom`,`android:right`分别控制两个 `item`的错位效果\n> - `shape` 标签用于绘制各种形状，`android:shape=\"rectangle`用于表示绘制矩形，不过好像不写这个也有效果，待测试验证。\n> - `solid` 表示图像填充的颜色\n> - `corners` 表示图像的圆角角度\n\n# 使用\n\n在其他文件中，只要通过设置其背景为此 xml 即可。\n\n```xml\n<RelativeLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@drawable/bg_card\">\n</RelativeLayout>\n```\n\n---","source":"_posts/android-卡片背景.md","raw":"---\ntitle: Android 卡片背景\ndate: 2017-09-27\ntags: \n- android\n- card\n- xml\n- note\ncategories: Android\n---\n\n> 关于 Android 的 卡片背景制定\n\n<!-- more -->\n\n# 背景\n\n- 因为 CardView 的卡片形式可用于许多场景。但是 v7 CardView 的 jar 包与 aar 包引入项目中总会出错，暂时找不到解决方案，所以就干脆直接编写 XML 文件来制作一张类似于 CardView 的万能背景。\n\n# 要素\n\n- 在此卡片背景中，需要在 Android 项目的「drawable」中新建一个 xml，用于编写背景，而被引用。\n- 会用上的元素包括：`layer-list`,`item`,`shape`\n\n# 定义\n\n在「drawable」中创建 `bg_card.xml`\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item\n        android:left=\"@dimen/card_shadow\"\n        android:top=\"@dimen/card_shadow\">\n        <shape android:shape=\"rectangle\">\n            <solid android:color=\"@color/card_white_shadow\" />\n            <corners android:radius=\"@dimen/card_radius\" />\n        </shape>\n    </item>\n\n    <item\n        android:bottom=\"@dimen/card_shadow\"\n        android:right=\"@dimen/card_shadow\">\n        <shape android:shape=\"rectangle\">\n            <solid android:color=\"@color/card_white_bg\" />\n            <corners android:radius=\"@dimen/card_radius\" />\n        </shape>\n    </item>\n\n</layer-list>\n```\n\n> - `layer-list` 就是将内部多个元素同时暂时在画面上的标签\n> - 这里用到两个`item`，上面的为阴影效果，下面的为背景效果\n> - 其中 `android:left`，`android:top`与`android:bottom`,`android:right`分别控制两个 `item`的错位效果\n> - `shape` 标签用于绘制各种形状，`android:shape=\"rectangle`用于表示绘制矩形，不过好像不写这个也有效果，待测试验证。\n> - `solid` 表示图像填充的颜色\n> - `corners` 表示图像的圆角角度\n\n# 使用\n\n在其他文件中，只要通过设置其背景为此 xml 即可。\n\n```xml\n<RelativeLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@drawable/bg_card\">\n</RelativeLayout>\n```\n\n---","slug":"android-卡片背景","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzaf000jl1skuytl0p6p","content":"<blockquote>\n<p>关于 Android 的 卡片背景制定</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><ul>\n<li>因为 CardView 的卡片形式可用于许多场景。但是 v7 CardView 的 jar 包与 aar 包引入项目中总会出错，暂时找不到解决方案，所以就干脆直接编写 XML 文件来制作一张类似于 CardView 的万能背景。</li>\n</ul>\n<h1 id=\"要素\"><a href=\"#要素\" class=\"headerlink\" title=\"要素\"></a>要素</h1><ul>\n<li>在此卡片背景中，需要在 Android 项目的「drawable」中新建一个 xml，用于编写背景，而被引用。</li>\n<li>会用上的元素包括：<code>layer-list</code>,<code>item</code>,<code>shape</code></li>\n</ul>\n<h1 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h1><p>在「drawable」中创建 <code>bg_card.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">layer-list</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:left</span>=<span class=\"string\">\"@dimen/card_shadow\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:top</span>=<span class=\"string\">\"@dimen/card_shadow\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/card_white_shadow\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"@dimen/card_radius\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:bottom</span>=<span class=\"string\">\"@dimen/card_shadow\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:right</span>=<span class=\"string\">\"@dimen/card_shadow\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/card_white_bg\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"@dimen/card_radius\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">layer-list</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li><code>layer-list</code> 就是将内部多个元素同时暂时在画面上的标签</li>\n<li>这里用到两个<code>item</code>，上面的为阴影效果，下面的为背景效果</li>\n<li>其中 <code>android:left</code>，<code>android:top</code>与<code>android:bottom</code>,<code>android:right</code>分别控制两个 <code>item</code>的错位效果</li>\n<li><code>shape</code> 标签用于绘制各种形状，<code>android:shape=&quot;rectangle</code>用于表示绘制矩形，不过好像不写这个也有效果，待测试验证。</li>\n<li><code>solid</code> 表示图像填充的颜色</li>\n<li><code>corners</code> 表示图像的圆角角度</li>\n</ul>\n</blockquote>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>在其他文件中，只要通过设置其背景为此 xml 即可。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/bg_card\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于 Android 的 卡片背景制定</p>\n</blockquote>","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><ul>\n<li>因为 CardView 的卡片形式可用于许多场景。但是 v7 CardView 的 jar 包与 aar 包引入项目中总会出错，暂时找不到解决方案，所以就干脆直接编写 XML 文件来制作一张类似于 CardView 的万能背景。</li>\n</ul>\n<h1 id=\"要素\"><a href=\"#要素\" class=\"headerlink\" title=\"要素\"></a>要素</h1><ul>\n<li>在此卡片背景中，需要在 Android 项目的「drawable」中新建一个 xml，用于编写背景，而被引用。</li>\n<li>会用上的元素包括：<code>layer-list</code>,<code>item</code>,<code>shape</code></li>\n</ul>\n<h1 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h1><p>在「drawable」中创建 <code>bg_card.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">layer-list</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:left</span>=<span class=\"string\">\"@dimen/card_shadow\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:top</span>=<span class=\"string\">\"@dimen/card_shadow\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/card_white_shadow\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"@dimen/card_radius\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:bottom</span>=<span class=\"string\">\"@dimen/card_shadow\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:right</span>=<span class=\"string\">\"@dimen/card_shadow\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/card_white_bg\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"@dimen/card_radius\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">layer-list</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li><code>layer-list</code> 就是将内部多个元素同时暂时在画面上的标签</li>\n<li>这里用到两个<code>item</code>，上面的为阴影效果，下面的为背景效果</li>\n<li>其中 <code>android:left</code>，<code>android:top</code>与<code>android:bottom</code>,<code>android:right</code>分别控制两个 <code>item</code>的错位效果</li>\n<li><code>shape</code> 标签用于绘制各种形状，<code>android:shape=&quot;rectangle</code>用于表示绘制矩形，不过好像不写这个也有效果，待测试验证。</li>\n<li><code>solid</code> 表示图像填充的颜色</li>\n<li><code>corners</code> 表示图像的圆角角度</li>\n</ul>\n</blockquote>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>在其他文件中，只要通过设置其背景为此 xml 即可。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/bg_card\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<hr>"},{"title":"Android 自定义地图比例尺控件","date":"2017-09-21T16:00:00.000Z","_content":"\n![地图比例尺示意图](http://ovlnfs1rj.bkt.clouddn.com/android-scale-title.jpg)\n\n> 关于在 Android 自定义地图比例尺控件的背景与过程\n\n<!-- more -->\n\n# 背景\n\n比例尺是标识图上一条线段的长度与地面上相应线段的实际长度之比。\n因此地图上的比例尺包含两个要素，线段与值。\n\n这里我们需要自己绘制出一个比例尺控件。\n\n# 比例尺表示选择\n\n目前比例尺有两种表达方案：\n\n1. 固定线段长度，改变值\n2. 固定值，改变线段长度\n\n参考目前流行的百度地图、高德地图，采用第二种方案。即在地图缩放的过程中，实施改变比例尺的长度。\n\n# 步骤\n\n## 1. 创建一个比例尺控件「MyScaleView.java」\n\n## 2. 继承 View ，重写其构造方法，定义变量\n\n```java\n    Context mContext;\n    int mScaleWidth;\n    int mScaleHight;\n    String mScaleText;\n    int mTextColor;\n    int mScaleSpaceText;\n    int mTextSize;\n    Paint mPaint;\n\n    public MyScaleView(Context context) {\n        super(context);\n        this.mContext = context;\n        initScale();\n    }\n    public MyScaleView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        this.mContext = context;\n        initScale();\n    }\n    public MyScaleView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        this.mContext = context;\n        initScale();\n    }\n```\n\n> 其中 :\n> 1. mScaleWidth 是比例尺的宽度\n> 1. mScaleHight 是比例尺的高度\n> 1. mScaleText 是比例尺显示的文字\n> 1. mTextColor 是比例尺显示文字的颜色\n> 1. mScaleSpaceText 是比例尺文字与图例的空隙\n> 1. mTextSize 是比例尺文字的大小\n\n## 3. 编写初始化参数的方法 `initScale()`，在构造方法中调用\n\n```java\n    /**\n     * 初始化比例尺参数\n     */\n    private void initScale() {\n        mScaleWidth = 120;\n        mScaleHight = 10;\n        mScaleText = \"比例尺\";\n        mTextColor = Color.BLUE;\n        mScaleSpaceText = 6;\n        mTextSize = getResources().getDimensionPixelSize(R.dimen.txt_map_scale_size);\n        mPaint = new Paint();\n    }\n```\n\n> 其中`R.dimen.txt_map_scale_size`是「dimens.xml」中设置的比例尺文字大小，目的是适配不用尺寸的设备。\n\n## 4. 编写 获取宽度，获取高度的方法，`getWidthSize()`，`getHightSize()` \n\n```java\n    private int getWidthSize(int widthMeasureSpec) {\n        return MeasureSpec.getSize(widthMeasureSpec);\n    }\n\n    private int getHeightSize(int heightMeasureSpec) {\n        int mode = MeasureSpec.getMode(heightMeasureSpec);\n        int height = 0;\n        switch (mode) {\n            case MeasureSpec.AT_MOST:\n                height = mTextSize + mScaleSpaceText + mScaleHight;\n                break;\n            case MeasureSpec.UNSPECIFIED:\n                height = Math.max(mTextSize + mScaleSpaceText + mScaleHight, MeasureSpec.getSize(heightMeasureSpec));\n                break;\n            case MeasureSpec.EXACTLY:\n                height = MeasureSpec.getSize(heightMeasureSpec);\n                break;\n            default:\n                break;\n        }\n        return height;\n    }\n```\n\n## 5. 重写 `onMearsure()` 方法\n\n```java\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        int widthSize = getWidthSize(widthMeasureSpec);\n        int heightSize = getHeightSize(heightMeasureSpec);\n        setMeasuredDimension(widthSize, heightSize);\n    }\n```\n\n> 使用 `setMeasuredDimension`将宽高返回给父View\n\n## 6. 重写 onDraw() 方法\n\n```java\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        int scaleWidth = mScaleWidth;\n        mPaint.setColor(mTextColor);\n        mPaint.setAntiAlias(true);\n        mPaint.setTextSize(mTextSize);\n        mPaint.setTypeface(Typeface.DEFAULT);\n        float textWidth = mPaint.measureText(mScaleText);\n        canvas.drawText(mScaleText, (scaleWidth - textWidth) / 2, mTextSize, mPaint);\n        Rect scaleRect = new Rect(0, mTextSize + mScaleSpaceText, scaleWidth, mTextSize + mScaleSpaceText + mScaleHight);\n        drawNightPath(canvas, scaleRect);\n    }\n```\n\n> ![比例尺说明图](http://ovlnfs1rj.bkt.clouddn.com/android-scaleandroid-scale.png)\n> - 需要说明的是，`canvas.drawText()`设置文字的左下角为绘制的起点，如图所示\n\n## 7. 编写比例尺刷新方法 refreshScaleView()\n\n```java\n    /**\n     * 对外接口 ，刷新比例尺信息\n     * @param width 比例尺的宽度，如 1.6 厘米\n     * @param scaleText  比例尺要显示的文字\n     */\n    public void refreshScaleView(double width , String scaleText) {\n        setScaleText(scaleText);\n        setScaleWidth(width);\n        invalidate();\n    }\n    private void setScaleText(String scaleText) {\n        this.mScaleText = scaleText;\n    }\n    private void setScaleWidth(double width) {\n        double ppi = getPPIofDevice();\n        mScaleWidth = (int) (width * ppi / 2.54);\n    }\n    /**\n     * @return 设备 PPI 值\n     */\n    private double getPPIofDevice() {\n        Point point = new Point();\n        Activity activity = (Activity) mContext;\n        activity.getWindowManager().getDefaultDisplay().getRealSize(point);\n        DisplayMetrics dm = getResources().getDisplayMetrics();\n        double x = Math.pow(point.x / dm.xdpi, 2);\n        double y = Math.pow(point.y / dm.ydpi, 2);\n        double screenInches = Math.sqrt(x + y);\n        return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2)) / screenInches;\n    }\n```\n\n> - `refreshScaleView()` 为被调用的刷新比例尺数据的方法\n> - `setScaleText()` 设置比例尺文字，这个不用说明\n> - `setScaleWidth()` 这是比例尺的宽度，里面用到 `getPPIofDevice()`这方法来获取设备的PPI数据，用于显示实际宽度\n\n---\n题图：来源于 Google\n","source":"_posts/android-自定义比例尺控件.md","raw":"---\ntitle: Android 自定义地图比例尺控件\ndate: 2017-09-22\ntags: \n- Android\n- 自定义控件\n- 比例尺\n- note\ncategories: Android\n---\n\n![地图比例尺示意图](http://ovlnfs1rj.bkt.clouddn.com/android-scale-title.jpg)\n\n> 关于在 Android 自定义地图比例尺控件的背景与过程\n\n<!-- more -->\n\n# 背景\n\n比例尺是标识图上一条线段的长度与地面上相应线段的实际长度之比。\n因此地图上的比例尺包含两个要素，线段与值。\n\n这里我们需要自己绘制出一个比例尺控件。\n\n# 比例尺表示选择\n\n目前比例尺有两种表达方案：\n\n1. 固定线段长度，改变值\n2. 固定值，改变线段长度\n\n参考目前流行的百度地图、高德地图，采用第二种方案。即在地图缩放的过程中，实施改变比例尺的长度。\n\n# 步骤\n\n## 1. 创建一个比例尺控件「MyScaleView.java」\n\n## 2. 继承 View ，重写其构造方法，定义变量\n\n```java\n    Context mContext;\n    int mScaleWidth;\n    int mScaleHight;\n    String mScaleText;\n    int mTextColor;\n    int mScaleSpaceText;\n    int mTextSize;\n    Paint mPaint;\n\n    public MyScaleView(Context context) {\n        super(context);\n        this.mContext = context;\n        initScale();\n    }\n    public MyScaleView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        this.mContext = context;\n        initScale();\n    }\n    public MyScaleView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        this.mContext = context;\n        initScale();\n    }\n```\n\n> 其中 :\n> 1. mScaleWidth 是比例尺的宽度\n> 1. mScaleHight 是比例尺的高度\n> 1. mScaleText 是比例尺显示的文字\n> 1. mTextColor 是比例尺显示文字的颜色\n> 1. mScaleSpaceText 是比例尺文字与图例的空隙\n> 1. mTextSize 是比例尺文字的大小\n\n## 3. 编写初始化参数的方法 `initScale()`，在构造方法中调用\n\n```java\n    /**\n     * 初始化比例尺参数\n     */\n    private void initScale() {\n        mScaleWidth = 120;\n        mScaleHight = 10;\n        mScaleText = \"比例尺\";\n        mTextColor = Color.BLUE;\n        mScaleSpaceText = 6;\n        mTextSize = getResources().getDimensionPixelSize(R.dimen.txt_map_scale_size);\n        mPaint = new Paint();\n    }\n```\n\n> 其中`R.dimen.txt_map_scale_size`是「dimens.xml」中设置的比例尺文字大小，目的是适配不用尺寸的设备。\n\n## 4. 编写 获取宽度，获取高度的方法，`getWidthSize()`，`getHightSize()` \n\n```java\n    private int getWidthSize(int widthMeasureSpec) {\n        return MeasureSpec.getSize(widthMeasureSpec);\n    }\n\n    private int getHeightSize(int heightMeasureSpec) {\n        int mode = MeasureSpec.getMode(heightMeasureSpec);\n        int height = 0;\n        switch (mode) {\n            case MeasureSpec.AT_MOST:\n                height = mTextSize + mScaleSpaceText + mScaleHight;\n                break;\n            case MeasureSpec.UNSPECIFIED:\n                height = Math.max(mTextSize + mScaleSpaceText + mScaleHight, MeasureSpec.getSize(heightMeasureSpec));\n                break;\n            case MeasureSpec.EXACTLY:\n                height = MeasureSpec.getSize(heightMeasureSpec);\n                break;\n            default:\n                break;\n        }\n        return height;\n    }\n```\n\n## 5. 重写 `onMearsure()` 方法\n\n```java\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        int widthSize = getWidthSize(widthMeasureSpec);\n        int heightSize = getHeightSize(heightMeasureSpec);\n        setMeasuredDimension(widthSize, heightSize);\n    }\n```\n\n> 使用 `setMeasuredDimension`将宽高返回给父View\n\n## 6. 重写 onDraw() 方法\n\n```java\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        int scaleWidth = mScaleWidth;\n        mPaint.setColor(mTextColor);\n        mPaint.setAntiAlias(true);\n        mPaint.setTextSize(mTextSize);\n        mPaint.setTypeface(Typeface.DEFAULT);\n        float textWidth = mPaint.measureText(mScaleText);\n        canvas.drawText(mScaleText, (scaleWidth - textWidth) / 2, mTextSize, mPaint);\n        Rect scaleRect = new Rect(0, mTextSize + mScaleSpaceText, scaleWidth, mTextSize + mScaleSpaceText + mScaleHight);\n        drawNightPath(canvas, scaleRect);\n    }\n```\n\n> ![比例尺说明图](http://ovlnfs1rj.bkt.clouddn.com/android-scaleandroid-scale.png)\n> - 需要说明的是，`canvas.drawText()`设置文字的左下角为绘制的起点，如图所示\n\n## 7. 编写比例尺刷新方法 refreshScaleView()\n\n```java\n    /**\n     * 对外接口 ，刷新比例尺信息\n     * @param width 比例尺的宽度，如 1.6 厘米\n     * @param scaleText  比例尺要显示的文字\n     */\n    public void refreshScaleView(double width , String scaleText) {\n        setScaleText(scaleText);\n        setScaleWidth(width);\n        invalidate();\n    }\n    private void setScaleText(String scaleText) {\n        this.mScaleText = scaleText;\n    }\n    private void setScaleWidth(double width) {\n        double ppi = getPPIofDevice();\n        mScaleWidth = (int) (width * ppi / 2.54);\n    }\n    /**\n     * @return 设备 PPI 值\n     */\n    private double getPPIofDevice() {\n        Point point = new Point();\n        Activity activity = (Activity) mContext;\n        activity.getWindowManager().getDefaultDisplay().getRealSize(point);\n        DisplayMetrics dm = getResources().getDisplayMetrics();\n        double x = Math.pow(point.x / dm.xdpi, 2);\n        double y = Math.pow(point.y / dm.ydpi, 2);\n        double screenInches = Math.sqrt(x + y);\n        return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2)) / screenInches;\n    }\n```\n\n> - `refreshScaleView()` 为被调用的刷新比例尺数据的方法\n> - `setScaleText()` 设置比例尺文字，这个不用说明\n> - `setScaleWidth()` 这是比例尺的宽度，里面用到 `getPPIofDevice()`这方法来获取设备的PPI数据，用于显示实际宽度\n\n---\n题图：来源于 Google\n","slug":"android-自定义比例尺控件","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzah000nl1skxjecjls4","content":"<p><img src=\"http://ovlnfs1rj.bkt.clouddn.com/android-scale-title.jpg\" alt=\"地图比例尺示意图\"></p>\n<blockquote>\n<p>关于在 Android 自定义地图比例尺控件的背景与过程</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>比例尺是标识图上一条线段的长度与地面上相应线段的实际长度之比。<br>因此地图上的比例尺包含两个要素，线段与值。</p>\n<p>这里我们需要自己绘制出一个比例尺控件。</p>\n<h1 id=\"比例尺表示选择\"><a href=\"#比例尺表示选择\" class=\"headerlink\" title=\"比例尺表示选择\"></a>比例尺表示选择</h1><p>目前比例尺有两种表达方案：</p>\n<ol>\n<li>固定线段长度，改变值</li>\n<li>固定值，改变线段长度</li>\n</ol>\n<p>参考目前流行的百度地图、高德地图，采用第二种方案。即在地图缩放的过程中，实施改变比例尺的长度。</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-创建一个比例尺控件「MyScaleView-java」\"><a href=\"#1-创建一个比例尺控件「MyScaleView-java」\" class=\"headerlink\" title=\"1. 创建一个比例尺控件「MyScaleView.java」\"></a>1. 创建一个比例尺控件「MyScaleView.java」</h2><h2 id=\"2-继承-View-，重写其构造方法，定义变量\"><a href=\"#2-继承-View-，重写其构造方法，定义变量\" class=\"headerlink\" title=\"2. 继承 View ，重写其构造方法，定义变量\"></a>2. 继承 View ，重写其构造方法，定义变量</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">Context mContext;</div><div class=\"line\"><span class=\"keyword\">int</span> mScaleWidth;</div><div class=\"line\"><span class=\"keyword\">int</span> mScaleHight;</div><div class=\"line\">String mScaleText;</div><div class=\"line\"><span class=\"keyword\">int</span> mTextColor;</div><div class=\"line\"><span class=\"keyword\">int</span> mScaleSpaceText;</div><div class=\"line\"><span class=\"keyword\">int</span> mTextSize;</div><div class=\"line\">Paint mPaint;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyScaleView</span><span class=\"params\">(Context context)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(context);</div><div class=\"line\">    <span class=\"keyword\">this</span>.mContext = context;</div><div class=\"line\">    initScale();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyScaleView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(context, attrs);</div><div class=\"line\">    <span class=\"keyword\">this</span>.mContext = context;</div><div class=\"line\">    initScale();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyScaleView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(context, attrs, defStyleAttr);</div><div class=\"line\">    <span class=\"keyword\">this</span>.mContext = context;</div><div class=\"line\">    initScale();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>其中 :</p>\n<ol>\n<li>mScaleWidth 是比例尺的宽度</li>\n<li>mScaleHight 是比例尺的高度</li>\n<li>mScaleText 是比例尺显示的文字</li>\n<li>mTextColor 是比例尺显示文字的颜色</li>\n<li>mScaleSpaceText 是比例尺文字与图例的空隙</li>\n<li>mTextSize 是比例尺文字的大小</li>\n</ol>\n</blockquote>\n<h2 id=\"3-编写初始化参数的方法-initScale-，在构造方法中调用\"><a href=\"#3-编写初始化参数的方法-initScale-，在构造方法中调用\" class=\"headerlink\" title=\"3. 编写初始化参数的方法 initScale()，在构造方法中调用\"></a>3. 编写初始化参数的方法 <code>initScale()</code>，在构造方法中调用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 初始化比例尺参数</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initScale</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    mScaleWidth = <span class=\"number\">120</span>;</div><div class=\"line\">    mScaleHight = <span class=\"number\">10</span>;</div><div class=\"line\">    mScaleText = <span class=\"string\">\"比例尺\"</span>;</div><div class=\"line\">    mTextColor = Color.BLUE;</div><div class=\"line\">    mScaleSpaceText = <span class=\"number\">6</span>;</div><div class=\"line\">    mTextSize = getResources().getDimensionPixelSize(R.dimen.txt_map_scale_size);</div><div class=\"line\">    mPaint = <span class=\"keyword\">new</span> Paint();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>其中<code>R.dimen.txt_map_scale_size</code>是「dimens.xml」中设置的比例尺文字大小，目的是适配不用尺寸的设备。</p>\n</blockquote>\n<h2 id=\"4-编写-获取宽度，获取高度的方法，getWidthSize-，getHightSize\"><a href=\"#4-编写-获取宽度，获取高度的方法，getWidthSize-，getHightSize\" class=\"headerlink\" title=\"4. 编写 获取宽度，获取高度的方法，getWidthSize()，getHightSize()\"></a>4. 编写 获取宽度，获取高度的方法，<code>getWidthSize()</code>，<code>getHightSize()</code></h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">getWidthSize</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> MeasureSpec.getSize(widthMeasureSpec);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">getHeightSize</span><span class=\"params\">(<span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> mode = MeasureSpec.getMode(heightMeasureSpec);</div><div class=\"line\">    <span class=\"keyword\">int</span> height = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (mode) &#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> MeasureSpec.AT_MOST:</div><div class=\"line\">            height = mTextSize + mScaleSpaceText + mScaleHight;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> MeasureSpec.UNSPECIFIED:</div><div class=\"line\">            height = Math.max(mTextSize + mScaleSpaceText + mScaleHight, MeasureSpec.getSize(heightMeasureSpec));</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> MeasureSpec.EXACTLY:</div><div class=\"line\">            height = MeasureSpec.getSize(heightMeasureSpec);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">default</span>:</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> height;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"5-重写-onMearsure-方法\"><a href=\"#5-重写-onMearsure-方法\" class=\"headerlink\" title=\"5. 重写 onMearsure() 方法\"></a>5. 重写 <code>onMearsure()</code> 方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class=\"line\">    <span class=\"keyword\">int</span> widthSize = getWidthSize(widthMeasureSpec);</div><div class=\"line\">    <span class=\"keyword\">int</span> heightSize = getHeightSize(heightMeasureSpec);</div><div class=\"line\">    setMeasuredDimension(widthSize, heightSize);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>使用 <code>setMeasuredDimension</code>将宽高返回给父View</p>\n</blockquote>\n<h2 id=\"6-重写-onDraw-方法\"><a href=\"#6-重写-onDraw-方法\" class=\"headerlink\" title=\"6. 重写 onDraw() 方法\"></a>6. 重写 onDraw() 方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onDraw(canvas);</div><div class=\"line\">    <span class=\"keyword\">int</span> scaleWidth = mScaleWidth;</div><div class=\"line\">    mPaint.setColor(mTextColor);</div><div class=\"line\">    mPaint.setAntiAlias(<span class=\"keyword\">true</span>);</div><div class=\"line\">    mPaint.setTextSize(mTextSize);</div><div class=\"line\">    mPaint.setTypeface(Typeface.DEFAULT);</div><div class=\"line\">    <span class=\"keyword\">float</span> textWidth = mPaint.measureText(mScaleText);</div><div class=\"line\">    canvas.drawText(mScaleText, (scaleWidth - textWidth) / <span class=\"number\">2</span>, mTextSize, mPaint);</div><div class=\"line\">    Rect scaleRect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, mTextSize + mScaleSpaceText, scaleWidth, mTextSize + mScaleSpaceText + mScaleHight);</div><div class=\"line\">    drawNightPath(canvas, scaleRect);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><img src=\"http://ovlnfs1rj.bkt.clouddn.com/android-scaleandroid-scale.png\" alt=\"比例尺说明图\"></p>\n<ul>\n<li>需要说明的是，<code>canvas.drawText()</code>设置文字的左下角为绘制的起点，如图所示</li>\n</ul>\n</blockquote>\n<h2 id=\"7-编写比例尺刷新方法-refreshScaleView\"><a href=\"#7-编写比例尺刷新方法-refreshScaleView\" class=\"headerlink\" title=\"7. 编写比例尺刷新方法 refreshScaleView()\"></a>7. 编写比例尺刷新方法 refreshScaleView()</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 对外接口 ，刷新比例尺信息</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> width 比例尺的宽度，如 1.6 厘米</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> scaleText  比例尺要显示的文字</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">refreshScaleView</span><span class=\"params\">(<span class=\"keyword\">double</span> width , String scaleText)</span> </span>&#123;</div><div class=\"line\">    setScaleText(scaleText);</div><div class=\"line\">    setScaleWidth(width);</div><div class=\"line\">    invalidate();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setScaleText</span><span class=\"params\">(String scaleText)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.mScaleText = scaleText;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setScaleWidth</span><span class=\"params\">(<span class=\"keyword\">double</span> width)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">double</span> ppi = getPPIofDevice();</div><div class=\"line\">    mScaleWidth = (<span class=\"keyword\">int</span>) (width * ppi / <span class=\"number\">2.54</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> 设备 PPI 值</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">double</span> <span class=\"title\">getPPIofDevice</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    Point point = <span class=\"keyword\">new</span> Point();</div><div class=\"line\">    Activity activity = (Activity) mContext;</div><div class=\"line\">    activity.getWindowManager().getDefaultDisplay().getRealSize(point);</div><div class=\"line\">    DisplayMetrics dm = getResources().getDisplayMetrics();</div><div class=\"line\">    <span class=\"keyword\">double</span> x = Math.pow(point.x / dm.xdpi, <span class=\"number\">2</span>);</div><div class=\"line\">    <span class=\"keyword\">double</span> y = Math.pow(point.y / dm.ydpi, <span class=\"number\">2</span>);</div><div class=\"line\">    <span class=\"keyword\">double</span> screenInches = Math.sqrt(x + y);</div><div class=\"line\">    <span class=\"keyword\">return</span> Math.sqrt(Math.pow(point.x, <span class=\"number\">2</span>) + Math.pow(point.y, <span class=\"number\">2</span>)) / screenInches;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li><code>refreshScaleView()</code> 为被调用的刷新比例尺数据的方法</li>\n<li><code>setScaleText()</code> 设置比例尺文字，这个不用说明</li>\n<li><code>setScaleWidth()</code> 这是比例尺的宽度，里面用到 <code>getPPIofDevice()</code>这方法来获取设备的PPI数据，用于显示实际宽度</li>\n</ul>\n</blockquote>\n<hr>\n<p>题图：来源于 Google</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"http://ovlnfs1rj.bkt.clouddn.com/android-scale-title.jpg\" alt=\"地图比例尺示意图\"></p>\n<blockquote>\n<p>关于在 Android 自定义地图比例尺控件的背景与过程</p>\n</blockquote>","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>比例尺是标识图上一条线段的长度与地面上相应线段的实际长度之比。<br>因此地图上的比例尺包含两个要素，线段与值。</p>\n<p>这里我们需要自己绘制出一个比例尺控件。</p>\n<h1 id=\"比例尺表示选择\"><a href=\"#比例尺表示选择\" class=\"headerlink\" title=\"比例尺表示选择\"></a>比例尺表示选择</h1><p>目前比例尺有两种表达方案：</p>\n<ol>\n<li>固定线段长度，改变值</li>\n<li>固定值，改变线段长度</li>\n</ol>\n<p>参考目前流行的百度地图、高德地图，采用第二种方案。即在地图缩放的过程中，实施改变比例尺的长度。</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"1-创建一个比例尺控件「MyScaleView-java」\"><a href=\"#1-创建一个比例尺控件「MyScaleView-java」\" class=\"headerlink\" title=\"1. 创建一个比例尺控件「MyScaleView.java」\"></a>1. 创建一个比例尺控件「MyScaleView.java」</h2><h2 id=\"2-继承-View-，重写其构造方法，定义变量\"><a href=\"#2-继承-View-，重写其构造方法，定义变量\" class=\"headerlink\" title=\"2. 继承 View ，重写其构造方法，定义变量\"></a>2. 继承 View ，重写其构造方法，定义变量</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">Context mContext;</div><div class=\"line\"><span class=\"keyword\">int</span> mScaleWidth;</div><div class=\"line\"><span class=\"keyword\">int</span> mScaleHight;</div><div class=\"line\">String mScaleText;</div><div class=\"line\"><span class=\"keyword\">int</span> mTextColor;</div><div class=\"line\"><span class=\"keyword\">int</span> mScaleSpaceText;</div><div class=\"line\"><span class=\"keyword\">int</span> mTextSize;</div><div class=\"line\">Paint mPaint;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyScaleView</span><span class=\"params\">(Context context)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(context);</div><div class=\"line\">    <span class=\"keyword\">this</span>.mContext = context;</div><div class=\"line\">    initScale();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyScaleView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(context, attrs);</div><div class=\"line\">    <span class=\"keyword\">this</span>.mContext = context;</div><div class=\"line\">    initScale();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyScaleView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>(context, attrs, defStyleAttr);</div><div class=\"line\">    <span class=\"keyword\">this</span>.mContext = context;</div><div class=\"line\">    initScale();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>其中 :</p>\n<ol>\n<li>mScaleWidth 是比例尺的宽度</li>\n<li>mScaleHight 是比例尺的高度</li>\n<li>mScaleText 是比例尺显示的文字</li>\n<li>mTextColor 是比例尺显示文字的颜色</li>\n<li>mScaleSpaceText 是比例尺文字与图例的空隙</li>\n<li>mTextSize 是比例尺文字的大小</li>\n</ol>\n</blockquote>\n<h2 id=\"3-编写初始化参数的方法-initScale-，在构造方法中调用\"><a href=\"#3-编写初始化参数的方法-initScale-，在构造方法中调用\" class=\"headerlink\" title=\"3. 编写初始化参数的方法 initScale()，在构造方法中调用\"></a>3. 编写初始化参数的方法 <code>initScale()</code>，在构造方法中调用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 初始化比例尺参数</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initScale</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    mScaleWidth = <span class=\"number\">120</span>;</div><div class=\"line\">    mScaleHight = <span class=\"number\">10</span>;</div><div class=\"line\">    mScaleText = <span class=\"string\">\"比例尺\"</span>;</div><div class=\"line\">    mTextColor = Color.BLUE;</div><div class=\"line\">    mScaleSpaceText = <span class=\"number\">6</span>;</div><div class=\"line\">    mTextSize = getResources().getDimensionPixelSize(R.dimen.txt_map_scale_size);</div><div class=\"line\">    mPaint = <span class=\"keyword\">new</span> Paint();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>其中<code>R.dimen.txt_map_scale_size</code>是「dimens.xml」中设置的比例尺文字大小，目的是适配不用尺寸的设备。</p>\n</blockquote>\n<h2 id=\"4-编写-获取宽度，获取高度的方法，getWidthSize-，getHightSize\"><a href=\"#4-编写-获取宽度，获取高度的方法，getWidthSize-，getHightSize\" class=\"headerlink\" title=\"4. 编写 获取宽度，获取高度的方法，getWidthSize()，getHightSize()\"></a>4. 编写 获取宽度，获取高度的方法，<code>getWidthSize()</code>，<code>getHightSize()</code></h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">getWidthSize</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> MeasureSpec.getSize(widthMeasureSpec);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">getHeightSize</span><span class=\"params\">(<span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> mode = MeasureSpec.getMode(heightMeasureSpec);</div><div class=\"line\">    <span class=\"keyword\">int</span> height = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (mode) &#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> MeasureSpec.AT_MOST:</div><div class=\"line\">            height = mTextSize + mScaleSpaceText + mScaleHight;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> MeasureSpec.UNSPECIFIED:</div><div class=\"line\">            height = Math.max(mTextSize + mScaleSpaceText + mScaleHight, MeasureSpec.getSize(heightMeasureSpec));</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> MeasureSpec.EXACTLY:</div><div class=\"line\">            height = MeasureSpec.getSize(heightMeasureSpec);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">default</span>:</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> height;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"5-重写-onMearsure-方法\"><a href=\"#5-重写-onMearsure-方法\" class=\"headerlink\" title=\"5. 重写 onMearsure() 方法\"></a>5. 重写 <code>onMearsure()</code> 方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class=\"line\">    <span class=\"keyword\">int</span> widthSize = getWidthSize(widthMeasureSpec);</div><div class=\"line\">    <span class=\"keyword\">int</span> heightSize = getHeightSize(heightMeasureSpec);</div><div class=\"line\">    setMeasuredDimension(widthSize, heightSize);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>使用 <code>setMeasuredDimension</code>将宽高返回给父View</p>\n</blockquote>\n<h2 id=\"6-重写-onDraw-方法\"><a href=\"#6-重写-onDraw-方法\" class=\"headerlink\" title=\"6. 重写 onDraw() 方法\"></a>6. 重写 onDraw() 方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onDraw(canvas);</div><div class=\"line\">    <span class=\"keyword\">int</span> scaleWidth = mScaleWidth;</div><div class=\"line\">    mPaint.setColor(mTextColor);</div><div class=\"line\">    mPaint.setAntiAlias(<span class=\"keyword\">true</span>);</div><div class=\"line\">    mPaint.setTextSize(mTextSize);</div><div class=\"line\">    mPaint.setTypeface(Typeface.DEFAULT);</div><div class=\"line\">    <span class=\"keyword\">float</span> textWidth = mPaint.measureText(mScaleText);</div><div class=\"line\">    canvas.drawText(mScaleText, (scaleWidth - textWidth) / <span class=\"number\">2</span>, mTextSize, mPaint);</div><div class=\"line\">    Rect scaleRect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, mTextSize + mScaleSpaceText, scaleWidth, mTextSize + mScaleSpaceText + mScaleHight);</div><div class=\"line\">    drawNightPath(canvas, scaleRect);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><img src=\"http://ovlnfs1rj.bkt.clouddn.com/android-scaleandroid-scale.png\" alt=\"比例尺说明图\"></p>\n<ul>\n<li>需要说明的是，<code>canvas.drawText()</code>设置文字的左下角为绘制的起点，如图所示</li>\n</ul>\n</blockquote>\n<h2 id=\"7-编写比例尺刷新方法-refreshScaleView\"><a href=\"#7-编写比例尺刷新方法-refreshScaleView\" class=\"headerlink\" title=\"7. 编写比例尺刷新方法 refreshScaleView()\"></a>7. 编写比例尺刷新方法 refreshScaleView()</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * 对外接口 ，刷新比例尺信息</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> width 比例尺的宽度，如 1.6 厘米</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> scaleText  比例尺要显示的文字</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">refreshScaleView</span><span class=\"params\">(<span class=\"keyword\">double</span> width , String scaleText)</span> </span>&#123;</div><div class=\"line\">    setScaleText(scaleText);</div><div class=\"line\">    setScaleWidth(width);</div><div class=\"line\">    invalidate();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setScaleText</span><span class=\"params\">(String scaleText)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.mScaleText = scaleText;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setScaleWidth</span><span class=\"params\">(<span class=\"keyword\">double</span> width)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">double</span> ppi = getPPIofDevice();</div><div class=\"line\">    mScaleWidth = (<span class=\"keyword\">int</span>) (width * ppi / <span class=\"number\">2.54</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> 设备 PPI 值</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">double</span> <span class=\"title\">getPPIofDevice</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    Point point = <span class=\"keyword\">new</span> Point();</div><div class=\"line\">    Activity activity = (Activity) mContext;</div><div class=\"line\">    activity.getWindowManager().getDefaultDisplay().getRealSize(point);</div><div class=\"line\">    DisplayMetrics dm = getResources().getDisplayMetrics();</div><div class=\"line\">    <span class=\"keyword\">double</span> x = Math.pow(point.x / dm.xdpi, <span class=\"number\">2</span>);</div><div class=\"line\">    <span class=\"keyword\">double</span> y = Math.pow(point.y / dm.ydpi, <span class=\"number\">2</span>);</div><div class=\"line\">    <span class=\"keyword\">double</span> screenInches = Math.sqrt(x + y);</div><div class=\"line\">    <span class=\"keyword\">return</span> Math.sqrt(Math.pow(point.x, <span class=\"number\">2</span>) + Math.pow(point.y, <span class=\"number\">2</span>)) / screenInches;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li><code>refreshScaleView()</code> 为被调用的刷新比例尺数据的方法</li>\n<li><code>setScaleText()</code> 设置比例尺文字，这个不用说明</li>\n<li><code>setScaleWidth()</code> 这是比例尺的宽度，里面用到 <code>getPPIofDevice()</code>这方法来获取设备的PPI数据，用于显示实际宽度</li>\n</ul>\n</blockquote>\n<hr>\n<p>题图：来源于 Google</p>"},{"title":"VUE 工程添加页面","date":"2018-06-06T16:00:00.000Z","_content":"\n> 关于在 vue + webpack 工程内添加页面的步骤记录\n> vue-cli 2.*\n\n<!-- more -->\n\n以 test 页面为例子\n\n# 添加文件\n\n- 「test.html」 根目录下添加\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n<title>DEMO</title>\n</head>\n<body>\n<div id=\"test\"></div>\n</body>\n</html>\n```\n\n- 「test.js」 -> 'src/pages/test/test.js'\n\n```js\nimport Vue from 'vue'\nimport test from './test.vue'\nVue.config.productionTip = false;\nnew Vue({\n  el: '#test',\n  render: h => h(test)\n})\n```\n\n- 「test.vue」 -> 'src/pages/test/test.js'\n\n```html\n<template>\n  <div id=\"test\"></div>\n</template>\n<script>\n  export default {\n    name:'test',\n  }\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"less\" scoped>\n</style>\n```\n\n# 添加配置\n\n1. 在 'config/index.js' 内添加第4行代码:\n\n```js\n  build: {\n    // Template for index.html\n    index: path.resolve(__dirname, '../dist/index.html'),\n    test:path.resolve(__dirname, '../dist/test.html'),\n    // Paths\n    assetsRoot: path.resolve(__dirname, '../dist'),\n```\n\n1. 在 'build/webpack.base.conf.js' 内添加第5行代码\n\n```js\nmodule.exports = {\n  context: path.resolve(__dirname, '../'),\n  entry: {\n    app: './src/main.js',\n    test:'./src/pages/test/test.js',\n  },\n```\n\n1. 在 'build/webpack.dev.conf.js' 的 `plugins:[]` 内添加\n\n```js\n    new HtmlWebpackPlugin({\n      filename: 'test.html',\n      template: 'test.html',\n      inject: true,\n      chunks:['test']     \n    }),\n```\n\n1. 在 'build/webpack.prod.conf.js' 的 `plugins:[]` 内添加\n\n```js\n    new HtmlWebpackPlugin({\n      filename: config.build.test,\n      template: 'test.html',\n      inject: true,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n      },\n      chunksSortMode: 'dependency',\n      chunks:['manifest','vendor','test']\n    }),\n```\n\n# 完成：重新运行\n","source":"_posts/vue工程添加页面.md","raw":"---\ntitle: VUE 工程添加页面\ndate: 2018-06-07\ntags: \n- vue\n- front\n- webpack\ncategories: Front-end\n\n---\n\n> 关于在 vue + webpack 工程内添加页面的步骤记录\n> vue-cli 2.*\n\n<!-- more -->\n\n以 test 页面为例子\n\n# 添加文件\n\n- 「test.html」 根目录下添加\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n<title>DEMO</title>\n</head>\n<body>\n<div id=\"test\"></div>\n</body>\n</html>\n```\n\n- 「test.js」 -> 'src/pages/test/test.js'\n\n```js\nimport Vue from 'vue'\nimport test from './test.vue'\nVue.config.productionTip = false;\nnew Vue({\n  el: '#test',\n  render: h => h(test)\n})\n```\n\n- 「test.vue」 -> 'src/pages/test/test.js'\n\n```html\n<template>\n  <div id=\"test\"></div>\n</template>\n<script>\n  export default {\n    name:'test',\n  }\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"less\" scoped>\n</style>\n```\n\n# 添加配置\n\n1. 在 'config/index.js' 内添加第4行代码:\n\n```js\n  build: {\n    // Template for index.html\n    index: path.resolve(__dirname, '../dist/index.html'),\n    test:path.resolve(__dirname, '../dist/test.html'),\n    // Paths\n    assetsRoot: path.resolve(__dirname, '../dist'),\n```\n\n1. 在 'build/webpack.base.conf.js' 内添加第5行代码\n\n```js\nmodule.exports = {\n  context: path.resolve(__dirname, '../'),\n  entry: {\n    app: './src/main.js',\n    test:'./src/pages/test/test.js',\n  },\n```\n\n1. 在 'build/webpack.dev.conf.js' 的 `plugins:[]` 内添加\n\n```js\n    new HtmlWebpackPlugin({\n      filename: 'test.html',\n      template: 'test.html',\n      inject: true,\n      chunks:['test']     \n    }),\n```\n\n1. 在 'build/webpack.prod.conf.js' 的 `plugins:[]` 内添加\n\n```js\n    new HtmlWebpackPlugin({\n      filename: config.build.test,\n      template: 'test.html',\n      inject: true,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n      },\n      chunksSortMode: 'dependency',\n      chunks:['manifest','vendor','test']\n    }),\n```\n\n# 完成：重新运行\n","slug":"vue工程添加页面","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzai000ol1skomt8k9em","content":"<blockquote>\n<p>关于在 vue + webpack 工程内添加页面的步骤记录<br>vue-cli 2.*</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>以 test 页面为例子</p>\n<h1 id=\"添加文件\"><a href=\"#添加文件\" class=\"headerlink\" title=\"添加文件\"></a>添加文件</h1><ul>\n<li>「test.html」 根目录下添加</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>DEMO<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"test\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li>「test.js」 -&gt; ‘src/pages/test/test.js’</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> test <span class=\"keyword\">from</span> <span class=\"string\">'./test.vue'</span></div><div class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#test'</span>,</div><div class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(test)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<ul>\n<li>「test.vue」 -&gt; ‘src/pages/test/test.js’</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"test\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></div><div class=\"line\"><span class=\"javascript\">    name:<span class=\"string\">'test'</span>,</span></div><div class=\"line\"><span class=\"undefined\">  &#125;</span></div><div class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- Add \"scoped\" attribute to limit CSS to this component only --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"less\"</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"添加配置\"><a href=\"#添加配置\" class=\"headerlink\" title=\"添加配置\"></a>添加配置</h1><ol>\n<li>在 ‘config/index.js’ 内添加第4行代码:</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">build: &#123;</div><div class=\"line\">  <span class=\"comment\">// Template for index.html</span></div><div class=\"line\">  index: path.resolve(__dirname, <span class=\"string\">'../dist/index.html'</span>),</div><div class=\"line\">  test:path.resolve(__dirname, <span class=\"string\">'../dist/test.html'</span>),</div><div class=\"line\">  <span class=\"comment\">// Paths</span></div><div class=\"line\">  assetsRoot: path.resolve(__dirname, <span class=\"string\">'../dist'</span>),</div></pre></td></tr></table></figure>\n<ol>\n<li>在 ‘build/webpack.base.conf.js’ 内添加第5行代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  context: path.resolve(__dirname, <span class=\"string\">'../'</span>),</div><div class=\"line\">  entry: &#123;</div><div class=\"line\">    app: <span class=\"string\">'./src/main.js'</span>,</div><div class=\"line\">    test:<span class=\"string\">'./src/pages/test/test.js'</span>,</div><div class=\"line\">  &#125;,</div></pre></td></tr></table></figure>\n<ol>\n<li>在 ‘build/webpack.dev.conf.js’ 的 <code>plugins:[]</code> 内添加</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</div><div class=\"line\">  filename: <span class=\"string\">'test.html'</span>,</div><div class=\"line\">  template: <span class=\"string\">'test.html'</span>,</div><div class=\"line\">  inject: <span class=\"literal\">true</span>,</div><div class=\"line\">  chunks:[<span class=\"string\">'test'</span>]     </div><div class=\"line\">&#125;),</div></pre></td></tr></table></figure>\n<ol>\n<li>在 ‘build/webpack.prod.conf.js’ 的 <code>plugins:[]</code> 内添加</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</div><div class=\"line\">  filename: config.build.test,</div><div class=\"line\">  template: <span class=\"string\">'test.html'</span>,</div><div class=\"line\">  inject: <span class=\"literal\">true</span>,</div><div class=\"line\">  minify: &#123;</div><div class=\"line\">    removeComments: <span class=\"literal\">true</span>,</div><div class=\"line\">    collapseWhitespace: <span class=\"literal\">true</span>,</div><div class=\"line\">    removeAttributeQuotes: <span class=\"literal\">true</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  chunksSortMode: <span class=\"string\">'dependency'</span>,</div><div class=\"line\">  chunks:[<span class=\"string\">'manifest'</span>,<span class=\"string\">'vendor'</span>,<span class=\"string\">'test'</span>]</div><div class=\"line\">&#125;),</div></pre></td></tr></table></figure>\n<h1 id=\"完成：重新运行\"><a href=\"#完成：重新运行\" class=\"headerlink\" title=\"完成：重新运行\"></a>完成：重新运行</h1>","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于在 vue + webpack 工程内添加页面的步骤记录<br>vue-cli 2.*</p>\n</blockquote>","more":"<p>以 test 页面为例子</p>\n<h1 id=\"添加文件\"><a href=\"#添加文件\" class=\"headerlink\" title=\"添加文件\"></a>添加文件</h1><ul>\n<li>「test.html」 根目录下添加</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>DEMO<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"test\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li>「test.js」 -&gt; ‘src/pages/test/test.js’</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> test <span class=\"keyword\">from</span> <span class=\"string\">'./test.vue'</span></div><div class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  el: <span class=\"string\">'#test'</span>,</div><div class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(test)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<ul>\n<li>「test.vue」 -&gt; ‘src/pages/test/test.js’</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"test\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></div><div class=\"line\"><span class=\"javascript\">    name:<span class=\"string\">'test'</span>,</span></div><div class=\"line\"><span class=\"undefined\">  &#125;</span></div><div class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- Add \"scoped\" attribute to limit CSS to this component only --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"less\"</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure>\n<h1 id=\"添加配置\"><a href=\"#添加配置\" class=\"headerlink\" title=\"添加配置\"></a>添加配置</h1><ol>\n<li>在 ‘config/index.js’ 内添加第4行代码:</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">build: &#123;</div><div class=\"line\">  <span class=\"comment\">// Template for index.html</span></div><div class=\"line\">  index: path.resolve(__dirname, <span class=\"string\">'../dist/index.html'</span>),</div><div class=\"line\">  test:path.resolve(__dirname, <span class=\"string\">'../dist/test.html'</span>),</div><div class=\"line\">  <span class=\"comment\">// Paths</span></div><div class=\"line\">  assetsRoot: path.resolve(__dirname, <span class=\"string\">'../dist'</span>),</div></pre></td></tr></table></figure>\n<ol>\n<li>在 ‘build/webpack.base.conf.js’ 内添加第5行代码</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  context: path.resolve(__dirname, <span class=\"string\">'../'</span>),</div><div class=\"line\">  entry: &#123;</div><div class=\"line\">    app: <span class=\"string\">'./src/main.js'</span>,</div><div class=\"line\">    test:<span class=\"string\">'./src/pages/test/test.js'</span>,</div><div class=\"line\">  &#125;,</div></pre></td></tr></table></figure>\n<ol>\n<li>在 ‘build/webpack.dev.conf.js’ 的 <code>plugins:[]</code> 内添加</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</div><div class=\"line\">  filename: <span class=\"string\">'test.html'</span>,</div><div class=\"line\">  template: <span class=\"string\">'test.html'</span>,</div><div class=\"line\">  inject: <span class=\"literal\">true</span>,</div><div class=\"line\">  chunks:[<span class=\"string\">'test'</span>]     </div><div class=\"line\">&#125;),</div></pre></td></tr></table></figure>\n<ol>\n<li>在 ‘build/webpack.prod.conf.js’ 的 <code>plugins:[]</code> 内添加</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</div><div class=\"line\">  filename: config.build.test,</div><div class=\"line\">  template: <span class=\"string\">'test.html'</span>,</div><div class=\"line\">  inject: <span class=\"literal\">true</span>,</div><div class=\"line\">  minify: &#123;</div><div class=\"line\">    removeComments: <span class=\"literal\">true</span>,</div><div class=\"line\">    collapseWhitespace: <span class=\"literal\">true</span>,</div><div class=\"line\">    removeAttributeQuotes: <span class=\"literal\">true</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  chunksSortMode: <span class=\"string\">'dependency'</span>,</div><div class=\"line\">  chunks:[<span class=\"string\">'manifest'</span>,<span class=\"string\">'vendor'</span>,<span class=\"string\">'test'</span>]</div><div class=\"line\">&#125;),</div></pre></td></tr></table></figure>\n<h1 id=\"完成：重新运行\"><a href=\"#完成：重新运行\" class=\"headerlink\" title=\"完成：重新运行\"></a>完成：重新运行</h1>"},{"title":"服务器离线搭建 Gogs","date":"2017-09-10T16:00:00.000Z","_content":"\n> 关于在服务器离线搭建 Gogs 的方法\n\n<!-- more -->\n\n# 加载 gogs/gogs 镜像\n\n> 具体步骤可参考 「docker-image-导出载入.md」\n\n1. 在互联网下载此镜像；\n\n1. 搬运到离线虚拟机中；\n\n1. 在虚拟机载入镜像；\n\n```shell\n$ docker load < gogs-gogs.tar\n$ docker tag 245abb5da84e gogs/gogs:latest\n$\n```\n\n## 部署 Gogs\n\n创建一个本地文件，用于储存 Gogs 的重要文件\n\n```shell\n$ mkdir -p /opt/mydisk/gogs\n$\n```\n\n使用 docker run 初始化启动容器\n\n```shell\n$ docker run --name=gogs -d  \\\n-p 10023:22 -p 10083:3000  \\\n-v /opt/mydisk/gogs:/data \\\ngogs/gogs\n```\n\n如果容器停止，使用 docker start 重现开启\n\n```shell\n$ docker start gogs\ngogs\n```\n\n---\n","source":"_posts/服务器-离线搭建-Gogs.md","raw":"---\ntitle: 服务器离线搭建 Gogs\ndate: 2017-09-11\ntags: \n- gogs\n- offline\n- docker\n- note\ncategories: Server\n---\n\n> 关于在服务器离线搭建 Gogs 的方法\n\n<!-- more -->\n\n# 加载 gogs/gogs 镜像\n\n> 具体步骤可参考 「docker-image-导出载入.md」\n\n1. 在互联网下载此镜像；\n\n1. 搬运到离线虚拟机中；\n\n1. 在虚拟机载入镜像；\n\n```shell\n$ docker load < gogs-gogs.tar\n$ docker tag 245abb5da84e gogs/gogs:latest\n$\n```\n\n## 部署 Gogs\n\n创建一个本地文件，用于储存 Gogs 的重要文件\n\n```shell\n$ mkdir -p /opt/mydisk/gogs\n$\n```\n\n使用 docker run 初始化启动容器\n\n```shell\n$ docker run --name=gogs -d  \\\n-p 10023:22 -p 10083:3000  \\\n-v /opt/mydisk/gogs:/data \\\ngogs/gogs\n```\n\n如果容器停止，使用 docker start 重现开启\n\n```shell\n$ docker start gogs\ngogs\n```\n\n---\n","slug":"服务器-离线搭建-Gogs","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzan000sl1skyn5yb8ko","content":"<blockquote>\n<p>关于在服务器离线搭建 Gogs 的方法</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"加载-gogs-gogs-镜像\"><a href=\"#加载-gogs-gogs-镜像\" class=\"headerlink\" title=\"加载 gogs/gogs 镜像\"></a>加载 gogs/gogs 镜像</h1><blockquote>\n<p>具体步骤可参考 「docker-image-导出载入.md」</p>\n</blockquote>\n<ol>\n<li><p>在互联网下载此镜像；</p>\n</li>\n<li><p>搬运到离线虚拟机中；</p>\n</li>\n<li><p>在虚拟机载入镜像；</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> docker load &lt; gogs-gogs.tar</div><div class=\"line\"><span class=\"meta\">$</span> docker tag 245abb5da84e gogs/gogs:latest</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<h2 id=\"部署-Gogs\"><a href=\"#部署-Gogs\" class=\"headerlink\" title=\"部署 Gogs\"></a>部署 Gogs</h2><p>创建一个本地文件，用于储存 Gogs 的重要文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> mkdir -p /opt/mydisk/gogs</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<p>使用 docker run 初始化启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> docker run --name=gogs -d  \\</div><div class=\"line\">-p 10023:22 -p 10083:3000  \\</div><div class=\"line\">-v /opt/mydisk/gogs:/data \\</div><div class=\"line\">gogs/gogs</div></pre></td></tr></table></figure>\n<p>如果容器停止，使用 docker start 重现开启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> docker start gogs</div><div class=\"line\">gogs</div></pre></td></tr></table></figure>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于在服务器离线搭建 Gogs 的方法</p>\n</blockquote>","more":"<h1 id=\"加载-gogs-gogs-镜像\"><a href=\"#加载-gogs-gogs-镜像\" class=\"headerlink\" title=\"加载 gogs/gogs 镜像\"></a>加载 gogs/gogs 镜像</h1><blockquote>\n<p>具体步骤可参考 「docker-image-导出载入.md」</p>\n</blockquote>\n<ol>\n<li><p>在互联网下载此镜像；</p>\n</li>\n<li><p>搬运到离线虚拟机中；</p>\n</li>\n<li><p>在虚拟机载入镜像；</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> docker load &lt; gogs-gogs.tar</div><div class=\"line\"><span class=\"meta\">$</span> docker tag 245abb5da84e gogs/gogs:latest</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<h2 id=\"部署-Gogs\"><a href=\"#部署-Gogs\" class=\"headerlink\" title=\"部署 Gogs\"></a>部署 Gogs</h2><p>创建一个本地文件，用于储存 Gogs 的重要文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> mkdir -p /opt/mydisk/gogs</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<p>使用 docker run 初始化启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> docker run --name=gogs -d  \\</div><div class=\"line\">-p 10023:22 -p 10083:3000  \\</div><div class=\"line\">-v /opt/mydisk/gogs:/data \\</div><div class=\"line\">gogs/gogs</div></pre></td></tr></table></figure>\n<p>如果容器停止，使用 docker start 重现开启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> docker start gogs</div><div class=\"line\">gogs</div></pre></td></tr></table></figure>\n<hr>"},{"title":"服务器的虚拟机增加内存","date":"2017-09-10T16:00:00.000Z","_content":"\n> 关于在服务器增加虚拟机内存的方法\n\n<!-- more -->\n\n# 背景\n\n大家在 project-a 上的分支没办法 `clone` 与 `pull`。\n原因是：服务器上分配给 git 可用内存不够。导致服务器在打包 git 仓库的过程中失败了。\n\n# 目的\n\n因此决定，增加 Git 所在容器的虚拟机的内存。目前分配了 4G，现打算增加到 16GB。\n\n# 过程\n\n给虚拟机增加内存的过程非常简单。\n> 其中 GitLab 为正在使用的 GitLab 托管平台 , 「虚拟机 C1」 为部署有Docker负债均衡的虚拟机\n1. 停止 「GitLab 容器」；\n1. 停止「虚拟机 C1」；\n1. 设置「虚拟机 C1」的内存为 16GB；\n1. 启动「虚拟机 C1」；\n1. 在虚拟机输入命令 `docker ps`，以启动负载均衡的组件；\n1. 启动 「GitLab 容器」；\n\n> 后记：\n> ~~~然后发现分配 16GB 太大了。~~~\n> ~~~虚拟机在使用了内存后，是不会还给宿主机的。~~~\n> ~~~因此导致宿主机服务器内存占用率一直在 98% 。~~~\n> ~~~可能因为虚拟机使用的是 VMware （不知道其他虚拟机是不是也这样）。~~~\n> ~~~所以最后调整「虚拟机 C1」分配为 12GB 内存；~~~\n> 要注意的是，虚拟机内为 Linux 系统，其内存使用与 Windows 不一样。 所以宿主机的表现就是虚拟机的内存一直被抓着不会释放。目前不清出这样会导致什么后果。\n\n---\n","source":"_posts/服务器-离线虚拟机增加内存.md","raw":"---\ntitle: 服务器的虚拟机增加内存\ndate: 2017-09-11\ntags: \n- VMware\n- server\n- memory\n- douker\n- note\ncategories: Server\n---\n\n> 关于在服务器增加虚拟机内存的方法\n\n<!-- more -->\n\n# 背景\n\n大家在 project-a 上的分支没办法 `clone` 与 `pull`。\n原因是：服务器上分配给 git 可用内存不够。导致服务器在打包 git 仓库的过程中失败了。\n\n# 目的\n\n因此决定，增加 Git 所在容器的虚拟机的内存。目前分配了 4G，现打算增加到 16GB。\n\n# 过程\n\n给虚拟机增加内存的过程非常简单。\n> 其中 GitLab 为正在使用的 GitLab 托管平台 , 「虚拟机 C1」 为部署有Docker负债均衡的虚拟机\n1. 停止 「GitLab 容器」；\n1. 停止「虚拟机 C1」；\n1. 设置「虚拟机 C1」的内存为 16GB；\n1. 启动「虚拟机 C1」；\n1. 在虚拟机输入命令 `docker ps`，以启动负载均衡的组件；\n1. 启动 「GitLab 容器」；\n\n> 后记：\n> ~~~然后发现分配 16GB 太大了。~~~\n> ~~~虚拟机在使用了内存后，是不会还给宿主机的。~~~\n> ~~~因此导致宿主机服务器内存占用率一直在 98% 。~~~\n> ~~~可能因为虚拟机使用的是 VMware （不知道其他虚拟机是不是也这样）。~~~\n> ~~~所以最后调整「虚拟机 C1」分配为 12GB 内存；~~~\n> 要注意的是，虚拟机内为 Linux 系统，其内存使用与 Windows 不一样。 所以宿主机的表现就是虚拟机的内存一直被抓着不会释放。目前不清出这样会导致什么后果。\n\n---\n","slug":"服务器-离线虚拟机增加内存","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzap000ul1skl05m3spb","content":"<blockquote>\n<p>关于在服务器增加虚拟机内存的方法</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>大家在 project-a 上的分支没办法 <code>clone</code> 与 <code>pull</code>。<br>原因是：服务器上分配给 git 可用内存不够。导致服务器在打包 git 仓库的过程中失败了。</p>\n<h1 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h1><p>因此决定，增加 Git 所在容器的虚拟机的内存。目前分配了 4G，现打算增加到 16GB。</p>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><p>给虚拟机增加内存的过程非常简单。</p>\n<blockquote>\n<p>其中 GitLab 为正在使用的 GitLab 托管平台 , 「虚拟机 C1」 为部署有Docker负债均衡的虚拟机</p>\n<ol>\n<li>停止 「GitLab 容器」；</li>\n<li>停止「虚拟机 C1」；</li>\n<li>设置「虚拟机 C1」的内存为 16GB；</li>\n<li>启动「虚拟机 C1」；</li>\n<li>在虚拟机输入命令 <code>docker ps</code>，以启动负载均衡的组件；</li>\n<li>启动 「GitLab 容器」；</li>\n</ol>\n<p>后记：<br><figure class=\"highlight plain\"><figcaption><span>16GB 太大了。~~~</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; ~~~虚拟机在使用了内存后，是不会还给宿主机的。</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><figcaption><span>98% 。~~~</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; ~~~可能因为虚拟机使用的是 VMware （不知道其他虚拟机是不是也这样）。</div></pre></td></tr></table></figure>\n<p><del>~所以最后调整「虚拟机 C1」分配为 12GB 内存；</del>~<br>要注意的是，虚拟机内为 Linux 系统，其内存使用与 Windows 不一样。 所以宿主机的表现就是虚拟机的内存一直被抓着不会释放。目前不清出这样会导致什么后果。</p>\n</blockquote>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于在服务器增加虚拟机内存的方法</p>\n</blockquote>","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>大家在 project-a 上的分支没办法 <code>clone</code> 与 <code>pull</code>。<br>原因是：服务器上分配给 git 可用内存不够。导致服务器在打包 git 仓库的过程中失败了。</p>\n<h1 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h1><p>因此决定，增加 Git 所在容器的虚拟机的内存。目前分配了 4G，现打算增加到 16GB。</p>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><p>给虚拟机增加内存的过程非常简单。</p>\n<blockquote>\n<p>其中 GitLab 为正在使用的 GitLab 托管平台 , 「虚拟机 C1」 为部署有Docker负债均衡的虚拟机</p>\n<ol>\n<li>停止 「GitLab 容器」；</li>\n<li>停止「虚拟机 C1」；</li>\n<li>设置「虚拟机 C1」的内存为 16GB；</li>\n<li>启动「虚拟机 C1」；</li>\n<li>在虚拟机输入命令 <code>docker ps</code>，以启动负载均衡的组件；</li>\n<li>启动 「GitLab 容器」；</li>\n</ol>\n<p>后记：<br><figure class=\"highlight plain\"><figcaption><span>16GB 太大了。~~~</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; ~~~虚拟机在使用了内存后，是不会还给宿主机的。</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><figcaption><span>98% 。~~~</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; ~~~可能因为虚拟机使用的是 VMware （不知道其他虚拟机是不是也这样）。</div></pre></td></tr></table></figure>\n<p><del>~所以最后调整「虚拟机 C1」分配为 12GB 内存；</del>~<br>要注意的是，虚拟机内为 Linux 系统，其内存使用与 Windows 不一样。 所以宿主机的表现就是虚拟机的内存一直被抓着不会释放。目前不清出这样会导致什么后果。</p>\n</blockquote>\n<hr>"},{"title":"服务器内网部署 Jenkins","date":"2017-09-10T16:00:00.000Z","_content":"\n> 关于在离线服务器部署 Jenkins 的笔记\n\n<!-- more -->\n\n# 一、将外网的 Jenkins 镜像拉入内网；\n\n## 部署 Jenkins 到 Docker；\n\n1. 容器初始化\n\n```shell\nsudo docker run --name jenkins -d \\\n-p 10091:8080 -p 50000:50000 \\\n-v /opt/mydisk/jenkins:/var/jenkins_home/ \\\n-u root \\\njenkins:latest\n```\n\n## 上传 Git 相关插件；\n\n1. 在 Jenkins 官网的插件模块下载插件。\n> Git 插件需要依赖许多插件\n\n## 拉取 my-data 仓库；\n\n1. 在 Jenkins 内进行设置；\n> 例如：\n> `Repository URL : http://**************/****/Data.git`\n\n## 打包压缩某个目录\n\n1. 使用 linux 的 shell 命令；\n> To do something\n\n---\n","source":"_posts/服务器-离线部署-Jenkins.md","raw":"---\ntitle: 服务器内网部署 Jenkins\ndate: 2017-09-11\ntags: \n- jenkins\n- offline\n- docker\n- note\ncategories: Server\n---\n\n> 关于在离线服务器部署 Jenkins 的笔记\n\n<!-- more -->\n\n# 一、将外网的 Jenkins 镜像拉入内网；\n\n## 部署 Jenkins 到 Docker；\n\n1. 容器初始化\n\n```shell\nsudo docker run --name jenkins -d \\\n-p 10091:8080 -p 50000:50000 \\\n-v /opt/mydisk/jenkins:/var/jenkins_home/ \\\n-u root \\\njenkins:latest\n```\n\n## 上传 Git 相关插件；\n\n1. 在 Jenkins 官网的插件模块下载插件。\n> Git 插件需要依赖许多插件\n\n## 拉取 my-data 仓库；\n\n1. 在 Jenkins 内进行设置；\n> 例如：\n> `Repository URL : http://**************/****/Data.git`\n\n## 打包压缩某个目录\n\n1. 使用 linux 的 shell 命令；\n> To do something\n\n---\n","slug":"服务器-离线部署-Jenkins","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzar000zl1sk4zyhbhxh","content":"<blockquote>\n<p>关于在离线服务器部署 Jenkins 的笔记</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"一、将外网的-Jenkins-镜像拉入内网；\"><a href=\"#一、将外网的-Jenkins-镜像拉入内网；\" class=\"headerlink\" title=\"一、将外网的 Jenkins 镜像拉入内网；\"></a>一、将外网的 Jenkins 镜像拉入内网；</h1><h2 id=\"部署-Jenkins-到-Docker；\"><a href=\"#部署-Jenkins-到-Docker；\" class=\"headerlink\" title=\"部署 Jenkins 到 Docker；\"></a>部署 Jenkins 到 Docker；</h2><ol>\n<li>容器初始化</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run --name jenkins -d \\</div><div class=\"line\">-p 10091:8080 -p 50000:50000 \\</div><div class=\"line\">-v /opt/mydisk/jenkins:/var/jenkins_home/ \\</div><div class=\"line\">-u root \\</div><div class=\"line\">jenkins:latest</div></pre></td></tr></table></figure>\n<h2 id=\"上传-Git-相关插件；\"><a href=\"#上传-Git-相关插件；\" class=\"headerlink\" title=\"上传 Git 相关插件；\"></a>上传 Git 相关插件；</h2><ol>\n<li>在 Jenkins 官网的插件模块下载插件。<blockquote>\n<p>Git 插件需要依赖许多插件</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"拉取-my-data-仓库；\"><a href=\"#拉取-my-data-仓库；\" class=\"headerlink\" title=\"拉取 my-data 仓库；\"></a>拉取 my-data 仓库；</h2><ol>\n<li>在 Jenkins 内进行设置；<blockquote>\n<p>例如：<br><code>Repository URL : http://**************/****/Data.git</code></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"打包压缩某个目录\"><a href=\"#打包压缩某个目录\" class=\"headerlink\" title=\"打包压缩某个目录\"></a>打包压缩某个目录</h2><ol>\n<li>使用 linux 的 shell 命令；<blockquote>\n<p>To do something</p>\n</blockquote>\n</li>\n</ol>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于在离线服务器部署 Jenkins 的笔记</p>\n</blockquote>","more":"<h1 id=\"一、将外网的-Jenkins-镜像拉入内网；\"><a href=\"#一、将外网的-Jenkins-镜像拉入内网；\" class=\"headerlink\" title=\"一、将外网的 Jenkins 镜像拉入内网；\"></a>一、将外网的 Jenkins 镜像拉入内网；</h1><h2 id=\"部署-Jenkins-到-Docker；\"><a href=\"#部署-Jenkins-到-Docker；\" class=\"headerlink\" title=\"部署 Jenkins 到 Docker；\"></a>部署 Jenkins 到 Docker；</h2><ol>\n<li>容器初始化</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo docker run --name jenkins -d \\</div><div class=\"line\">-p 10091:8080 -p 50000:50000 \\</div><div class=\"line\">-v /opt/mydisk/jenkins:/var/jenkins_home/ \\</div><div class=\"line\">-u root \\</div><div class=\"line\">jenkins:latest</div></pre></td></tr></table></figure>\n<h2 id=\"上传-Git-相关插件；\"><a href=\"#上传-Git-相关插件；\" class=\"headerlink\" title=\"上传 Git 相关插件；\"></a>上传 Git 相关插件；</h2><ol>\n<li>在 Jenkins 官网的插件模块下载插件。<blockquote>\n<p>Git 插件需要依赖许多插件</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"拉取-my-data-仓库；\"><a href=\"#拉取-my-data-仓库；\" class=\"headerlink\" title=\"拉取 my-data 仓库；\"></a>拉取 my-data 仓库；</h2><ol>\n<li>在 Jenkins 内进行设置；<blockquote>\n<p>例如：<br><code>Repository URL : http://**************/****/Data.git</code></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"打包压缩某个目录\"><a href=\"#打包压缩某个目录\" class=\"headerlink\" title=\"打包压缩某个目录\"></a>打包压缩某个目录</h2><ol>\n<li>使用 linux 的 shell 命令；<blockquote>\n<p>To do something</p>\n</blockquote>\n</li>\n</ol>\n<hr>"},{"title":"服务器资料备份流程","date":"2017-09-27T16:00:00.000Z","_content":"\n> 关于工作服务器备份的笔记与操作\n\n<!-- more -->\n\n# 背景\n\n- 遇到大节日、长假期（如国庆、春节）。公司有可能会对电网进行维护和检查，因此可能会遭到服务器停电的情况。\n- 为了避免数据与资料丢失，因此需要及时备份。\n- 目前有三个模块需要备份，Git仓库、Gogs平台与禅道平台。\n\n# 操作\n\n## 邮件通知\n\n- 要通过邮件、微信等方式通知所有人。告知具体断电的时间，地点。让大家做好本地备份，服务器同步等操作。\n- 通知例子：\n\n>各位领导、同事 ：\n>\n> - 由于在国庆期间******，所以我们的服务器将进行关机处理，假期结束后恢复使用。\n> - 因此在国庆假期间，平时使用的禅道平台、Gogs平台、服务器的Git仓库将暂停使用。\n> - 请大家在本周五中午前做好本地代码的上传，我们将在本周五下午进行数据的备份以及关闭服务。\n\n## Git 仓库\n\n在服务器通过 `git bash` 克隆所有仓库的镜像。然后保存到本地硬盘中。\n\n## Gogs 平台\n\n这里应该是备份数据库，以及后台的资源的文件\n\n- 通过 SSH 登录 服务器\n- 压缩打包 CORS1 内 /opt/mydisk/gogs 文件夹。\n    sudo tar -cjPf /opt/mydisk/backup/gogs-`date '+%Y%m%d'`.tar.bz2 /opt/mydisk/gogs/\n    sudo tar -cjPf /opt/mydisk/backup/gogs-gogs-`date '+%Y%m%d'`.tar.bz2 /opt/mydisk/gogs/gogs/\n    sudo tar -cjPf /opt/mydisk/backup/gogs-ssh-`date '+%Y%m%d'`.tar.bz2 /opt/mydisk/gogs/ssh/\n- 备份数据库\n\n暂时先用「Navicat Lite」,直接转储为 SQL 文件，以作备份。\n\n## 禅道平台\n\n这个一样是备份数据库，以及后台的资源文件；\n\n- 通过 SSH 登录 COREOS2\n    sudo tar -cjPf /opt/backup/zentao-`date '+%Y%m%d'`.tar.bz2 /opt/zbox/zbox/app/zentao/tmp/backup\n- 备份数据库\n\n暂时先用「Navicat Lite」,直接转储为 SQL 文件，以作备份。\n\n## 备份到本地\n\n- 以上平台数据皆备份在虚拟机中，需要下载到宿主机以做备份。\n- 暂时通过手动拉取的方式备份。\n\n## 通过另外一台虚拟机共享磁盘备份\n\n登录备份专用服务器\n\n- 从服务器上下载文件\n    scp -P 1024 core@172.24.173.143:/home/core/sloccount-2.26.tar.gz /home/xh/\n    scp -P 1024 core@172.24.173.143:/home/core/sloccount-2.26.tar.gz /home/zhouwei/\n\n## 挂起虚拟机\n\n---\n","source":"_posts/服务器-资料备份.md","raw":"---\ntitle: 服务器资料备份流程\ndate: 2017-09-28\ntags: \n- server\n- back-up\n- note\ncategories: Server\n---\n\n> 关于工作服务器备份的笔记与操作\n\n<!-- more -->\n\n# 背景\n\n- 遇到大节日、长假期（如国庆、春节）。公司有可能会对电网进行维护和检查，因此可能会遭到服务器停电的情况。\n- 为了避免数据与资料丢失，因此需要及时备份。\n- 目前有三个模块需要备份，Git仓库、Gogs平台与禅道平台。\n\n# 操作\n\n## 邮件通知\n\n- 要通过邮件、微信等方式通知所有人。告知具体断电的时间，地点。让大家做好本地备份，服务器同步等操作。\n- 通知例子：\n\n>各位领导、同事 ：\n>\n> - 由于在国庆期间******，所以我们的服务器将进行关机处理，假期结束后恢复使用。\n> - 因此在国庆假期间，平时使用的禅道平台、Gogs平台、服务器的Git仓库将暂停使用。\n> - 请大家在本周五中午前做好本地代码的上传，我们将在本周五下午进行数据的备份以及关闭服务。\n\n## Git 仓库\n\n在服务器通过 `git bash` 克隆所有仓库的镜像。然后保存到本地硬盘中。\n\n## Gogs 平台\n\n这里应该是备份数据库，以及后台的资源的文件\n\n- 通过 SSH 登录 服务器\n- 压缩打包 CORS1 内 /opt/mydisk/gogs 文件夹。\n    sudo tar -cjPf /opt/mydisk/backup/gogs-`date '+%Y%m%d'`.tar.bz2 /opt/mydisk/gogs/\n    sudo tar -cjPf /opt/mydisk/backup/gogs-gogs-`date '+%Y%m%d'`.tar.bz2 /opt/mydisk/gogs/gogs/\n    sudo tar -cjPf /opt/mydisk/backup/gogs-ssh-`date '+%Y%m%d'`.tar.bz2 /opt/mydisk/gogs/ssh/\n- 备份数据库\n\n暂时先用「Navicat Lite」,直接转储为 SQL 文件，以作备份。\n\n## 禅道平台\n\n这个一样是备份数据库，以及后台的资源文件；\n\n- 通过 SSH 登录 COREOS2\n    sudo tar -cjPf /opt/backup/zentao-`date '+%Y%m%d'`.tar.bz2 /opt/zbox/zbox/app/zentao/tmp/backup\n- 备份数据库\n\n暂时先用「Navicat Lite」,直接转储为 SQL 文件，以作备份。\n\n## 备份到本地\n\n- 以上平台数据皆备份在虚拟机中，需要下载到宿主机以做备份。\n- 暂时通过手动拉取的方式备份。\n\n## 通过另外一台虚拟机共享磁盘备份\n\n登录备份专用服务器\n\n- 从服务器上下载文件\n    scp -P 1024 core@172.24.173.143:/home/core/sloccount-2.26.tar.gz /home/xh/\n    scp -P 1024 core@172.24.173.143:/home/core/sloccount-2.26.tar.gz /home/zhouwei/\n\n## 挂起虚拟机\n\n---\n","slug":"服务器-资料备份","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzat0011l1skwrzzija0","content":"<blockquote>\n<p>关于工作服务器备份的笔记与操作</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><ul>\n<li>遇到大节日、长假期（如国庆、春节）。公司有可能会对电网进行维护和检查，因此可能会遭到服务器停电的情况。</li>\n<li>为了避免数据与资料丢失，因此需要及时备份。</li>\n<li>目前有三个模块需要备份，Git仓库、Gogs平台与禅道平台。</li>\n</ul>\n<h1 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h1><h2 id=\"邮件通知\"><a href=\"#邮件通知\" class=\"headerlink\" title=\"邮件通知\"></a>邮件通知</h2><ul>\n<li>要通过邮件、微信等方式通知所有人。告知具体断电的时间，地点。让大家做好本地备份，服务器同步等操作。</li>\n<li>通知例子：</li>\n</ul>\n<blockquote>\n<p>各位领导、同事 ：</p>\n<ul>\n<li>由于在国庆期间<strong>**</strong>，所以我们的服务器将进行关机处理，假期结束后恢复使用。</li>\n<li>因此在国庆假期间，平时使用的禅道平台、Gogs平台、服务器的Git仓库将暂停使用。</li>\n<li>请大家在本周五中午前做好本地代码的上传，我们将在本周五下午进行数据的备份以及关闭服务。</li>\n</ul>\n</blockquote>\n<h2 id=\"Git-仓库\"><a href=\"#Git-仓库\" class=\"headerlink\" title=\"Git 仓库\"></a>Git 仓库</h2><p>在服务器通过 <code>git bash</code> 克隆所有仓库的镜像。然后保存到本地硬盘中。</p>\n<h2 id=\"Gogs-平台\"><a href=\"#Gogs-平台\" class=\"headerlink\" title=\"Gogs 平台\"></a>Gogs 平台</h2><p>这里应该是备份数据库，以及后台的资源的文件</p>\n<ul>\n<li>通过 SSH 登录 服务器</li>\n<li>压缩打包 CORS1 内 /opt/mydisk/gogs 文件夹。<br>  sudo tar -cjPf /opt/mydisk/backup/gogs-<code>date &#39;+%Y%m%d&#39;</code>.tar.bz2 /opt/mydisk/gogs/<br>  sudo tar -cjPf /opt/mydisk/backup/gogs-gogs-<code>date &#39;+%Y%m%d&#39;</code>.tar.bz2 /opt/mydisk/gogs/gogs/<br>  sudo tar -cjPf /opt/mydisk/backup/gogs-ssh-<code>date &#39;+%Y%m%d&#39;</code>.tar.bz2 /opt/mydisk/gogs/ssh/</li>\n<li>备份数据库</li>\n</ul>\n<p>暂时先用「Navicat Lite」,直接转储为 SQL 文件，以作备份。</p>\n<h2 id=\"禅道平台\"><a href=\"#禅道平台\" class=\"headerlink\" title=\"禅道平台\"></a>禅道平台</h2><p>这个一样是备份数据库，以及后台的资源文件；</p>\n<ul>\n<li>通过 SSH 登录 COREOS2<br>  sudo tar -cjPf /opt/backup/zentao-<code>date &#39;+%Y%m%d&#39;</code>.tar.bz2 /opt/zbox/zbox/app/zentao/tmp/backup</li>\n<li>备份数据库</li>\n</ul>\n<p>暂时先用「Navicat Lite」,直接转储为 SQL 文件，以作备份。</p>\n<h2 id=\"备份到本地\"><a href=\"#备份到本地\" class=\"headerlink\" title=\"备份到本地\"></a>备份到本地</h2><ul>\n<li>以上平台数据皆备份在虚拟机中，需要下载到宿主机以做备份。</li>\n<li>暂时通过手动拉取的方式备份。</li>\n</ul>\n<h2 id=\"通过另外一台虚拟机共享磁盘备份\"><a href=\"#通过另外一台虚拟机共享磁盘备份\" class=\"headerlink\" title=\"通过另外一台虚拟机共享磁盘备份\"></a>通过另外一台虚拟机共享磁盘备份</h2><p>登录备份专用服务器</p>\n<ul>\n<li>从服务器上下载文件<br>  scp -P 1024 core@172.24.173.143:/home/core/sloccount-2.26.tar.gz /home/xh/<br>  scp -P 1024 core@172.24.173.143:/home/core/sloccount-2.26.tar.gz /home/zhouwei/</li>\n</ul>\n<h2 id=\"挂起虚拟机\"><a href=\"#挂起虚拟机\" class=\"headerlink\" title=\"挂起虚拟机\"></a>挂起虚拟机</h2><hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于工作服务器备份的笔记与操作</p>\n</blockquote>","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><ul>\n<li>遇到大节日、长假期（如国庆、春节）。公司有可能会对电网进行维护和检查，因此可能会遭到服务器停电的情况。</li>\n<li>为了避免数据与资料丢失，因此需要及时备份。</li>\n<li>目前有三个模块需要备份，Git仓库、Gogs平台与禅道平台。</li>\n</ul>\n<h1 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h1><h2 id=\"邮件通知\"><a href=\"#邮件通知\" class=\"headerlink\" title=\"邮件通知\"></a>邮件通知</h2><ul>\n<li>要通过邮件、微信等方式通知所有人。告知具体断电的时间，地点。让大家做好本地备份，服务器同步等操作。</li>\n<li>通知例子：</li>\n</ul>\n<blockquote>\n<p>各位领导、同事 ：</p>\n<ul>\n<li>由于在国庆期间<strong>**</strong>，所以我们的服务器将进行关机处理，假期结束后恢复使用。</li>\n<li>因此在国庆假期间，平时使用的禅道平台、Gogs平台、服务器的Git仓库将暂停使用。</li>\n<li>请大家在本周五中午前做好本地代码的上传，我们将在本周五下午进行数据的备份以及关闭服务。</li>\n</ul>\n</blockquote>\n<h2 id=\"Git-仓库\"><a href=\"#Git-仓库\" class=\"headerlink\" title=\"Git 仓库\"></a>Git 仓库</h2><p>在服务器通过 <code>git bash</code> 克隆所有仓库的镜像。然后保存到本地硬盘中。</p>\n<h2 id=\"Gogs-平台\"><a href=\"#Gogs-平台\" class=\"headerlink\" title=\"Gogs 平台\"></a>Gogs 平台</h2><p>这里应该是备份数据库，以及后台的资源的文件</p>\n<ul>\n<li>通过 SSH 登录 服务器</li>\n<li>压缩打包 CORS1 内 /opt/mydisk/gogs 文件夹。<br>  sudo tar -cjPf /opt/mydisk/backup/gogs-<code>date &#39;+%Y%m%d&#39;</code>.tar.bz2 /opt/mydisk/gogs/<br>  sudo tar -cjPf /opt/mydisk/backup/gogs-gogs-<code>date &#39;+%Y%m%d&#39;</code>.tar.bz2 /opt/mydisk/gogs/gogs/<br>  sudo tar -cjPf /opt/mydisk/backup/gogs-ssh-<code>date &#39;+%Y%m%d&#39;</code>.tar.bz2 /opt/mydisk/gogs/ssh/</li>\n<li>备份数据库</li>\n</ul>\n<p>暂时先用「Navicat Lite」,直接转储为 SQL 文件，以作备份。</p>\n<h2 id=\"禅道平台\"><a href=\"#禅道平台\" class=\"headerlink\" title=\"禅道平台\"></a>禅道平台</h2><p>这个一样是备份数据库，以及后台的资源文件；</p>\n<ul>\n<li>通过 SSH 登录 COREOS2<br>  sudo tar -cjPf /opt/backup/zentao-<code>date &#39;+%Y%m%d&#39;</code>.tar.bz2 /opt/zbox/zbox/app/zentao/tmp/backup</li>\n<li>备份数据库</li>\n</ul>\n<p>暂时先用「Navicat Lite」,直接转储为 SQL 文件，以作备份。</p>\n<h2 id=\"备份到本地\"><a href=\"#备份到本地\" class=\"headerlink\" title=\"备份到本地\"></a>备份到本地</h2><ul>\n<li>以上平台数据皆备份在虚拟机中，需要下载到宿主机以做备份。</li>\n<li>暂时通过手动拉取的方式备份。</li>\n</ul>\n<h2 id=\"通过另外一台虚拟机共享磁盘备份\"><a href=\"#通过另外一台虚拟机共享磁盘备份\" class=\"headerlink\" title=\"通过另外一台虚拟机共享磁盘备份\"></a>通过另外一台虚拟机共享磁盘备份</h2><p>登录备份专用服务器</p>\n<ul>\n<li>从服务器上下载文件<br>  scp -P 1024 core@172.24.173.143:/home/core/sloccount-2.26.tar.gz /home/xh/<br>  scp -P 1024 core@172.24.173.143:/home/core/sloccount-2.26.tar.gz /home/zhouwei/</li>\n</ul>\n<h2 id=\"挂起虚拟机\"><a href=\"#挂起虚拟机\" class=\"headerlink\" title=\"挂起虚拟机\"></a>挂起虚拟机</h2><hr>"},{"title":"Git 仓库独立运动 - 实验笔记","date":"2017-09-10T16:00:00.000Z","_content":"\n> 关于 Git 仓库独立的笔记\n\n<!-- more -->\n\n# 背景\n\n在开发的过程中，因考虑到：\n\n> 1. 项目「文档类文件」与项目「代码类文件」应该分开管理；\n> 1. 项目管理人员与测试人员等角色无需接触「代码类文件」。\n\n因此采取将「代码类文件」从原仓库中剥离出来作为独立仓库的措施；\n\n目前，我已经尝试过将「project-a」内的「src」目录，通过 `git submodule` 的方式分离出一个单独的仓库作为子模块。\n\n# 问题\n\n1. 在「src」内有「子模块A - model-a」，在实际开发过程中，项目工程代码经常因为不同的需求而进行不同分支上切换，直接导致在每次使用「子模块A」的时候就需要多次切换分支与重新编译，存在操作不便与严重拉低开发效率。因此需要将此目录「model-a」从「src」中独立出来。\n\n1. 原方法 「`git submodule`」 由于以下原因，故而改之尝试使用 「`git subtree`」\n> 1. 根据官方文档，`git submodule` 在日常使用过程中，每次提交后都需要在上一级模块中使用 `git submodule update` 等命令，目前我们团队中还没有使用过，存在操作不当的风险；\n> 1. `git subtree` 是 Git 官方推荐用来代替 `git submodule` 的新方式，官方宣称能更方便更合理的管理子模块；\n\n# 目的\n\n1. 将「model-a」从 「src」仓库中独立；\n1. 使用 「git subtree」 的方式，理解与「git submodule」的差别；\n1. 决定在「model-a」使用哪种方式;\n\n# 过程\n\n## 一、subtree -> 在自己的 git 仓库上模拟试验\n\n> - 措施： 使用 「subtree」\n> - 结果： 试验未完全成功、暂不采用\n> - 原因：「`subtree`」模式下，子模块的改动，在上级仓库能侦测到，并且能提交。使用方式与原「`submodule`」存在差异，在现在开发紧张的阶段，考虑到学习与适应成本，暂不采用。\n\n### 1. 分离：\n\n目的：将 「test 目录」分离出来；（因为这个目录带有log）\n\n1. 把所有 `test` 目录下的相关提交整理为一个新的分支 「test-split」;（ps:此命令执行速度不快）\n        $ git subtree split -P test -b test-split\n1. 另建一个新目录并初始化为 test 仓库 \n        $ mkdir ../test\n        $ cd ../test\n        $ git init\n1. 拉取旧仓库的 test-split 分支到当前的 master 分支；\n        $ git pull ../test-mama test-split\n1. 将此子仓库关联到远端； (ps:这里缺少其他分支的关联，未继深入尝试)\n        $ git remote add origin ssh://git@****/****/****.git\n        $ git push -u origin master\n1. 回到原项目目录，清理 master 分支上所有跟 「test 目录」有关的痕迹；(ps:此命令执行速度不快)\n> 遭遇问题：执行之后，母仓库就脱离了组织，无法 pull 与 push\n\n        $ cd ../test-mama\n        $ git filter-branch --index-filter \"git rm -rf --cached --ignore-unmatch git\" --prune-empty master\n1. 另建一个新目录并初始化为 git 仓库；\n        $ mkdir ../test-mama-fresh\n        $ cd ../test-mama-fresh\n        $ git init\n1. 拉取 `test-mama` 的 `master` 分支；（到新仓库的 master 分支）\n        $ git pull ../test-mama master\n~~ 1. 改变远程仓库 -> 到这里无法 push 和 pull 「更改被拒绝」 ~~\n        ~~ $ git remote add origin git@****/****/****.git ~~\n        ~~ $ git push origin -u master ~~\n\n### 2. 关联：\n\n目的：将分离出去的仓库与原项目关联\n\n1. 将 git 的项目仓库下载到新仓库的指定目录下\n        $ git subtree add --prefix=git ssh://git@****/****/****.git master\n\n### 3. 更新\n\n目的：能进行推送代码与拉取代码的功能：\n\n1. 将子目录的更改提交到服务器上：\n        $ git subtree push --prefix=git ssh://git@****/****/****.git master\n1. 将子目录同步到服务器上最新的版本：\n        $ git subtree pull --prefix=git ssh://git@****/****/****.git master\n\n### 4. 问题\n\n1. 分离出来的母仓库脱离了组织。\n1. 分离出来的子仓库，像是复制出来的样子。\n1. 在子仓库做的改动，母仓库能有检索。 这与 `submodule` 有差异。\n\n## 二、submodule -> 在自己的 git 仓库上模拟试验\n\n> - 措施： 使用 「filter-branch + submodule」\n> - 结果： 试验成功，未采用 `submodule`\n> - 原因： `submodule` 已经使用过，然存有潜在的问题\n\n### 1. 剥离\n\n目的：将目标子仓库分离出来\n\n1. `clone` 出一个新的仓库到目录 test （这时候 test 的目录，与test-mama完全一样） \n        $ git clone test-mama test\n1. 刚克隆出来的 test 仓库本地只会有一个分支，如果需要其他分支，则创建；（本仓库没有分，故没进行这一步）\n        $ git branch br1 origin/br1  \n        $ git branch br2 origin/br2 \n1. 最后origin这个remote是不需要的，把它删除了\n        $ git remote rm origin\n\n### 2. 独立\n\n1. 将本仓库转化为 git 子模块！（这个最重要）\n> 该命令过滤所有历史提交，保留对 test 子目录有影响的提交，并且把子目录设为该仓库的根目录。\n> 该命令执行完毕后，查看当前目录结构就会发现里面已经是子目录的内容了。\n`$ git filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter git -- --all`\n\n1. 清理仓库\n\n```shell\n$ git reset --hard\n$ git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d\n$ git reflog expire --expire=now --all\n$ git gc --aggressive --prune=now\n$\n```\n\n1. 最后，我们就可以把这个新的仓库提交到服务器上，然后把旧仓库中的 git 子目录删除并以 `submodule` 的方式添加 test-mama 仓库就好了。\n\n### 3. 关联\n\n1. 将整理好的仓库同步到服务器新的仓库地址；\n> 未尝试\n\n1. 然后把旧仓库中的 git 子目录删除，并以 submodle 的方式添加即可。\n> 未尝试\n\n## 三、在 project-a 项目上实现\n\n> - 措施： 使用 「filter-branch + submodule」\n> - 结果： 试验完成，正在使用，等待一段时间后的反馈\n> - 原因： 因为 `subtree` 非完全独立仓库，也因为原来就是用着 `submodule` 存在潜在的问题，所以只采取了 `filter-branch` 分离措施；\n\n### 1.剥离\n\n目的：将目标子目录「model-a」分离出来\n\n1. `clone` 出一个新的仓库到目录 plan-tool\n        $ git clone ssh://git@****/****/project-a.src.git plan-tool\n\n2. 添加其他必要的分支\n        $ git branch park-data  origin/park-data \n        $ git branch publish/data origin/publish/data\n\n3. 最后origin这个remote是不需要的，把它删除了\n        $ git remote rm origin\n\n### 2.独立\n\n目的：将子目录独立出新的仓库\n\n1. 将本目录中的 「model-a」 转化为本仓库的根目录\n> 这个没有删除 tag\n`$ git filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter model-a -- --all`\n\n1. 整理仓库，清除无用信息\n> 下面的命令具体干了什么不知道，但是文件夹真的变小了。  本次操作中，4G -> 256M\n\n```shell\n$ git reset --hard\n$ git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d\n$ git reflog expire --expire=now --all\n$ git gc --aggressive --prune=now\n$\n```\n\n### 3.关联\n\n目的：a. 将本地仓库与服务器的新仓库关联； b. 将子仓库与母仓库关联；\n\n1. 将本地仓库，与服务器上新建的仓库关联起来\n\n`$ git remote add origin ssh://git@****/****/project-a.src.plat-tool.git`\n\n1. 推送仓库\n> 推送指定 `<branch>` 分支\n`$ git push -u origin <branch>`\n> 推送所有分支到远程仓库\n`$ git push --all`\n\n1. 与母仓库关联\n> 暂时不做关联，直接以目录的方式放在「src」目录下\n\n## 四、总结\n\n### submodule 与 subtree 对比\n\n> 在使用感觉上， `git submodule` 类似于引用仓库，而 `git subtree` 似徐于复制仓库。\n使用 `git submodule`\n\n1. 母仓库与子仓库各自的 `pull` 与 `push` 互不关联，母仓库只知道子仓库有改动，但具体的改动不能知道。\n\n使用 `git subtree`\n\n1. 子仓库做具体的修改，母仓库可知道。并且在母仓库可提交与记录子仓库的改动。\n2. 使用 `git subtree push` 可在母仓库的提交中遍历出与子仓库相关的改动，单独提交与记录到子仓库上。\n\n### filter-branch 使用\n\n> 此命令用于仓库分离，以后再详细研究；\n\n### Git仓库清理\n\n> 有命令可以让 Git 仓库瘦身，下次在 「project-a」上尝试\n> 用一下命令清理「project-a」仓库，从 25.8 GB -> 24.3 GB\n> 以下为操作指令，效果很不明显。 原因不明，日后再查\n\n```shell\n$ git gc --aggressive --prune=now\n对象计数中: 77604, 完成.\nDelta compression using up to 4 threads.\n压缩对象中: 100% (73701/73701), 完成.\n写入对象中: 100% (77604/77604), 完成.\nTotal 77604 (delta 35291), reused 40791 (delta 0)\n正在删除重复对象: 100% (256/256), 完成.\n检查连接中: 77604, 完成.\n```\n\n---\n","source":"_posts/Git-仓库独立运动.md","raw":"---\ntitle: Git 仓库独立运动 - 实验笔记\ndate: 2017-09-11 \ntags: \n- git\n- 仓库独立\n- note\ncategories: Git\n\n---\n\n> 关于 Git 仓库独立的笔记\n\n<!-- more -->\n\n# 背景\n\n在开发的过程中，因考虑到：\n\n> 1. 项目「文档类文件」与项目「代码类文件」应该分开管理；\n> 1. 项目管理人员与测试人员等角色无需接触「代码类文件」。\n\n因此采取将「代码类文件」从原仓库中剥离出来作为独立仓库的措施；\n\n目前，我已经尝试过将「project-a」内的「src」目录，通过 `git submodule` 的方式分离出一个单独的仓库作为子模块。\n\n# 问题\n\n1. 在「src」内有「子模块A - model-a」，在实际开发过程中，项目工程代码经常因为不同的需求而进行不同分支上切换，直接导致在每次使用「子模块A」的时候就需要多次切换分支与重新编译，存在操作不便与严重拉低开发效率。因此需要将此目录「model-a」从「src」中独立出来。\n\n1. 原方法 「`git submodule`」 由于以下原因，故而改之尝试使用 「`git subtree`」\n> 1. 根据官方文档，`git submodule` 在日常使用过程中，每次提交后都需要在上一级模块中使用 `git submodule update` 等命令，目前我们团队中还没有使用过，存在操作不当的风险；\n> 1. `git subtree` 是 Git 官方推荐用来代替 `git submodule` 的新方式，官方宣称能更方便更合理的管理子模块；\n\n# 目的\n\n1. 将「model-a」从 「src」仓库中独立；\n1. 使用 「git subtree」 的方式，理解与「git submodule」的差别；\n1. 决定在「model-a」使用哪种方式;\n\n# 过程\n\n## 一、subtree -> 在自己的 git 仓库上模拟试验\n\n> - 措施： 使用 「subtree」\n> - 结果： 试验未完全成功、暂不采用\n> - 原因：「`subtree`」模式下，子模块的改动，在上级仓库能侦测到，并且能提交。使用方式与原「`submodule`」存在差异，在现在开发紧张的阶段，考虑到学习与适应成本，暂不采用。\n\n### 1. 分离：\n\n目的：将 「test 目录」分离出来；（因为这个目录带有log）\n\n1. 把所有 `test` 目录下的相关提交整理为一个新的分支 「test-split」;（ps:此命令执行速度不快）\n        $ git subtree split -P test -b test-split\n1. 另建一个新目录并初始化为 test 仓库 \n        $ mkdir ../test\n        $ cd ../test\n        $ git init\n1. 拉取旧仓库的 test-split 分支到当前的 master 分支；\n        $ git pull ../test-mama test-split\n1. 将此子仓库关联到远端； (ps:这里缺少其他分支的关联，未继深入尝试)\n        $ git remote add origin ssh://git@****/****/****.git\n        $ git push -u origin master\n1. 回到原项目目录，清理 master 分支上所有跟 「test 目录」有关的痕迹；(ps:此命令执行速度不快)\n> 遭遇问题：执行之后，母仓库就脱离了组织，无法 pull 与 push\n\n        $ cd ../test-mama\n        $ git filter-branch --index-filter \"git rm -rf --cached --ignore-unmatch git\" --prune-empty master\n1. 另建一个新目录并初始化为 git 仓库；\n        $ mkdir ../test-mama-fresh\n        $ cd ../test-mama-fresh\n        $ git init\n1. 拉取 `test-mama` 的 `master` 分支；（到新仓库的 master 分支）\n        $ git pull ../test-mama master\n~~ 1. 改变远程仓库 -> 到这里无法 push 和 pull 「更改被拒绝」 ~~\n        ~~ $ git remote add origin git@****/****/****.git ~~\n        ~~ $ git push origin -u master ~~\n\n### 2. 关联：\n\n目的：将分离出去的仓库与原项目关联\n\n1. 将 git 的项目仓库下载到新仓库的指定目录下\n        $ git subtree add --prefix=git ssh://git@****/****/****.git master\n\n### 3. 更新\n\n目的：能进行推送代码与拉取代码的功能：\n\n1. 将子目录的更改提交到服务器上：\n        $ git subtree push --prefix=git ssh://git@****/****/****.git master\n1. 将子目录同步到服务器上最新的版本：\n        $ git subtree pull --prefix=git ssh://git@****/****/****.git master\n\n### 4. 问题\n\n1. 分离出来的母仓库脱离了组织。\n1. 分离出来的子仓库，像是复制出来的样子。\n1. 在子仓库做的改动，母仓库能有检索。 这与 `submodule` 有差异。\n\n## 二、submodule -> 在自己的 git 仓库上模拟试验\n\n> - 措施： 使用 「filter-branch + submodule」\n> - 结果： 试验成功，未采用 `submodule`\n> - 原因： `submodule` 已经使用过，然存有潜在的问题\n\n### 1. 剥离\n\n目的：将目标子仓库分离出来\n\n1. `clone` 出一个新的仓库到目录 test （这时候 test 的目录，与test-mama完全一样） \n        $ git clone test-mama test\n1. 刚克隆出来的 test 仓库本地只会有一个分支，如果需要其他分支，则创建；（本仓库没有分，故没进行这一步）\n        $ git branch br1 origin/br1  \n        $ git branch br2 origin/br2 \n1. 最后origin这个remote是不需要的，把它删除了\n        $ git remote rm origin\n\n### 2. 独立\n\n1. 将本仓库转化为 git 子模块！（这个最重要）\n> 该命令过滤所有历史提交，保留对 test 子目录有影响的提交，并且把子目录设为该仓库的根目录。\n> 该命令执行完毕后，查看当前目录结构就会发现里面已经是子目录的内容了。\n`$ git filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter git -- --all`\n\n1. 清理仓库\n\n```shell\n$ git reset --hard\n$ git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d\n$ git reflog expire --expire=now --all\n$ git gc --aggressive --prune=now\n$\n```\n\n1. 最后，我们就可以把这个新的仓库提交到服务器上，然后把旧仓库中的 git 子目录删除并以 `submodule` 的方式添加 test-mama 仓库就好了。\n\n### 3. 关联\n\n1. 将整理好的仓库同步到服务器新的仓库地址；\n> 未尝试\n\n1. 然后把旧仓库中的 git 子目录删除，并以 submodle 的方式添加即可。\n> 未尝试\n\n## 三、在 project-a 项目上实现\n\n> - 措施： 使用 「filter-branch + submodule」\n> - 结果： 试验完成，正在使用，等待一段时间后的反馈\n> - 原因： 因为 `subtree` 非完全独立仓库，也因为原来就是用着 `submodule` 存在潜在的问题，所以只采取了 `filter-branch` 分离措施；\n\n### 1.剥离\n\n目的：将目标子目录「model-a」分离出来\n\n1. `clone` 出一个新的仓库到目录 plan-tool\n        $ git clone ssh://git@****/****/project-a.src.git plan-tool\n\n2. 添加其他必要的分支\n        $ git branch park-data  origin/park-data \n        $ git branch publish/data origin/publish/data\n\n3. 最后origin这个remote是不需要的，把它删除了\n        $ git remote rm origin\n\n### 2.独立\n\n目的：将子目录独立出新的仓库\n\n1. 将本目录中的 「model-a」 转化为本仓库的根目录\n> 这个没有删除 tag\n`$ git filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter model-a -- --all`\n\n1. 整理仓库，清除无用信息\n> 下面的命令具体干了什么不知道，但是文件夹真的变小了。  本次操作中，4G -> 256M\n\n```shell\n$ git reset --hard\n$ git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d\n$ git reflog expire --expire=now --all\n$ git gc --aggressive --prune=now\n$\n```\n\n### 3.关联\n\n目的：a. 将本地仓库与服务器的新仓库关联； b. 将子仓库与母仓库关联；\n\n1. 将本地仓库，与服务器上新建的仓库关联起来\n\n`$ git remote add origin ssh://git@****/****/project-a.src.plat-tool.git`\n\n1. 推送仓库\n> 推送指定 `<branch>` 分支\n`$ git push -u origin <branch>`\n> 推送所有分支到远程仓库\n`$ git push --all`\n\n1. 与母仓库关联\n> 暂时不做关联，直接以目录的方式放在「src」目录下\n\n## 四、总结\n\n### submodule 与 subtree 对比\n\n> 在使用感觉上， `git submodule` 类似于引用仓库，而 `git subtree` 似徐于复制仓库。\n使用 `git submodule`\n\n1. 母仓库与子仓库各自的 `pull` 与 `push` 互不关联，母仓库只知道子仓库有改动，但具体的改动不能知道。\n\n使用 `git subtree`\n\n1. 子仓库做具体的修改，母仓库可知道。并且在母仓库可提交与记录子仓库的改动。\n2. 使用 `git subtree push` 可在母仓库的提交中遍历出与子仓库相关的改动，单独提交与记录到子仓库上。\n\n### filter-branch 使用\n\n> 此命令用于仓库分离，以后再详细研究；\n\n### Git仓库清理\n\n> 有命令可以让 Git 仓库瘦身，下次在 「project-a」上尝试\n> 用一下命令清理「project-a」仓库，从 25.8 GB -> 24.3 GB\n> 以下为操作指令，效果很不明显。 原因不明，日后再查\n\n```shell\n$ git gc --aggressive --prune=now\n对象计数中: 77604, 完成.\nDelta compression using up to 4 threads.\n压缩对象中: 100% (73701/73701), 完成.\n写入对象中: 100% (77604/77604), 完成.\nTotal 77604 (delta 35291), reused 40791 (delta 0)\n正在删除重复对象: 100% (256/256), 完成.\n检查连接中: 77604, 完成.\n```\n\n---\n","slug":"Git-仓库独立运动","published":1,"updated":"2018-09-18T07:29:13.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7enzls0043l1skejqi8omy","content":"<blockquote>\n<p>关于 Git 仓库独立的笔记</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>在开发的过程中，因考虑到：</p>\n<blockquote>\n<ol>\n<li>项目「文档类文件」与项目「代码类文件」应该分开管理；</li>\n<li>项目管理人员与测试人员等角色无需接触「代码类文件」。</li>\n</ol>\n</blockquote>\n<p>因此采取将「代码类文件」从原仓库中剥离出来作为独立仓库的措施；</p>\n<p>目前，我已经尝试过将「project-a」内的「src」目录，通过 <code>git submodule</code> 的方式分离出一个单独的仓库作为子模块。</p>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><ol>\n<li><p>在「src」内有「子模块A - model-a」，在实际开发过程中，项目工程代码经常因为不同的需求而进行不同分支上切换，直接导致在每次使用「子模块A」的时候就需要多次切换分支与重新编译，存在操作不便与严重拉低开发效率。因此需要将此目录「model-a」从「src」中独立出来。</p>\n</li>\n<li><p>原方法 「<code>git submodule</code>」 由于以下原因，故而改之尝试使用 「<code>git subtree</code>」</p>\n<blockquote>\n<ol>\n<li>根据官方文档，<code>git submodule</code> 在日常使用过程中，每次提交后都需要在上一级模块中使用 <code>git submodule update</code> 等命令，目前我们团队中还没有使用过，存在操作不当的风险；</li>\n<li><code>git subtree</code> 是 Git 官方推荐用来代替 <code>git submodule</code> 的新方式，官方宣称能更方便更合理的管理子模块；</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h1><ol>\n<li>将「model-a」从 「src」仓库中独立；</li>\n<li>使用 「git subtree」 的方式，理解与「git submodule」的差别；</li>\n<li>决定在「model-a」使用哪种方式;</li>\n</ol>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><h2 id=\"一、subtree-gt-在自己的-git-仓库上模拟试验\"><a href=\"#一、subtree-gt-在自己的-git-仓库上模拟试验\" class=\"headerlink\" title=\"一、subtree -&gt; 在自己的 git 仓库上模拟试验\"></a>一、subtree -&gt; 在自己的 git 仓库上模拟试验</h2><blockquote>\n<ul>\n<li>措施： 使用 「subtree」</li>\n<li>结果： 试验未完全成功、暂不采用</li>\n<li>原因：「<code>subtree</code>」模式下，子模块的改动，在上级仓库能侦测到，并且能提交。使用方式与原「<code>submodule</code>」存在差异，在现在开发紧张的阶段，考虑到学习与适应成本，暂不采用。</li>\n</ul>\n</blockquote>\n<h3 id=\"1-分离：\"><a href=\"#1-分离：\" class=\"headerlink\" title=\"1. 分离：\"></a>1. 分离：</h3><p>目的：将 「test 目录」分离出来；（因为这个目录带有log）</p>\n<ol>\n<li>把所有 <code>test</code> 目录下的相关提交整理为一个新的分支 「test-split」;（ps:此命令执行速度不快）<pre><code>$ git subtree split -P test -b test-split\n</code></pre></li>\n<li>另建一个新目录并初始化为 test 仓库 <pre><code>$ mkdir ../test\n$ cd ../test\n$ git init\n</code></pre></li>\n<li>拉取旧仓库的 test-split 分支到当前的 master 分支；<pre><code>$ git pull ../test-mama test-split\n</code></pre></li>\n<li>将此子仓库关联到远端； (ps:这里缺少其他分支的关联，未继深入尝试)<pre><code>$ git remote add origin ssh://git@****/****/****.git\n$ git push -u origin master\n</code></pre></li>\n<li><p>回到原项目目录，清理 master 分支上所有跟 「test 目录」有关的痕迹；(ps:此命令执行速度不快)</p>\n<blockquote>\n<p>遭遇问题：执行之后，母仓库就脱离了组织，无法 pull 与 push</p>\n</blockquote>\n<pre><code>$ cd ../test-mama\n$ git filter-branch --index-filter &quot;git rm -rf --cached --ignore-unmatch git&quot; --prune-empty master\n</code></pre></li>\n<li>另建一个新目录并初始化为 git 仓库；<pre><code>$ mkdir ../test-mama-fresh\n$ cd ../test-mama-fresh\n$ git init\n</code></pre></li>\n<li>拉取 <code>test-mama</code> 的 <code>master</code> 分支；（到新仓库的 master 分支）<pre><code>$ git pull ../test-mama master\n</code></pre>~~ 1. 改变远程仓库 -&gt; 到这里无法 push 和 pull 「更改被拒绝」 ~~<pre><code>~~ $ git remote add origin git@****/****/****.git ~~\n~~ $ git push origin -u master ~~\n</code></pre></li>\n</ol>\n<h3 id=\"2-关联：\"><a href=\"#2-关联：\" class=\"headerlink\" title=\"2. 关联：\"></a>2. 关联：</h3><p>目的：将分离出去的仓库与原项目关联</p>\n<ol>\n<li>将 git 的项目仓库下载到新仓库的指定目录下<pre><code>$ git subtree add --prefix=git ssh://git@****/****/****.git master\n</code></pre></li>\n</ol>\n<h3 id=\"3-更新\"><a href=\"#3-更新\" class=\"headerlink\" title=\"3. 更新\"></a>3. 更新</h3><p>目的：能进行推送代码与拉取代码的功能：</p>\n<ol>\n<li>将子目录的更改提交到服务器上：<pre><code>$ git subtree push --prefix=git ssh://git@****/****/****.git master\n</code></pre></li>\n<li>将子目录同步到服务器上最新的版本：<pre><code>$ git subtree pull --prefix=git ssh://git@****/****/****.git master\n</code></pre></li>\n</ol>\n<h3 id=\"4-问题\"><a href=\"#4-问题\" class=\"headerlink\" title=\"4. 问题\"></a>4. 问题</h3><ol>\n<li>分离出来的母仓库脱离了组织。</li>\n<li>分离出来的子仓库，像是复制出来的样子。</li>\n<li>在子仓库做的改动，母仓库能有检索。 这与 <code>submodule</code> 有差异。</li>\n</ol>\n<h2 id=\"二、submodule-gt-在自己的-git-仓库上模拟试验\"><a href=\"#二、submodule-gt-在自己的-git-仓库上模拟试验\" class=\"headerlink\" title=\"二、submodule -&gt; 在自己的 git 仓库上模拟试验\"></a>二、submodule -&gt; 在自己的 git 仓库上模拟试验</h2><blockquote>\n<ul>\n<li>措施： 使用 「filter-branch + submodule」</li>\n<li>结果： 试验成功，未采用 <code>submodule</code></li>\n<li>原因： <code>submodule</code> 已经使用过，然存有潜在的问题</li>\n</ul>\n</blockquote>\n<h3 id=\"1-剥离\"><a href=\"#1-剥离\" class=\"headerlink\" title=\"1. 剥离\"></a>1. 剥离</h3><p>目的：将目标子仓库分离出来</p>\n<ol>\n<li><code>clone</code> 出一个新的仓库到目录 test （这时候 test 的目录，与test-mama完全一样） <pre><code>$ git clone test-mama test\n</code></pre></li>\n<li>刚克隆出来的 test 仓库本地只会有一个分支，如果需要其他分支，则创建；（本仓库没有分，故没进行这一步）<pre><code>$ git branch br1 origin/br1  \n$ git branch br2 origin/br2 \n</code></pre></li>\n<li>最后origin这个remote是不需要的，把它删除了<pre><code>$ git remote rm origin\n</code></pre></li>\n</ol>\n<h3 id=\"2-独立\"><a href=\"#2-独立\" class=\"headerlink\" title=\"2. 独立\"></a>2. 独立</h3><ol>\n<li><p>将本仓库转化为 git 子模块！（这个最重要）</p>\n<blockquote>\n<p>该命令过滤所有历史提交，保留对 test 子目录有影响的提交，并且把子目录设为该仓库的根目录。<br>该命令执行完毕后，查看当前目录结构就会发现里面已经是子目录的内容了。<br><code>$ git filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter git -- --all</code></p>\n</blockquote>\n</li>\n<li><p>清理仓库</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git reset --hard</div><div class=\"line\"><span class=\"meta\">$</span> git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d</div><div class=\"line\"><span class=\"meta\">$</span> git reflog expire --expire=now --all</div><div class=\"line\"><span class=\"meta\">$</span> git gc --aggressive --prune=now</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<ol>\n<li>最后，我们就可以把这个新的仓库提交到服务器上，然后把旧仓库中的 git 子目录删除并以 <code>submodule</code> 的方式添加 test-mama 仓库就好了。</li>\n</ol>\n<h3 id=\"3-关联\"><a href=\"#3-关联\" class=\"headerlink\" title=\"3. 关联\"></a>3. 关联</h3><ol>\n<li><p>将整理好的仓库同步到服务器新的仓库地址；</p>\n<blockquote>\n<p>未尝试</p>\n</blockquote>\n</li>\n<li><p>然后把旧仓库中的 git 子目录删除，并以 submodle 的方式添加即可。</p>\n<blockquote>\n<p>未尝试</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"三、在-project-a-项目上实现\"><a href=\"#三、在-project-a-项目上实现\" class=\"headerlink\" title=\"三、在 project-a 项目上实现\"></a>三、在 project-a 项目上实现</h2><blockquote>\n<ul>\n<li>措施： 使用 「filter-branch + submodule」</li>\n<li>结果： 试验完成，正在使用，等待一段时间后的反馈</li>\n<li>原因： 因为 <code>subtree</code> 非完全独立仓库，也因为原来就是用着 <code>submodule</code> 存在潜在的问题，所以只采取了 <code>filter-branch</code> 分离措施；</li>\n</ul>\n</blockquote>\n<h3 id=\"1-剥离-1\"><a href=\"#1-剥离-1\" class=\"headerlink\" title=\"1.剥离\"></a>1.剥离</h3><p>目的：将目标子目录「model-a」分离出来</p>\n<ol>\n<li><p><code>clone</code> 出一个新的仓库到目录 plan-tool</p>\n<pre><code>$ git clone ssh://git@****/****/project-a.src.git plan-tool\n</code></pre></li>\n<li><p>添加其他必要的分支</p>\n<pre><code>$ git branch park-data  origin/park-data \n$ git branch publish/data origin/publish/data\n</code></pre></li>\n<li><p>最后origin这个remote是不需要的，把它删除了</p>\n<pre><code>$ git remote rm origin\n</code></pre></li>\n</ol>\n<h3 id=\"2-独立-1\"><a href=\"#2-独立-1\" class=\"headerlink\" title=\"2.独立\"></a>2.独立</h3><p>目的：将子目录独立出新的仓库</p>\n<ol>\n<li><p>将本目录中的 「model-a」 转化为本仓库的根目录</p>\n<blockquote>\n<p>这个没有删除 tag<br><code>$ git filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter model-a -- --all</code></p>\n</blockquote>\n</li>\n<li><p>整理仓库，清除无用信息</p>\n<blockquote>\n<p>下面的命令具体干了什么不知道，但是文件夹真的变小了。  本次操作中，4G -&gt; 256M</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git reset --hard</div><div class=\"line\"><span class=\"meta\">$</span> git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d</div><div class=\"line\"><span class=\"meta\">$</span> git reflog expire --expire=now --all</div><div class=\"line\"><span class=\"meta\">$</span> git gc --aggressive --prune=now</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-关联-1\"><a href=\"#3-关联-1\" class=\"headerlink\" title=\"3.关联\"></a>3.关联</h3><p>目的：a. 将本地仓库与服务器的新仓库关联； b. 将子仓库与母仓库关联；</p>\n<ol>\n<li>将本地仓库，与服务器上新建的仓库关联起来</li>\n</ol>\n<p><code>$ git remote add origin ssh://git@****/****/project-a.src.plat-tool.git</code></p>\n<ol>\n<li><p>推送仓库</p>\n<blockquote>\n<p>推送指定 <code>&lt;branch&gt;</code> 分支<br><code>$ git push -u origin &lt;branch&gt;</code><br>推送所有分支到远程仓库<br><code>$ git push --all</code></p>\n</blockquote>\n</li>\n<li><p>与母仓库关联</p>\n<blockquote>\n<p>暂时不做关联，直接以目录的方式放在「src」目录下</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h2><h3 id=\"submodule-与-subtree-对比\"><a href=\"#submodule-与-subtree-对比\" class=\"headerlink\" title=\"submodule 与 subtree 对比\"></a>submodule 与 subtree 对比</h3><blockquote>\n<p>在使用感觉上， <code>git submodule</code> 类似于引用仓库，而 <code>git subtree</code> 似徐于复制仓库。<br>使用 <code>git submodule</code></p>\n</blockquote>\n<ol>\n<li>母仓库与子仓库各自的 <code>pull</code> 与 <code>push</code> 互不关联，母仓库只知道子仓库有改动，但具体的改动不能知道。</li>\n</ol>\n<p>使用 <code>git subtree</code></p>\n<ol>\n<li>子仓库做具体的修改，母仓库可知道。并且在母仓库可提交与记录子仓库的改动。</li>\n<li>使用 <code>git subtree push</code> 可在母仓库的提交中遍历出与子仓库相关的改动，单独提交与记录到子仓库上。</li>\n</ol>\n<h3 id=\"filter-branch-使用\"><a href=\"#filter-branch-使用\" class=\"headerlink\" title=\"filter-branch 使用\"></a>filter-branch 使用</h3><blockquote>\n<p>此命令用于仓库分离，以后再详细研究；</p>\n</blockquote>\n<h3 id=\"Git仓库清理\"><a href=\"#Git仓库清理\" class=\"headerlink\" title=\"Git仓库清理\"></a>Git仓库清理</h3><blockquote>\n<p>有命令可以让 Git 仓库瘦身，下次在 「project-a」上尝试<br>用一下命令清理「project-a」仓库，从 25.8 GB -&gt; 24.3 GB<br>以下为操作指令，效果很不明显。 原因不明，日后再查</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git gc --aggressive --prune=now</div><div class=\"line\">对象计数中: 77604, 完成.</div><div class=\"line\">Delta compression using up to 4 threads.</div><div class=\"line\">压缩对象中: 100% (73701/73701), 完成.</div><div class=\"line\">写入对象中: 100% (77604/77604), 完成.</div><div class=\"line\">Total 77604 (delta 35291), reused 40791 (delta 0)</div><div class=\"line\">正在删除重复对象: 100% (256/256), 完成.</div><div class=\"line\">检查连接中: 77604, 完成.</div></pre></td></tr></table></figure>\n<hr>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>关于 Git 仓库独立的笔记</p>\n</blockquote>","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>在开发的过程中，因考虑到：</p>\n<blockquote>\n<ol>\n<li>项目「文档类文件」与项目「代码类文件」应该分开管理；</li>\n<li>项目管理人员与测试人员等角色无需接触「代码类文件」。</li>\n</ol>\n</blockquote>\n<p>因此采取将「代码类文件」从原仓库中剥离出来作为独立仓库的措施；</p>\n<p>目前，我已经尝试过将「project-a」内的「src」目录，通过 <code>git submodule</code> 的方式分离出一个单独的仓库作为子模块。</p>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><ol>\n<li><p>在「src」内有「子模块A - model-a」，在实际开发过程中，项目工程代码经常因为不同的需求而进行不同分支上切换，直接导致在每次使用「子模块A」的时候就需要多次切换分支与重新编译，存在操作不便与严重拉低开发效率。因此需要将此目录「model-a」从「src」中独立出来。</p>\n</li>\n<li><p>原方法 「<code>git submodule</code>」 由于以下原因，故而改之尝试使用 「<code>git subtree</code>」</p>\n<blockquote>\n<ol>\n<li>根据官方文档，<code>git submodule</code> 在日常使用过程中，每次提交后都需要在上一级模块中使用 <code>git submodule update</code> 等命令，目前我们团队中还没有使用过，存在操作不当的风险；</li>\n<li><code>git subtree</code> 是 Git 官方推荐用来代替 <code>git submodule</code> 的新方式，官方宣称能更方便更合理的管理子模块；</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h1><ol>\n<li>将「model-a」从 「src」仓库中独立；</li>\n<li>使用 「git subtree」 的方式，理解与「git submodule」的差别；</li>\n<li>决定在「model-a」使用哪种方式;</li>\n</ol>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><h2 id=\"一、subtree-gt-在自己的-git-仓库上模拟试验\"><a href=\"#一、subtree-gt-在自己的-git-仓库上模拟试验\" class=\"headerlink\" title=\"一、subtree -&gt; 在自己的 git 仓库上模拟试验\"></a>一、subtree -&gt; 在自己的 git 仓库上模拟试验</h2><blockquote>\n<ul>\n<li>措施： 使用 「subtree」</li>\n<li>结果： 试验未完全成功、暂不采用</li>\n<li>原因：「<code>subtree</code>」模式下，子模块的改动，在上级仓库能侦测到，并且能提交。使用方式与原「<code>submodule</code>」存在差异，在现在开发紧张的阶段，考虑到学习与适应成本，暂不采用。</li>\n</ul>\n</blockquote>\n<h3 id=\"1-分离：\"><a href=\"#1-分离：\" class=\"headerlink\" title=\"1. 分离：\"></a>1. 分离：</h3><p>目的：将 「test 目录」分离出来；（因为这个目录带有log）</p>\n<ol>\n<li>把所有 <code>test</code> 目录下的相关提交整理为一个新的分支 「test-split」;（ps:此命令执行速度不快）<pre><code>$ git subtree split -P test -b test-split\n</code></pre></li>\n<li>另建一个新目录并初始化为 test 仓库 <pre><code>$ mkdir ../test\n$ cd ../test\n$ git init\n</code></pre></li>\n<li>拉取旧仓库的 test-split 分支到当前的 master 分支；<pre><code>$ git pull ../test-mama test-split\n</code></pre></li>\n<li>将此子仓库关联到远端； (ps:这里缺少其他分支的关联，未继深入尝试)<pre><code>$ git remote add origin ssh://git@****/****/****.git\n$ git push -u origin master\n</code></pre></li>\n<li><p>回到原项目目录，清理 master 分支上所有跟 「test 目录」有关的痕迹；(ps:此命令执行速度不快)</p>\n<blockquote>\n<p>遭遇问题：执行之后，母仓库就脱离了组织，无法 pull 与 push</p>\n</blockquote>\n<pre><code>$ cd ../test-mama\n$ git filter-branch --index-filter &quot;git rm -rf --cached --ignore-unmatch git&quot; --prune-empty master\n</code></pre></li>\n<li>另建一个新目录并初始化为 git 仓库；<pre><code>$ mkdir ../test-mama-fresh\n$ cd ../test-mama-fresh\n$ git init\n</code></pre></li>\n<li>拉取 <code>test-mama</code> 的 <code>master</code> 分支；（到新仓库的 master 分支）<pre><code>$ git pull ../test-mama master\n</code></pre>~~ 1. 改变远程仓库 -&gt; 到这里无法 push 和 pull 「更改被拒绝」 ~~<pre><code>~~ $ git remote add origin git@****/****/****.git ~~\n~~ $ git push origin -u master ~~\n</code></pre></li>\n</ol>\n<h3 id=\"2-关联：\"><a href=\"#2-关联：\" class=\"headerlink\" title=\"2. 关联：\"></a>2. 关联：</h3><p>目的：将分离出去的仓库与原项目关联</p>\n<ol>\n<li>将 git 的项目仓库下载到新仓库的指定目录下<pre><code>$ git subtree add --prefix=git ssh://git@****/****/****.git master\n</code></pre></li>\n</ol>\n<h3 id=\"3-更新\"><a href=\"#3-更新\" class=\"headerlink\" title=\"3. 更新\"></a>3. 更新</h3><p>目的：能进行推送代码与拉取代码的功能：</p>\n<ol>\n<li>将子目录的更改提交到服务器上：<pre><code>$ git subtree push --prefix=git ssh://git@****/****/****.git master\n</code></pre></li>\n<li>将子目录同步到服务器上最新的版本：<pre><code>$ git subtree pull --prefix=git ssh://git@****/****/****.git master\n</code></pre></li>\n</ol>\n<h3 id=\"4-问题\"><a href=\"#4-问题\" class=\"headerlink\" title=\"4. 问题\"></a>4. 问题</h3><ol>\n<li>分离出来的母仓库脱离了组织。</li>\n<li>分离出来的子仓库，像是复制出来的样子。</li>\n<li>在子仓库做的改动，母仓库能有检索。 这与 <code>submodule</code> 有差异。</li>\n</ol>\n<h2 id=\"二、submodule-gt-在自己的-git-仓库上模拟试验\"><a href=\"#二、submodule-gt-在自己的-git-仓库上模拟试验\" class=\"headerlink\" title=\"二、submodule -&gt; 在自己的 git 仓库上模拟试验\"></a>二、submodule -&gt; 在自己的 git 仓库上模拟试验</h2><blockquote>\n<ul>\n<li>措施： 使用 「filter-branch + submodule」</li>\n<li>结果： 试验成功，未采用 <code>submodule</code></li>\n<li>原因： <code>submodule</code> 已经使用过，然存有潜在的问题</li>\n</ul>\n</blockquote>\n<h3 id=\"1-剥离\"><a href=\"#1-剥离\" class=\"headerlink\" title=\"1. 剥离\"></a>1. 剥离</h3><p>目的：将目标子仓库分离出来</p>\n<ol>\n<li><code>clone</code> 出一个新的仓库到目录 test （这时候 test 的目录，与test-mama完全一样） <pre><code>$ git clone test-mama test\n</code></pre></li>\n<li>刚克隆出来的 test 仓库本地只会有一个分支，如果需要其他分支，则创建；（本仓库没有分，故没进行这一步）<pre><code>$ git branch br1 origin/br1  \n$ git branch br2 origin/br2 \n</code></pre></li>\n<li>最后origin这个remote是不需要的，把它删除了<pre><code>$ git remote rm origin\n</code></pre></li>\n</ol>\n<h3 id=\"2-独立\"><a href=\"#2-独立\" class=\"headerlink\" title=\"2. 独立\"></a>2. 独立</h3><ol>\n<li><p>将本仓库转化为 git 子模块！（这个最重要）</p>\n<blockquote>\n<p>该命令过滤所有历史提交，保留对 test 子目录有影响的提交，并且把子目录设为该仓库的根目录。<br>该命令执行完毕后，查看当前目录结构就会发现里面已经是子目录的内容了。<br><code>$ git filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter git -- --all</code></p>\n</blockquote>\n</li>\n<li><p>清理仓库</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git reset --hard</div><div class=\"line\"><span class=\"meta\">$</span> git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d</div><div class=\"line\"><span class=\"meta\">$</span> git reflog expire --expire=now --all</div><div class=\"line\"><span class=\"meta\">$</span> git gc --aggressive --prune=now</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<ol>\n<li>最后，我们就可以把这个新的仓库提交到服务器上，然后把旧仓库中的 git 子目录删除并以 <code>submodule</code> 的方式添加 test-mama 仓库就好了。</li>\n</ol>\n<h3 id=\"3-关联\"><a href=\"#3-关联\" class=\"headerlink\" title=\"3. 关联\"></a>3. 关联</h3><ol>\n<li><p>将整理好的仓库同步到服务器新的仓库地址；</p>\n<blockquote>\n<p>未尝试</p>\n</blockquote>\n</li>\n<li><p>然后把旧仓库中的 git 子目录删除，并以 submodle 的方式添加即可。</p>\n<blockquote>\n<p>未尝试</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"三、在-project-a-项目上实现\"><a href=\"#三、在-project-a-项目上实现\" class=\"headerlink\" title=\"三、在 project-a 项目上实现\"></a>三、在 project-a 项目上实现</h2><blockquote>\n<ul>\n<li>措施： 使用 「filter-branch + submodule」</li>\n<li>结果： 试验完成，正在使用，等待一段时间后的反馈</li>\n<li>原因： 因为 <code>subtree</code> 非完全独立仓库，也因为原来就是用着 <code>submodule</code> 存在潜在的问题，所以只采取了 <code>filter-branch</code> 分离措施；</li>\n</ul>\n</blockquote>\n<h3 id=\"1-剥离-1\"><a href=\"#1-剥离-1\" class=\"headerlink\" title=\"1.剥离\"></a>1.剥离</h3><p>目的：将目标子目录「model-a」分离出来</p>\n<ol>\n<li><p><code>clone</code> 出一个新的仓库到目录 plan-tool</p>\n<pre><code>$ git clone ssh://git@****/****/project-a.src.git plan-tool\n</code></pre></li>\n<li><p>添加其他必要的分支</p>\n<pre><code>$ git branch park-data  origin/park-data \n$ git branch publish/data origin/publish/data\n</code></pre></li>\n<li><p>最后origin这个remote是不需要的，把它删除了</p>\n<pre><code>$ git remote rm origin\n</code></pre></li>\n</ol>\n<h3 id=\"2-独立-1\"><a href=\"#2-独立-1\" class=\"headerlink\" title=\"2.独立\"></a>2.独立</h3><p>目的：将子目录独立出新的仓库</p>\n<ol>\n<li><p>将本目录中的 「model-a」 转化为本仓库的根目录</p>\n<blockquote>\n<p>这个没有删除 tag<br><code>$ git filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter model-a -- --all</code></p>\n</blockquote>\n</li>\n<li><p>整理仓库，清除无用信息</p>\n<blockquote>\n<p>下面的命令具体干了什么不知道，但是文件夹真的变小了。  本次操作中，4G -&gt; 256M</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git reset --hard</div><div class=\"line\"><span class=\"meta\">$</span> git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d</div><div class=\"line\"><span class=\"meta\">$</span> git reflog expire --expire=now --all</div><div class=\"line\"><span class=\"meta\">$</span> git gc --aggressive --prune=now</div><div class=\"line\"><span class=\"meta\">$</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-关联-1\"><a href=\"#3-关联-1\" class=\"headerlink\" title=\"3.关联\"></a>3.关联</h3><p>目的：a. 将本地仓库与服务器的新仓库关联； b. 将子仓库与母仓库关联；</p>\n<ol>\n<li>将本地仓库，与服务器上新建的仓库关联起来</li>\n</ol>\n<p><code>$ git remote add origin ssh://git@****/****/project-a.src.plat-tool.git</code></p>\n<ol>\n<li><p>推送仓库</p>\n<blockquote>\n<p>推送指定 <code>&lt;branch&gt;</code> 分支<br><code>$ git push -u origin &lt;branch&gt;</code><br>推送所有分支到远程仓库<br><code>$ git push --all</code></p>\n</blockquote>\n</li>\n<li><p>与母仓库关联</p>\n<blockquote>\n<p>暂时不做关联，直接以目录的方式放在「src」目录下</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h2><h3 id=\"submodule-与-subtree-对比\"><a href=\"#submodule-与-subtree-对比\" class=\"headerlink\" title=\"submodule 与 subtree 对比\"></a>submodule 与 subtree 对比</h3><blockquote>\n<p>在使用感觉上， <code>git submodule</code> 类似于引用仓库，而 <code>git subtree</code> 似徐于复制仓库。<br>使用 <code>git submodule</code></p>\n</blockquote>\n<ol>\n<li>母仓库与子仓库各自的 <code>pull</code> 与 <code>push</code> 互不关联，母仓库只知道子仓库有改动，但具体的改动不能知道。</li>\n</ol>\n<p>使用 <code>git subtree</code></p>\n<ol>\n<li>子仓库做具体的修改，母仓库可知道。并且在母仓库可提交与记录子仓库的改动。</li>\n<li>使用 <code>git subtree push</code> 可在母仓库的提交中遍历出与子仓库相关的改动，单独提交与记录到子仓库上。</li>\n</ol>\n<h3 id=\"filter-branch-使用\"><a href=\"#filter-branch-使用\" class=\"headerlink\" title=\"filter-branch 使用\"></a>filter-branch 使用</h3><blockquote>\n<p>此命令用于仓库分离，以后再详细研究；</p>\n</blockquote>\n<h3 id=\"Git仓库清理\"><a href=\"#Git仓库清理\" class=\"headerlink\" title=\"Git仓库清理\"></a>Git仓库清理</h3><blockquote>\n<p>有命令可以让 Git 仓库瘦身，下次在 「project-a」上尝试<br>用一下命令清理「project-a」仓库，从 25.8 GB -&gt; 24.3 GB<br>以下为操作指令，效果很不明显。 原因不明，日后再查</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git gc --aggressive --prune=now</div><div class=\"line\">对象计数中: 77604, 完成.</div><div class=\"line\">Delta compression using up to 4 threads.</div><div class=\"line\">压缩对象中: 100% (73701/73701), 完成.</div><div class=\"line\">写入对象中: 100% (77604/77604), 完成.</div><div class=\"line\">Total 77604 (delta 35291), reused 40791 (delta 0)</div><div class=\"line\">正在删除重复对象: 100% (256/256), 完成.</div><div class=\"line\">检查连接中: 77604, 完成.</div></pre></td></tr></table></figure>\n<hr>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjm7enz9f0000l1sk7sufq6hv","category_id":"cjm7enz9w0004l1skoupkoain","_id":"cjm7enzab000gl1sku7kls61l"},{"post_id":"cjm7enz9s0002l1skfz5yvm2s","category_id":"cjm7enz9w0004l1skoupkoain","_id":"cjm7enzag000ll1skbjyshf39"},{"post_id":"cjm7enz9z0006l1skq5mrs1y4","category_id":"cjm7enz9w0004l1skoupkoain","_id":"cjm7enzam000pl1sk3ui5mgvb"},{"post_id":"cjm7enza10008l1sk7j69xh44","category_id":"cjm7enzag000kl1sk5yfdggz8","_id":"cjm7enzar000wl1sk4z7ffnu2"},{"post_id":"cjm7enza3000al1sk9o1wxyvf","category_id":"cjm7enzag000kl1sk5yfdggz8","_id":"cjm7enzau0012l1sk7ho6d2j5"},{"post_id":"cjm7enza8000dl1skfuajy0p5","category_id":"cjm7enzaq000vl1sk6slpun2y","_id":"cjm7enzay0017l1skjkh1lfio"},{"post_id":"cjm7enzaa000el1sk2f8o3a03","category_id":"cjm7enzaq000vl1sk6slpun2y","_id":"cjm7enzaz001al1skk4cfzbog"},{"post_id":"cjm7enzac000il1sk8l5kj1pv","category_id":"cjm7enzay0016l1sk1cqvdhlr","_id":"cjm7enzb0001gl1skm77vz2o6"},{"post_id":"cjm7enzaf000jl1skuytl0p6p","category_id":"cjm7enzay0016l1sk1cqvdhlr","_id":"cjm7enzb1001jl1sk12014yai"},{"post_id":"cjm7enzah000nl1skxjecjls4","category_id":"cjm7enzay0016l1sk1cqvdhlr","_id":"cjm7enzb2001ll1skuqhj0iu9"},{"post_id":"cjm7enzai000ol1skomt8k9em","category_id":"cjm7enzb1001il1skvuj0etnt","_id":"cjm7enzb3001rl1skvzzngymd"},{"post_id":"cjm7enzan000sl1skyn5yb8ko","category_id":"cjm7enzb2001nl1skleaxh1az","_id":"cjm7enzb4001wl1skj3geb0k1"},{"post_id":"cjm7enzap000ul1skl05m3spb","category_id":"cjm7enzb2001nl1skleaxh1az","_id":"cjm7enzb5001zl1sk95a1cgfr"},{"post_id":"cjm7enzar000zl1sk4zyhbhxh","category_id":"cjm7enzb2001nl1skleaxh1az","_id":"cjm7enzb60021l1sk7cix3cwe"},{"post_id":"cjm7enzat0011l1skwrzzija0","category_id":"cjm7enzb2001nl1skleaxh1az","_id":"cjm7enzb70025l1sktp5fayhn"},{"post_id":"cjm7enzls0043l1skejqi8omy","category_id":"cjm7enzag000kl1sk5yfdggz8","_id":"cjm7enzlu0045l1ske7gutund"}],"PostTag":[{"post_id":"cjm7enz9f0000l1sk7sufq6hv","tag_id":"cjm7enz9y0005l1skk8s0ca2y","_id":"cjm7enzap000tl1skkc0ncc0d"},{"post_id":"cjm7enz9f0000l1sk7sufq6hv","tag_id":"cjm7enza4000cl1skw2tblk3m","_id":"cjm7enzar000xl1sk8pvwpt6i"},{"post_id":"cjm7enz9f0000l1sk7sufq6hv","tag_id":"cjm7enzac000hl1sk5uxgwzuy","_id":"cjm7enzat0010l1ski245c60i"},{"post_id":"cjm7enz9f0000l1sk7sufq6hv","tag_id":"cjm7enzag000ml1skdtp0lw4c","_id":"cjm7enzau0014l1skltg5ib2c"},{"post_id":"cjm7enz9s0002l1skfz5yvm2s","tag_id":"cjm7enz9y0005l1skk8s0ca2y","_id":"cjm7enzaz0019l1ska1yvoccr"},{"post_id":"cjm7enz9s0002l1skfz5yvm2s","tag_id":"cjm7enzar000yl1sku74b34q2","_id":"cjm7enzaz001cl1skw58mabp2"},{"post_id":"cjm7enz9s0002l1skfz5yvm2s","tag_id":"cjm7enzav0015l1skld1k4mx8","_id":"cjm7enzb0001el1sk0zi44mrw"},{"post_id":"cjm7enz9z0006l1skq5mrs1y4","tag_id":"cjm7enzay0018l1skxuj3r74e","_id":"cjm7enzb2001ml1skxcm33cf0"},{"post_id":"cjm7enz9z0006l1skq5mrs1y4","tag_id":"cjm7enzb0001dl1sk1k1xrwej","_id":"cjm7enzb2001ol1sku1em8u6b"},{"post_id":"cjm7enz9z0006l1skq5mrs1y4","tag_id":"cjm7enzb1001hl1skeqwiepcz","_id":"cjm7enzb3001ql1skccyff0lo"},{"post_id":"cjm7enza10008l1sk7j69xh44","tag_id":"cjm7enzb1001kl1skpmuewqfq","_id":"cjm7enzb3001tl1skrdruhl85"},{"post_id":"cjm7enza3000al1sk9o1wxyvf","tag_id":"cjm7enzb1001kl1skpmuewqfq","_id":"cjm7enzb60022l1sk6jkjdsme"},{"post_id":"cjm7enza3000al1sk9o1wxyvf","tag_id":"cjm7enzb4001ul1sk5wwdf3d8","_id":"cjm7enzb60023l1sk40078eoj"},{"post_id":"cjm7enza3000al1sk9o1wxyvf","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzb70026l1sk54fr85tx"},{"post_id":"cjm7enza8000dl1skfuajy0p5","tag_id":"cjm7enzb60020l1sk0amtpf1n","_id":"cjm7enzb80028l1skzihbrjcf"},{"post_id":"cjm7enza8000dl1skfuajy0p5","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzb80029l1skwcqzuaqe"},{"post_id":"cjm7enzaa000el1sk2f8o3a03","tag_id":"cjm7enzb70027l1skcvxbrh4b","_id":"cjm7enzb9002cl1skfef8xp59"},{"post_id":"cjm7enzaa000el1sk2f8o3a03","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzb9002dl1skyqs2ni70"},{"post_id":"cjm7enzac000il1sk8l5kj1pv","tag_id":"cjm7enzb9002bl1sk32jyrx6c","_id":"cjm7enzbb002il1sktzax615h"},{"post_id":"cjm7enzac000il1sk8l5kj1pv","tag_id":"cjm7enzb9002el1sk1sne9ikj","_id":"cjm7enzbb002jl1skhe0j47vp"},{"post_id":"cjm7enzac000il1sk8l5kj1pv","tag_id":"cjm7enzba002fl1skt9jx2xc3","_id":"cjm7enzbc002ll1sknzm7rkg2"},{"post_id":"cjm7enzac000il1sk8l5kj1pv","tag_id":"cjm7enzba002gl1sk5wqqzskx","_id":"cjm7enzbc002ml1sk5tc5fv9q"},{"post_id":"cjm7enzaf000jl1skuytl0p6p","tag_id":"cjm7enzb9002bl1sk32jyrx6c","_id":"cjm7enzbe002ql1skrkl7r778"},{"post_id":"cjm7enzaf000jl1skuytl0p6p","tag_id":"cjm7enzbb002kl1skxixys96b","_id":"cjm7enzbe002rl1sk4kzfkvrb"},{"post_id":"cjm7enzaf000jl1skuytl0p6p","tag_id":"cjm7enzba002fl1skt9jx2xc3","_id":"cjm7enzbe002tl1skz8xztle3"},{"post_id":"cjm7enzaf000jl1skuytl0p6p","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzbe002ul1sk3zdmxvdf"},{"post_id":"cjm7enzah000nl1skxjecjls4","tag_id":"cjm7enzbd002pl1skjfkmto07","_id":"cjm7enzbg002yl1skffm2t6rf"},{"post_id":"cjm7enzah000nl1skxjecjls4","tag_id":"cjm7enzbe002sl1skuogfd9hp","_id":"cjm7enzbg002zl1skjul0jg7i"},{"post_id":"cjm7enzah000nl1skxjecjls4","tag_id":"cjm7enzbf002vl1skgtkm8gie","_id":"cjm7enzbg0031l1skcftdtwck"},{"post_id":"cjm7enzah000nl1skxjecjls4","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzbg0032l1skyvshzpci"},{"post_id":"cjm7enzai000ol1skomt8k9em","tag_id":"cjm7enzbf002xl1sk1xk0xziy","_id":"cjm7enzbh0035l1skkya1m7h2"},{"post_id":"cjm7enzai000ol1skomt8k9em","tag_id":"cjm7enzbg0030l1skdcs3hu9x","_id":"cjm7enzbh0036l1skzpztkf4n"},{"post_id":"cjm7enzai000ol1skomt8k9em","tag_id":"cjm7enzbg0033l1skhebjk9rf","_id":"cjm7enzbh0038l1skcs6akiv4"},{"post_id":"cjm7enzan000sl1skyn5yb8ko","tag_id":"cjm7enzbh0034l1sk6zrv608l","_id":"cjm7enzbr003cl1skwojr6hx7"},{"post_id":"cjm7enzan000sl1skyn5yb8ko","tag_id":"cjm7enzbh0037l1skeduy1lzr","_id":"cjm7enzbr003dl1skikm7w5rk"},{"post_id":"cjm7enzan000sl1skyn5yb8ko","tag_id":"cjm7enzay0018l1skxuj3r74e","_id":"cjm7enzbs003fl1sk7k7iyl97"},{"post_id":"cjm7enzan000sl1skyn5yb8ko","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzbs003gl1skquwqgfnw"},{"post_id":"cjm7enzap000ul1skl05m3spb","tag_id":"cjm7enzbj003bl1sk74dlikrk","_id":"cjm7enzbu003ll1skcq63ttoq"},{"post_id":"cjm7enzap000ul1skl05m3spb","tag_id":"cjm7enzbr003el1skxey3tw35","_id":"cjm7enzbv003ml1skxle30gxt"},{"post_id":"cjm7enzap000ul1skl05m3spb","tag_id":"cjm7enzbs003hl1sk43siad2l","_id":"cjm7enzbv003ol1sk58kqju3m"},{"post_id":"cjm7enzap000ul1skl05m3spb","tag_id":"cjm7enzbt003il1skx49f2pps","_id":"cjm7enzbw003pl1skmixkuala"},{"post_id":"cjm7enzap000ul1skl05m3spb","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzbw003rl1skqfrmfxkz"},{"post_id":"cjm7enzar000zl1sk4zyhbhxh","tag_id":"cjm7enzbu003kl1skjzlqv6k9","_id":"cjm7enzby003ul1skphsfqny2"},{"post_id":"cjm7enzar000zl1sk4zyhbhxh","tag_id":"cjm7enzbh0037l1skeduy1lzr","_id":"cjm7enzbz003vl1skaprbk3go"},{"post_id":"cjm7enzar000zl1sk4zyhbhxh","tag_id":"cjm7enzay0018l1skxuj3r74e","_id":"cjm7enzbz003xl1skv7c639ir"},{"post_id":"cjm7enzar000zl1sk4zyhbhxh","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzbz003yl1sk4zyu7t7c"},{"post_id":"cjm7enzat0011l1skwrzzija0","tag_id":"cjm7enzbr003el1skxey3tw35","_id":"cjm7enzc00040l1skwq0kmh28"},{"post_id":"cjm7enzat0011l1skwrzzija0","tag_id":"cjm7enzbz003wl1sk1p54y87c","_id":"cjm7enzc10041l1sk1m5kc1x0"},{"post_id":"cjm7enzat0011l1skwrzzija0","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzc10042l1skz8mj8nzb"},{"post_id":"cjm7enzls0043l1skejqi8omy","tag_id":"cjm7enzb1001kl1skpmuewqfq","_id":"cjm7enzlv0046l1skxunnpifk"},{"post_id":"cjm7enzls0043l1skejqi8omy","tag_id":"cjm7enzlu0044l1skoob1p9lw","_id":"cjm7enzlv0047l1skvt0lkiwf"},{"post_id":"cjm7enzls0043l1skejqi8omy","tag_id":"cjm7enzb5001xl1skihxpd58h","_id":"cjm7enzlw0048l1skx3r43jtw"}],"Tag":[{"name":"Docker","_id":"cjm7enz9y0005l1skk8s0ca2y"},{"name":"Front","_id":"cjm7enza4000cl1skw2tblk3m"},{"name":"Yarn","_id":"cjm7enzac000hl1sk5uxgwzuy"},{"name":"Nodejs","_id":"cjm7enzag000ml1skdtp0lw4c"},{"name":"Python","_id":"cjm7enzar000yl1sku74b34q2"},{"name":"Hexo","_id":"cjm7enzav0015l1skld1k4mx8"},{"name":"docker","_id":"cjm7enzay0018l1skxuj3r74e"},{"name":"load","_id":"cjm7enzb0001dl1sk1k1xrwej"},{"name":"export","_id":"cjm7enzb1001hl1skeqwiepcz"},{"name":"git","_id":"cjm7enzb1001kl1skpmuewqfq"},{"name":"submodule","_id":"cjm7enzb4001ul1sk5wwdf3d8"},{"name":"note","_id":"cjm7enzb5001xl1skihxpd58h"},{"name":"swap","_id":"cjm7enzb60020l1sk0amtpf1n"},{"name":"cache","_id":"cjm7enzb70027l1skcvxbrh4b"},{"name":"android","_id":"cjm7enzb9002bl1sk32jyrx6c"},{"name":"sekector","_id":"cjm7enzb9002el1sk1sne9ikj"},{"name":"xml","_id":"cjm7enzba002fl1skt9jx2xc3"},{"name":"tools","_id":"cjm7enzba002gl1sk5wqqzskx"},{"name":"card","_id":"cjm7enzbb002kl1skxixys96b"},{"name":"Android","_id":"cjm7enzbd002pl1skjfkmto07"},{"name":"自定义控件","_id":"cjm7enzbe002sl1skuogfd9hp"},{"name":"比例尺","_id":"cjm7enzbf002vl1skgtkm8gie"},{"name":"vue","_id":"cjm7enzbf002xl1sk1xk0xziy"},{"name":"front","_id":"cjm7enzbg0030l1skdcs3hu9x"},{"name":"webpack","_id":"cjm7enzbg0033l1skhebjk9rf"},{"name":"gogs","_id":"cjm7enzbh0034l1sk6zrv608l"},{"name":"offline","_id":"cjm7enzbh0037l1skeduy1lzr"},{"name":"VMware","_id":"cjm7enzbj003bl1sk74dlikrk"},{"name":"server","_id":"cjm7enzbr003el1skxey3tw35"},{"name":"memory","_id":"cjm7enzbs003hl1sk43siad2l"},{"name":"douker","_id":"cjm7enzbt003il1skx49f2pps"},{"name":"jenkins","_id":"cjm7enzbu003kl1skjzlqv6k9"},{"name":"back-up","_id":"cjm7enzbz003wl1sk1p54y87c"},{"name":"仓库独立","_id":"cjm7enzlu0044l1skoob1p9lw"}]}}